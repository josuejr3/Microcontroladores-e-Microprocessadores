
conversores_adc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003c04  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003bc  08003d98  08003d98  00004d98  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004154  08004154  000061cc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08004154  08004154  00005154  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800415c  0800415c  000061cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800415c  0800415c  0000515c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004160  08004160  00005160  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001cc  20000000  08004164  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000061cc  2**0
                  CONTENTS
 10 .bss          00000170  200001cc  200001cc  000061cc  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000033c  2000033c  000061cc  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000061cc  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002cf4  00000000  00000000  000061fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000916  00000000  00000000  00008ef0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000378  00000000  00000000  00009808  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000027f  00000000  00000000  00009b80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000201a5  00000000  00000000  00009dff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00003f64  00000000  00000000  00029fa4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000c19f7  00000000  00000000  0002df08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000ef8ff  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001cf8  00000000  00000000  000ef944  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000086  00000000  00000000  000f163c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001cc 	.word	0x200001cc
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08003d7c 	.word	0x08003d7c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001d0 	.word	0x200001d0
 80001cc:	08003d7c 	.word	0x08003d7c

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8000ba8:	b480      	push	{r7}
 8000baa:	b085      	sub	sp, #20
 8000bac:	af00      	add	r7, sp, #0
 8000bae:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8000bb0:	687b      	ldr	r3, [r7, #4]
 8000bb2:	f003 0307 	and.w	r3, r3, #7
 8000bb6:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8000bb8:	4b0c      	ldr	r3, [pc, #48]	@ (8000bec <__NVIC_SetPriorityGrouping+0x44>)
 8000bba:	68db      	ldr	r3, [r3, #12]
 8000bbc:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8000bbe:	68ba      	ldr	r2, [r7, #8]
 8000bc0:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8000bc4:	4013      	ands	r3, r2
 8000bc6:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8000bc8:	68fb      	ldr	r3, [r7, #12]
 8000bca:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8000bcc:	68bb      	ldr	r3, [r7, #8]
 8000bce:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8000bd0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000bd4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000bd8:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8000bda:	4a04      	ldr	r2, [pc, #16]	@ (8000bec <__NVIC_SetPriorityGrouping+0x44>)
 8000bdc:	68bb      	ldr	r3, [r7, #8]
 8000bde:	60d3      	str	r3, [r2, #12]
}
 8000be0:	bf00      	nop
 8000be2:	3714      	adds	r7, #20
 8000be4:	46bd      	mov	sp, r7
 8000be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bea:	4770      	bx	lr
 8000bec:	e000ed00 	.word	0xe000ed00

08000bf0 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000bf0:	b480      	push	{r7}
 8000bf2:	b083      	sub	sp, #12
 8000bf4:	af00      	add	r7, sp, #0
 8000bf6:	4603      	mov	r3, r0
 8000bf8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000bfa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bfe:	2b00      	cmp	r3, #0
 8000c00:	db0b      	blt.n	8000c1a <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c02:	79fb      	ldrb	r3, [r7, #7]
 8000c04:	f003 021f 	and.w	r2, r3, #31
 8000c08:	4907      	ldr	r1, [pc, #28]	@ (8000c28 <__NVIC_EnableIRQ+0x38>)
 8000c0a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c0e:	095b      	lsrs	r3, r3, #5
 8000c10:	2001      	movs	r0, #1
 8000c12:	fa00 f202 	lsl.w	r2, r0, r2
 8000c16:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8000c1a:	bf00      	nop
 8000c1c:	370c      	adds	r7, #12
 8000c1e:	46bd      	mov	sp, r7
 8000c20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c24:	4770      	bx	lr
 8000c26:	bf00      	nop
 8000c28:	e000e100 	.word	0xe000e100

08000c2c <Utility_Init>:
//Declarações de funções úteis

//Funções de configuração do sistema de clock do STM32
//Inicialização de funções da biblioteca
void Utility_Init(void)
{
 8000c2c:	b580      	push	{r7, lr}
 8000c2e:	af00      	add	r7, sp, #0
	Configure_Clock();	//inicializa o sistema de clock
 8000c30:	f000 f804 	bl	8000c3c <Configure_Clock>
	TIM2_Setup();		//configura o Timer2 como base de tempo de 1us
 8000c34:	f000 f86c 	bl	8000d10 <TIM2_Setup>
}
 8000c38:	bf00      	nop
 8000c3a:	bd80      	pop	{r7, pc}

08000c3c <Configure_Clock>:
//HCLK = 168 MHz
//APB1 = 42 MHz
//APB2 = 84 MHz
//USB, RNG, SDIO = 48 MHz
void Configure_Clock(void)
{
 8000c3c:	b580      	push	{r7, lr}
 8000c3e:	af00      	add	r7, sp, #0
	#define PLL_N	168
	#define PLL_P	2
	#define PLL_Q	7

	//Configurações da Flash e do regulador de tensão para permitir operação em alta velocidade
	FLASH->ACR = FLASH_ACR_PRFTEN | FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;	//habilita prefetch, caches e a latência da flash
 8000c40:	4b2e      	ldr	r3, [pc, #184]	@ (8000cfc <Configure_Clock+0xc0>)
 8000c42:	f240 7205 	movw	r2, #1797	@ 0x705
 8000c46:	601a      	str	r2, [r3, #0]
	RCC->APB1ENR |= RCC_APB1ENR_PWREN;	//habilita o clock da interface de energia
 8000c48:	4b2d      	ldr	r3, [pc, #180]	@ (8000d00 <Configure_Clock+0xc4>)
 8000c4a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000c4c:	4a2c      	ldr	r2, [pc, #176]	@ (8000d00 <Configure_Clock+0xc4>)
 8000c4e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000c52:	6413      	str	r3, [r2, #64]	@ 0x40
	PWR->CR |= PWR_CR_VOS;				//regulador de tensão no modo 2
 8000c54:	4b2b      	ldr	r3, [pc, #172]	@ (8000d04 <Configure_Clock+0xc8>)
 8000c56:	681b      	ldr	r3, [r3, #0]
 8000c58:	4a2a      	ldr	r2, [pc, #168]	@ (8000d04 <Configure_Clock+0xc8>)
 8000c5a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000c5e:	6013      	str	r3, [r2, #0]

	//Configuração do modo de agrupamento de prioridades das interrupções
	NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000c60:	2003      	movs	r0, #3
 8000c62:	f7ff ffa1 	bl	8000ba8 <__NVIC_SetPriorityGrouping>

	//Reseta os registradores do módulo RCC para o estado inicial
	RCC->CIR = 0;				//desabilita todas as interrupções de RCC
 8000c66:	4b26      	ldr	r3, [pc, #152]	@ (8000d00 <Configure_Clock+0xc4>)
 8000c68:	2200      	movs	r2, #0
 8000c6a:	60da      	str	r2, [r3, #12]
	RCC->CR |= RCC_CR_HSION;	//liga o oscilador HSI
 8000c6c:	4b24      	ldr	r3, [pc, #144]	@ (8000d00 <Configure_Clock+0xc4>)
 8000c6e:	681b      	ldr	r3, [r3, #0]
 8000c70:	4a23      	ldr	r2, [pc, #140]	@ (8000d00 <Configure_Clock+0xc4>)
 8000c72:	f043 0301 	orr.w	r3, r3, #1
 8000c76:	6013      	str	r3, [r2, #0]
	RCC->CFGR = 0;				//reseta o registrador CFGR
 8000c78:	4b21      	ldr	r3, [pc, #132]	@ (8000d00 <Configure_Clock+0xc4>)
 8000c7a:	2200      	movs	r2, #0
 8000c7c:	609a      	str	r2, [r3, #8]
	//Desliga HSE, CSS e o PLL e o bypass de HSE
	RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLLON | RCC_CR_HSEBYP);
 8000c7e:	4b20      	ldr	r3, [pc, #128]	@ (8000d00 <Configure_Clock+0xc4>)
 8000c80:	681b      	ldr	r3, [r3, #0]
 8000c82:	4a1f      	ldr	r2, [pc, #124]	@ (8000d00 <Configure_Clock+0xc4>)
 8000c84:	f023 7386 	bic.w	r3, r3, #17563648	@ 0x10c0000
 8000c88:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8000c8c:	6013      	str	r3, [r2, #0]
	RCC->PLLCFGR = 0x24003010;	//reseta o registrador PLLCFGR
 8000c8e:	4b1c      	ldr	r3, [pc, #112]	@ (8000d00 <Configure_Clock+0xc4>)
 8000c90:	4a1d      	ldr	r2, [pc, #116]	@ (8000d08 <Configure_Clock+0xcc>)
 8000c92:	605a      	str	r2, [r3, #4]

	//Configura a fonte de clock (HSE), os parâmetros do PLL e prescalers dos barramentos AHB, APB
	RCC->CR |= RCC_CR_HSEON;				//habilita HSE
 8000c94:	4b1a      	ldr	r3, [pc, #104]	@ (8000d00 <Configure_Clock+0xc4>)
 8000c96:	681b      	ldr	r3, [r3, #0]
 8000c98:	4a19      	ldr	r2, [pc, #100]	@ (8000d00 <Configure_Clock+0xc4>)
 8000c9a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000c9e:	6013      	str	r3, [r2, #0]
	while(!((RCC->CR) & RCC_CR_HSERDY));	//espera HSE ficar pronto
 8000ca0:	bf00      	nop
 8000ca2:	4b17      	ldr	r3, [pc, #92]	@ (8000d00 <Configure_Clock+0xc4>)
 8000ca4:	681b      	ldr	r3, [r3, #0]
 8000ca6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000caa:	2b00      	cmp	r3, #0
 8000cac:	d0f9      	beq.n	8000ca2 <Configure_Clock+0x66>
    RCC->CFGR |= 0x9400;	//HCLK = SYSCLK/1, PCLK2 = HCLK/2, PCLK1 = HCLK/4
 8000cae:	4b14      	ldr	r3, [pc, #80]	@ (8000d00 <Configure_Clock+0xc4>)
 8000cb0:	689b      	ldr	r3, [r3, #8]
 8000cb2:	4a13      	ldr	r2, [pc, #76]	@ (8000d00 <Configure_Clock+0xc4>)
 8000cb4:	f443 4314 	orr.w	r3, r3, #37888	@ 0x9400
 8000cb8:	6093      	str	r3, [r2, #8]

    //Configura a fonte de clock e os parâmetros do PLL principal
    RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) | (0x400000) | (PLL_Q << 24);
 8000cba:	4b11      	ldr	r3, [pc, #68]	@ (8000d00 <Configure_Clock+0xc4>)
 8000cbc:	4a13      	ldr	r2, [pc, #76]	@ (8000d0c <Configure_Clock+0xd0>)
 8000cbe:	605a      	str	r2, [r3, #4]

    RCC->CR |= RCC_CR_PLLON;			//habilita o PLL
 8000cc0:	4b0f      	ldr	r3, [pc, #60]	@ (8000d00 <Configure_Clock+0xc4>)
 8000cc2:	681b      	ldr	r3, [r3, #0]
 8000cc4:	4a0e      	ldr	r2, [pc, #56]	@ (8000d00 <Configure_Clock+0xc4>)
 8000cc6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000cca:	6013      	str	r3, [r2, #0]
    while(!(RCC->CR & RCC_CR_PLLRDY));	//espera o PLL ficar pronto verificando a flag PLLRDY
 8000ccc:	bf00      	nop
 8000cce:	4b0c      	ldr	r3, [pc, #48]	@ (8000d00 <Configure_Clock+0xc4>)
 8000cd0:	681b      	ldr	r3, [r3, #0]
 8000cd2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000cd6:	2b00      	cmp	r3, #0
 8000cd8:	d0f9      	beq.n	8000cce <Configure_Clock+0x92>

    RCC->CFGR |= 0x2;					//seleciona o PLL como fonte de SYSCLK
 8000cda:	4b09      	ldr	r3, [pc, #36]	@ (8000d00 <Configure_Clock+0xc4>)
 8000cdc:	689b      	ldr	r3, [r3, #8]
 8000cde:	4a08      	ldr	r2, [pc, #32]	@ (8000d00 <Configure_Clock+0xc4>)
 8000ce0:	f043 0302 	orr.w	r3, r3, #2
 8000ce4:	6093      	str	r3, [r2, #8]
    while((RCC->CFGR & 0xC) != 0x8);	//espera o PLL ser a fonte de SYSCLK
 8000ce6:	bf00      	nop
 8000ce8:	4b05      	ldr	r3, [pc, #20]	@ (8000d00 <Configure_Clock+0xc4>)
 8000cea:	689b      	ldr	r3, [r3, #8]
 8000cec:	f003 030c 	and.w	r3, r3, #12
 8000cf0:	2b08      	cmp	r3, #8
 8000cf2:	d1f9      	bne.n	8000ce8 <Configure_Clock+0xac>
}
 8000cf4:	bf00      	nop
 8000cf6:	bf00      	nop
 8000cf8:	bd80      	pop	{r7, pc}
 8000cfa:	bf00      	nop
 8000cfc:	40023c00 	.word	0x40023c00
 8000d00:	40023800 	.word	0x40023800
 8000d04:	40007000 	.word	0x40007000
 8000d08:	24003010 	.word	0x24003010
 8000d0c:	07402a04 	.word	0x07402a04

08000d10 <TIM2_Setup>:


//Funções de timers e temporização
//Configura o timer 2 como base de tempo de 1us
void TIM2_Setup(void)
{
 8000d10:	b480      	push	{r7}
 8000d12:	af00      	add	r7, sp, #0
	//O modo padrão do contador é com contagem crescente
	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;	//liga o clock do Timer2
 8000d14:	4b0d      	ldr	r3, [pc, #52]	@ (8000d4c <TIM2_Setup+0x3c>)
 8000d16:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000d18:	4a0c      	ldr	r2, [pc, #48]	@ (8000d4c <TIM2_Setup+0x3c>)
 8000d1a:	f043 0301 	orr.w	r3, r3, #1
 8000d1e:	6413      	str	r3, [r2, #64]	@ 0x40
	TIM2->PSC = 83;						//prescaler para incrementos a cada 1uS
 8000d20:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000d24:	2253      	movs	r2, #83	@ 0x53
 8000d26:	629a      	str	r2, [r3, #40]	@ 0x28
	TIM2->EGR = TIM_EGR_UG;				//update event para escrever o valor do prescaler
 8000d28:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000d2c:	2201      	movs	r2, #1
 8000d2e:	615a      	str	r2, [r3, #20]
	TIM2->CR1 |= TIM_CR1_CEN;			//habilita o timer
 8000d30:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000d34:	681b      	ldr	r3, [r3, #0]
 8000d36:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000d3a:	f043 0301 	orr.w	r3, r3, #1
 8000d3e:	6013      	str	r3, [r2, #0]
}
 8000d40:	bf00      	nop
 8000d42:	46bd      	mov	sp, r7
 8000d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d48:	4770      	bx	lr
 8000d4a:	bf00      	nop
 8000d4c:	40023800 	.word	0x40023800

08000d50 <Delay_ms>:
	while(TIM2->CNT < delay);	//aguarda o tempo passar
}

//Criação de atraso em ms
void Delay_ms(uint32_t delay)
{
 8000d50:	b480      	push	{r7}
 8000d52:	b085      	sub	sp, #20
 8000d54:	af00      	add	r7, sp, #0
 8000d56:	6078      	str	r0, [r7, #4]
	uint32_t max = 1000*delay;
 8000d58:	687b      	ldr	r3, [r7, #4]
 8000d5a:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000d5e:	fb02 f303 	mul.w	r3, r2, r3
 8000d62:	60fb      	str	r3, [r7, #12]
	TIM2->CNT = 0;				//inicializa o contador com 0
 8000d64:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000d68:	2200      	movs	r2, #0
 8000d6a:	625a      	str	r2, [r3, #36]	@ 0x24
	while(TIM2->CNT < max);		//aguarda o tempo passar
 8000d6c:	bf00      	nop
 8000d6e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000d72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000d74:	68fa      	ldr	r2, [r7, #12]
 8000d76:	429a      	cmp	r2, r3
 8000d78:	d8f9      	bhi.n	8000d6e <Delay_ms+0x1e>
}
 8000d7a:	bf00      	nop
 8000d7c:	bf00      	nop
 8000d7e:	3714      	adds	r7, #20
 8000d80:	46bd      	mov	sp, r7
 8000d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d86:	4770      	bx	lr

08000d88 <GPIO_Clock_Enable>:


//Funções de manipulação de GPIO
//Habilita o clock de um GPIO
void GPIO_Clock_Enable(GPIO_TypeDef* GPIOx)
{
 8000d88:	b480      	push	{r7}
 8000d8a:	b083      	sub	sp, #12
 8000d8c:	af00      	add	r7, sp, #0
 8000d8e:	6078      	str	r0, [r7, #4]
	RCC->AHB1ENR |= (1 << ((uint32_t)GPIOx - (GPIOA_BASE)) / ((GPIOB_BASE) - (GPIOA_BASE)));
 8000d90:	4b09      	ldr	r3, [pc, #36]	@ (8000db8 <GPIO_Clock_Enable+0x30>)
 8000d92:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000d94:	687b      	ldr	r3, [r7, #4]
 8000d96:	f103 433f 	add.w	r3, r3, #3204448256	@ 0xbf000000
 8000d9a:	f503 037e 	add.w	r3, r3, #16646144	@ 0xfe0000
 8000d9e:	0a9b      	lsrs	r3, r3, #10
 8000da0:	2101      	movs	r1, #1
 8000da2:	fa01 f303 	lsl.w	r3, r1, r3
 8000da6:	4904      	ldr	r1, [pc, #16]	@ (8000db8 <GPIO_Clock_Enable+0x30>)
 8000da8:	4313      	orrs	r3, r2
 8000daa:	630b      	str	r3, [r1, #48]	@ 0x30
}
 8000dac:	bf00      	nop
 8000dae:	370c      	adds	r7, #12
 8000db0:	46bd      	mov	sp, r7
 8000db2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000db6:	4770      	bx	lr
 8000db8:	40023800 	.word	0x40023800

08000dbc <GPIO_Pin_Mode>:

//Configura o modo de operação de um pino de um GPIO
void GPIO_Pin_Mode(GPIO_TypeDef* GPIOx, uint8_t pin, uint8_t mode)
{
 8000dbc:	b480      	push	{r7}
 8000dbe:	b083      	sub	sp, #12
 8000dc0:	af00      	add	r7, sp, #0
 8000dc2:	6078      	str	r0, [r7, #4]
 8000dc4:	460b      	mov	r3, r1
 8000dc6:	70fb      	strb	r3, [r7, #3]
 8000dc8:	4613      	mov	r3, r2
 8000dca:	70bb      	strb	r3, [r7, #2]
	GPIOx->MODER &= ~(0b11 << 2*pin);	//reseta os 2 bits do modo de operação
 8000dcc:	687b      	ldr	r3, [r7, #4]
 8000dce:	681b      	ldr	r3, [r3, #0]
 8000dd0:	78fa      	ldrb	r2, [r7, #3]
 8000dd2:	0052      	lsls	r2, r2, #1
 8000dd4:	2103      	movs	r1, #3
 8000dd6:	fa01 f202 	lsl.w	r2, r1, r2
 8000dda:	43d2      	mvns	r2, r2
 8000ddc:	401a      	ands	r2, r3
 8000dde:	687b      	ldr	r3, [r7, #4]
 8000de0:	601a      	str	r2, [r3, #0]
	GPIOx->MODER |= (mode << 2*pin);	//configura o modo selecionado
 8000de2:	687b      	ldr	r3, [r7, #4]
 8000de4:	681b      	ldr	r3, [r3, #0]
 8000de6:	78b9      	ldrb	r1, [r7, #2]
 8000de8:	78fa      	ldrb	r2, [r7, #3]
 8000dea:	0052      	lsls	r2, r2, #1
 8000dec:	fa01 f202 	lsl.w	r2, r1, r2
 8000df0:	431a      	orrs	r2, r3
 8000df2:	687b      	ldr	r3, [r7, #4]
 8000df4:	601a      	str	r2, [r3, #0]
}
 8000df6:	bf00      	nop
 8000df8:	370c      	adds	r7, #12
 8000dfa:	46bd      	mov	sp, r7
 8000dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e00:	4770      	bx	lr
	...

08000e04 <ADC_Init>:
//Configura o clock do ADC selecionado e habilita o ADC.
//@param  ADCx: onde x pode ser 1, 2 ou 3 para selecionar o ADC desejado.
//@param  mode: modo de operação do ADC (SINGLE_CHANNEL ou MULTI_CHANNEL).
//@param  resolution: resolução da conversão do ADC (ADC_RES_12BITS, ADC_RES_10BITS, ADC_RES_8BITS ou ADC_RES_6BITS).
void ADC_Init(ADC_TypeDef *ADCx, uint8_t mode, uint8_t resolution)
{
 8000e04:	b580      	push	{r7, lr}
 8000e06:	b082      	sub	sp, #8
 8000e08:	af00      	add	r7, sp, #0
 8000e0a:	6078      	str	r0, [r7, #4]
 8000e0c:	460b      	mov	r3, r1
 8000e0e:	70fb      	strb	r3, [r7, #3]
 8000e10:	4613      	mov	r3, r2
 8000e12:	70bb      	strb	r3, [r7, #2]
	//Configuração do Clock do ADCx
	//Habilitação do Clock
	RCC->APB2ENR |= (1 << ((uint32_t)ADCx - (ADC1_BASE)) / ((ADC2_BASE) - (ADC1_BASE))) << 8;
 8000e14:	4b28      	ldr	r3, [pc, #160]	@ (8000eb8 <ADC_Init+0xb4>)
 8000e16:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000e18:	687b      	ldr	r3, [r7, #4]
 8000e1a:	f103 4340 	add.w	r3, r3, #3221225472	@ 0xc0000000
 8000e1e:	f5a3 3390 	sub.w	r3, r3, #73728	@ 0x12000
 8000e22:	0a1b      	lsrs	r3, r3, #8
 8000e24:	2101      	movs	r1, #1
 8000e26:	fa01 f303 	lsl.w	r3, r1, r3
 8000e2a:	021b      	lsls	r3, r3, #8
 8000e2c:	4922      	ldr	r1, [pc, #136]	@ (8000eb8 <ADC_Init+0xb4>)
 8000e2e:	4313      	orrs	r3, r2
 8000e30:	644b      	str	r3, [r1, #68]	@ 0x44

	//Configuração do prescaler do ADC
	ADC->CCR |= (0b01 << 16);	//prescaler /4 (84MHz/4 = 21MHz)
 8000e32:	4b22      	ldr	r3, [pc, #136]	@ (8000ebc <ADC_Init+0xb8>)
 8000e34:	685b      	ldr	r3, [r3, #4]
 8000e36:	4a21      	ldr	r2, [pc, #132]	@ (8000ebc <ADC_Init+0xb8>)
 8000e38:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000e3c:	6053      	str	r3, [r2, #4]

	//Configura modo de operação
	if(!mode)	//SINGLE_CHANNEL
 8000e3e:	78fb      	ldrb	r3, [r7, #3]
 8000e40:	2b00      	cmp	r3, #0
 8000e42:	d10c      	bne.n	8000e5e <ADC_Init+0x5a>
	{
		ADCx->CR1 &= ~ADC_CR1_SCAN;	//desabilita o escaneamento de canais
 8000e44:	687b      	ldr	r3, [r7, #4]
 8000e46:	685b      	ldr	r3, [r3, #4]
 8000e48:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8000e4c:	687b      	ldr	r3, [r7, #4]
 8000e4e:	605a      	str	r2, [r3, #4]
		ADC1->CR2 &= ~ADC_CR2_EOCS;
 8000e50:	4b1b      	ldr	r3, [pc, #108]	@ (8000ec0 <ADC_Init+0xbc>)
 8000e52:	689b      	ldr	r3, [r3, #8]
 8000e54:	4a1a      	ldr	r2, [pc, #104]	@ (8000ec0 <ADC_Init+0xbc>)
 8000e56:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000e5a:	6093      	str	r3, [r2, #8]
 8000e5c:	e00b      	b.n	8000e76 <ADC_Init+0x72>
	}
	else		//MULTI_CHANNEL
	{
		ADCx->CR1 |= ADC_CR1_SCAN;	//habilita o escaneamento de canais
 8000e5e:	687b      	ldr	r3, [r7, #4]
 8000e60:	685b      	ldr	r3, [r3, #4]
 8000e62:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8000e66:	687b      	ldr	r3, [r7, #4]
 8000e68:	605a      	str	r2, [r3, #4]
		ADC1->CR2 |= ADC_CR2_EOCS;	//bit EOC setado ao final de cada conversão
 8000e6a:	4b15      	ldr	r3, [pc, #84]	@ (8000ec0 <ADC_Init+0xbc>)
 8000e6c:	689b      	ldr	r3, [r3, #8]
 8000e6e:	4a14      	ldr	r2, [pc, #80]	@ (8000ec0 <ADC_Init+0xbc>)
 8000e70:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000e74:	6093      	str	r3, [r2, #8]
	}

	//Definição da resolução
	ADCx->CR1 &= ~ADC_CR1_RES;		//limpa o campo da resolução
 8000e76:	687b      	ldr	r3, [r7, #4]
 8000e78:	685b      	ldr	r3, [r3, #4]
 8000e7a:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8000e7e:	687b      	ldr	r3, [r7, #4]
 8000e80:	605a      	str	r2, [r3, #4]
	ADCx->CR1 |= resolution << 24;	//escreve a resolução
 8000e82:	687b      	ldr	r3, [r7, #4]
 8000e84:	685a      	ldr	r2, [r3, #4]
 8000e86:	78bb      	ldrb	r3, [r7, #2]
 8000e88:	061b      	lsls	r3, r3, #24
 8000e8a:	431a      	orrs	r2, r3
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	605a      	str	r2, [r3, #4]

	ADCx->SMPR2 |= 0b111;			//seleção do tempo de amostragem (máximo)
 8000e90:	687b      	ldr	r3, [r7, #4]
 8000e92:	691b      	ldr	r3, [r3, #16]
 8000e94:	f043 0207 	orr.w	r2, r3, #7
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	611a      	str	r2, [r3, #16]

	//Liga o ADCx
	ADCx->CR2 |= ADC_CR2_ADON;
 8000e9c:	687b      	ldr	r3, [r7, #4]
 8000e9e:	689b      	ldr	r3, [r3, #8]
 8000ea0:	f043 0201 	orr.w	r2, r3, #1
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	609a      	str	r2, [r3, #8]
	Delay_ms(1);	//aguarda o ADC iniciar
 8000ea8:	2001      	movs	r0, #1
 8000eaa:	f7ff ff51 	bl	8000d50 <Delay_ms>
}
 8000eae:	bf00      	nop
 8000eb0:	3708      	adds	r7, #8
 8000eb2:	46bd      	mov	sp, r7
 8000eb4:	bd80      	pop	{r7, pc}
 8000eb6:	bf00      	nop
 8000eb8:	40023800 	.word	0x40023800
 8000ebc:	40012300 	.word	0x40012300
 8000ec0:	40012000 	.word	0x40012000

08000ec4 <ADC_SingleChannel>:
//Esta função configura o pino de entrada do canal selecionado como analógico
//e configura o sequenciador do ADC para realizar a conversão nesse canal.
//@param  ADCx: onde x pode ser 1, 2 ou 3 para selecionar o periférico ADC.
//@param  canal: número do canal a ser convertido (ADC_IN0 a ADC_IN15).
void ADC_SingleChannel(ADC_TypeDef *ADCx, uint8_t channel)
{
 8000ec4:	b580      	push	{r7, lr}
 8000ec6:	b082      	sub	sp, #8
 8000ec8:	af00      	add	r7, sp, #0
 8000eca:	6078      	str	r0, [r7, #4]
 8000ecc:	460b      	mov	r3, r1
 8000ece:	70fb      	strb	r3, [r7, #3]
	//Configuração do canal a ser convertido pelo ADCx
	if(channel < 8)
 8000ed0:	78fb      	ldrb	r3, [r7, #3]
 8000ed2:	2b07      	cmp	r3, #7
 8000ed4:	d809      	bhi.n	8000eea <ADC_SingleChannel+0x26>
	{
		GPIO_Clock_Enable(GPIOA);				//habilita o clock do GPIOA
 8000ed6:	4821      	ldr	r0, [pc, #132]	@ (8000f5c <ADC_SingleChannel+0x98>)
 8000ed8:	f7ff ff56 	bl	8000d88 <GPIO_Clock_Enable>
		GPIO_Pin_Mode(GPIOA, channel, ANALOG);	//configura o pino PAx como função analógica
 8000edc:	78fb      	ldrb	r3, [r7, #3]
 8000ede:	2203      	movs	r2, #3
 8000ee0:	4619      	mov	r1, r3
 8000ee2:	481e      	ldr	r0, [pc, #120]	@ (8000f5c <ADC_SingleChannel+0x98>)
 8000ee4:	f7ff ff6a 	bl	8000dbc <GPIO_Pin_Mode>
 8000ee8:	e022      	b.n	8000f30 <ADC_SingleChannel+0x6c>
	}
	else if(channel == 8 || channel == 9)
 8000eea:	78fb      	ldrb	r3, [r7, #3]
 8000eec:	2b08      	cmp	r3, #8
 8000eee:	d002      	beq.n	8000ef6 <ADC_SingleChannel+0x32>
 8000ef0:	78fb      	ldrb	r3, [r7, #3]
 8000ef2:	2b09      	cmp	r3, #9
 8000ef4:	d10b      	bne.n	8000f0e <ADC_SingleChannel+0x4a>
	{
		GPIO_Clock_Enable(GPIOB);					//habilita o clock do GPIOB
 8000ef6:	481a      	ldr	r0, [pc, #104]	@ (8000f60 <ADC_SingleChannel+0x9c>)
 8000ef8:	f7ff ff46 	bl	8000d88 <GPIO_Clock_Enable>
		GPIO_Pin_Mode(GPIOB, channel - 8, ANALOG);	//configura o pino PB(x-8) como função analógica
 8000efc:	78fb      	ldrb	r3, [r7, #3]
 8000efe:	3b08      	subs	r3, #8
 8000f00:	b2db      	uxtb	r3, r3
 8000f02:	2203      	movs	r2, #3
 8000f04:	4619      	mov	r1, r3
 8000f06:	4816      	ldr	r0, [pc, #88]	@ (8000f60 <ADC_SingleChannel+0x9c>)
 8000f08:	f7ff ff58 	bl	8000dbc <GPIO_Pin_Mode>
 8000f0c:	e010      	b.n	8000f30 <ADC_SingleChannel+0x6c>
	}
	else if(channel >= 10 && channel <= 15)
 8000f0e:	78fb      	ldrb	r3, [r7, #3]
 8000f10:	2b09      	cmp	r3, #9
 8000f12:	d90d      	bls.n	8000f30 <ADC_SingleChannel+0x6c>
 8000f14:	78fb      	ldrb	r3, [r7, #3]
 8000f16:	2b0f      	cmp	r3, #15
 8000f18:	d80a      	bhi.n	8000f30 <ADC_SingleChannel+0x6c>
	{
		GPIO_Clock_Enable(GPIOC);					//habilita o clock do GPIOC
 8000f1a:	4812      	ldr	r0, [pc, #72]	@ (8000f64 <ADC_SingleChannel+0xa0>)
 8000f1c:	f7ff ff34 	bl	8000d88 <GPIO_Clock_Enable>
		GPIO_Pin_Mode(GPIOC, channel - 10, ANALOG);	//configura o pino PC(x-10) como função analógica
 8000f20:	78fb      	ldrb	r3, [r7, #3]
 8000f22:	3b0a      	subs	r3, #10
 8000f24:	b2db      	uxtb	r3, r3
 8000f26:	2203      	movs	r2, #3
 8000f28:	4619      	mov	r1, r3
 8000f2a:	480e      	ldr	r0, [pc, #56]	@ (8000f64 <ADC_SingleChannel+0xa0>)
 8000f2c:	f7ff ff46 	bl	8000dbc <GPIO_Pin_Mode>
	}

	//Seleciona o canal a ser convertido pelo ADCx
	ADCx->SQR1 &= ~0xF << 20;	//seleciona a quantidade de canais (1 canal)
 8000f30:	687b      	ldr	r3, [r7, #4]
 8000f32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000f34:	f003 427f 	and.w	r2, r3, #4278190080	@ 0xff000000
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	62da      	str	r2, [r3, #44]	@ 0x2c
	ADCx->SQR3 &= ~0x1F;		//limpa o campo do canal
 8000f3c:	687b      	ldr	r3, [r7, #4]
 8000f3e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000f40:	f023 021f 	bic.w	r2, r3, #31
 8000f44:	687b      	ldr	r3, [r7, #4]
 8000f46:	635a      	str	r2, [r3, #52]	@ 0x34
	ADCx->SQR3 |= channel;		//escreve o canal
 8000f48:	687b      	ldr	r3, [r7, #4]
 8000f4a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000f4c:	78fb      	ldrb	r3, [r7, #3]
 8000f4e:	431a      	orrs	r2, r3
 8000f50:	687b      	ldr	r3, [r7, #4]
 8000f52:	635a      	str	r2, [r3, #52]	@ 0x34
}
 8000f54:	bf00      	nop
 8000f56:	3708      	adds	r7, #8
 8000f58:	46bd      	mov	sp, r7
 8000f5a:	bd80      	pop	{r7, pc}
 8000f5c:	40020000 	.word	0x40020000
 8000f60:	40020400 	.word	0x40020400
 8000f64:	40020800 	.word	0x40020800

08000f68 <USART1_Init>:


//Funções de periféricos de comunicação
//Configuração básica da USART1
void USART1_Init(void)
{
 8000f68:	b480      	push	{r7}
 8000f6a:	af00      	add	r7, sp, #0
	//Configuração da USART1
	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;				//habilita o clock da USART1
 8000f6c:	4b13      	ldr	r3, [pc, #76]	@ (8000fbc <USART1_Init+0x54>)
 8000f6e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000f70:	4a12      	ldr	r2, [pc, #72]	@ (8000fbc <USART1_Init+0x54>)
 8000f72:	f043 0310 	orr.w	r3, r3, #16
 8000f76:	6453      	str	r3, [r2, #68]	@ 0x44
	USART1->BRR = 84;									//ajusta baud rate para 1 Mbps (frequência do periférico de 84MHz)
 8000f78:	4b11      	ldr	r3, [pc, #68]	@ (8000fc0 <USART1_Init+0x58>)
 8000f7a:	2254      	movs	r2, #84	@ 0x54
 8000f7c:	609a      	str	r2, [r3, #8]
	//O estado default do registrador USART1->CR1 garante:
	//1 stop bit, 8 bits de dados, sem bit de paridade,
	//oversampling de 16 amostras por bit
	USART1->CR1 |= (USART_CR1_TE | USART_CR1_UE);		//habilita apenas o transmissor e a USART1
 8000f7e:	4b10      	ldr	r3, [pc, #64]	@ (8000fc0 <USART1_Init+0x58>)
 8000f80:	68db      	ldr	r3, [r3, #12]
 8000f82:	4a0f      	ldr	r2, [pc, #60]	@ (8000fc0 <USART1_Init+0x58>)
 8000f84:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000f88:	f043 0308 	orr.w	r3, r3, #8
 8000f8c:	60d3      	str	r3, [r2, #12]
	//Habilita a interrupção da USART1 no NVIC
	//NVIC_SetPriority(USART1_IRQn, 0);	//seta a prioridade da USART1
	//NVIC_EnableIRQ(USART1_IRQn);		//habilita a interrupção da USART1

	//Configuração dos pinos PA9 (TX) e PA10(RX)
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;			//habilita o clock do GPIOA
 8000f8e:	4b0b      	ldr	r3, [pc, #44]	@ (8000fbc <USART1_Init+0x54>)
 8000f90:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f92:	4a0a      	ldr	r2, [pc, #40]	@ (8000fbc <USART1_Init+0x54>)
 8000f94:	f043 0301 	orr.w	r3, r3, #1
 8000f98:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOA->MODER |= (0b10 << 20) | (0b10 << 18);	//pinos PA10 e PA9 em função alternativa
 8000f9a:	4b0a      	ldr	r3, [pc, #40]	@ (8000fc4 <USART1_Init+0x5c>)
 8000f9c:	681b      	ldr	r3, [r3, #0]
 8000f9e:	4a09      	ldr	r2, [pc, #36]	@ (8000fc4 <USART1_Init+0x5c>)
 8000fa0:	f443 1320 	orr.w	r3, r3, #2621440	@ 0x280000
 8000fa4:	6013      	str	r3, [r2, #0]
	GPIOA->AFR[1] |= (0b0111 << 8) | (0b0111 << 4);	//função alternativa 7 (USART1)
 8000fa6:	4b07      	ldr	r3, [pc, #28]	@ (8000fc4 <USART1_Init+0x5c>)
 8000fa8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000faa:	4a06      	ldr	r2, [pc, #24]	@ (8000fc4 <USART1_Init+0x5c>)
 8000fac:	f443 63ee 	orr.w	r3, r3, #1904	@ 0x770
 8000fb0:	6253      	str	r3, [r2, #36]	@ 0x24
}
 8000fb2:	bf00      	nop
 8000fb4:	46bd      	mov	sp, r7
 8000fb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fba:	4770      	bx	lr
 8000fbc:	40023800 	.word	0x40023800
 8000fc0:	40011000 	.word	0x40011000
 8000fc4:	40020000 	.word	0x40020000

08000fc8 <__io_putchar>:

//Redefinição da função de envio de dados pela USART1
int __io_putchar(int ch)
{
 8000fc8:	b480      	push	{r7}
 8000fca:	b083      	sub	sp, #12
 8000fcc:	af00      	add	r7, sp, #0
 8000fce:	6078      	str	r0, [r7, #4]
	USART1->DR = ch;						//transmite o dado
 8000fd0:	4a08      	ldr	r2, [pc, #32]	@ (8000ff4 <__io_putchar+0x2c>)
 8000fd2:	687b      	ldr	r3, [r7, #4]
 8000fd4:	6053      	str	r3, [r2, #4]
	while (!(USART1->SR & USART_SR_TXE));	//espera pelo fim da transmissão
 8000fd6:	bf00      	nop
 8000fd8:	4b06      	ldr	r3, [pc, #24]	@ (8000ff4 <__io_putchar+0x2c>)
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	d0f9      	beq.n	8000fd8 <__io_putchar+0x10>
	return ch;
 8000fe4:	687b      	ldr	r3, [r7, #4]
}
 8000fe6:	4618      	mov	r0, r3
 8000fe8:	370c      	adds	r7, #12
 8000fea:	46bd      	mov	sp, r7
 8000fec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ff0:	4770      	bx	lr
 8000ff2:	bf00      	nop
 8000ff4:	40011000 	.word	0x40011000

08000ff8 <__io_getchar>:

//Redefinição da função de recebimento de dados pela USART1
int __io_getchar(void)
{
 8000ff8:	b480      	push	{r7}
 8000ffa:	af00      	add	r7, sp, #0
   return (uint16_t)(USART1->DR);	//lê o dado recebido
 8000ffc:	4b03      	ldr	r3, [pc, #12]	@ (800100c <__io_getchar+0x14>)
 8000ffe:	685b      	ldr	r3, [r3, #4]
 8001000:	b29b      	uxth	r3, r3
}
 8001002:	4618      	mov	r0, r3
 8001004:	46bd      	mov	sp, r7
 8001006:	f85d 7b04 	ldr.w	r7, [sp], #4
 800100a:	4770      	bx	lr
 800100c:	40011000 	.word	0x40011000

08001010 <USART1_IRQHandler>:

//ISR da USART1. Todas as ISR's estão definidas no arquivo startup_stm32f407vetx.s
void USART1_IRQHandler(void)
{
 8001010:	b580      	push	{r7, lr}
 8001012:	af00      	add	r7, sp, #0
	__io_putchar(__io_getchar());	//lê o dado e reenvia pela USART1
 8001014:	f7ff fff0 	bl	8000ff8 <__io_getchar>
 8001018:	4603      	mov	r3, r0
 800101a:	4618      	mov	r0, r3
 800101c:	f7ff ffd4 	bl	8000fc8 <__io_putchar>
}
 8001020:	bf00      	nop
 8001022:	bd80      	pop	{r7, pc}

08001024 <ADC_IRQHandler>:
#include "main.h"
#include "Utility.h"
#include <stdio.h>

void ADC_IRQHandler(){
 8001024:	b580      	push	{r7, lr}
 8001026:	af00      	add	r7, sp, #0
	printf("Saida da Regiao Monitorada\n");
 8001028:	4805      	ldr	r0, [pc, #20]	@ (8001040 <ADC_IRQHandler+0x1c>)
 800102a:	f000 ff33 	bl	8001e94 <puts>
	// Limpando flag
	ADC1->SR &= ~ADC_SR_AWD;
 800102e:	4b05      	ldr	r3, [pc, #20]	@ (8001044 <ADC_IRQHandler+0x20>)
 8001030:	681b      	ldr	r3, [r3, #0]
 8001032:	4a04      	ldr	r2, [pc, #16]	@ (8001044 <ADC_IRQHandler+0x20>)
 8001034:	f023 0301 	bic.w	r3, r3, #1
 8001038:	6013      	str	r3, [r2, #0]
}
 800103a:	bf00      	nop
 800103c:	bd80      	pop	{r7, pc}
 800103e:	bf00      	nop
 8001040:	08003d98 	.word	0x08003d98
 8001044:	40012000 	.word	0x40012000

08001048 <main>:

int main(){
 8001048:	b580      	push	{r7, lr}
 800104a:	af00      	add	r7, sp, #0

	Utility_Init();
 800104c:	f7ff fdee 	bl	8000c2c <Utility_Init>
	USART1_Init();
 8001050:	f7ff ff8a 	bl	8000f68 <USART1_Init>

	ADC_Init(ADC1, SINGLE_CHANNEL, ADC_RES_12BITS);
 8001054:	2200      	movs	r2, #0
 8001056:	2100      	movs	r1, #0
 8001058:	4828      	ldr	r0, [pc, #160]	@ (80010fc <main+0xb4>)
 800105a:	f7ff fed3 	bl	8000e04 <ADC_Init>
	ADC_SingleChannel(ADC1, ADC_IN0);
 800105e:	2100      	movs	r1, #0
 8001060:	4826      	ldr	r0, [pc, #152]	@ (80010fc <main+0xb4>)
 8001062:	f7ff ff2f 	bl	8000ec4 <ADC_SingleChannel>

	ADC1->LTR = 1000; // LIMIAR INFERIOR
 8001066:	4b25      	ldr	r3, [pc, #148]	@ (80010fc <main+0xb4>)
 8001068:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800106c:	629a      	str	r2, [r3, #40]	@ 0x28
	ADC1->HTR = 3000; // LIMIAR SUPERIOR
 800106e:	4b23      	ldr	r3, [pc, #140]	@ (80010fc <main+0xb4>)
 8001070:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 8001074:	625a      	str	r2, [r3, #36]	@ 0x24
	ADC1->CR1 |= ADC_CR1_AWDSGL; // HABILITA O WATCHDOG EM CANAL SIMPLES
 8001076:	4b21      	ldr	r3, [pc, #132]	@ (80010fc <main+0xb4>)
 8001078:	685b      	ldr	r3, [r3, #4]
 800107a:	4a20      	ldr	r2, [pc, #128]	@ (80010fc <main+0xb4>)
 800107c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001080:	6053      	str	r3, [r2, #4]
	ADC1->CR1 &= ~ADC_CR1_AWDCH; // SELEÇÃO DO CANAL MONITORADO (IN0)
 8001082:	4b1e      	ldr	r3, [pc, #120]	@ (80010fc <main+0xb4>)
 8001084:	685b      	ldr	r3, [r3, #4]
 8001086:	4a1d      	ldr	r2, [pc, #116]	@ (80010fc <main+0xb4>)
 8001088:	f023 031f 	bic.w	r3, r3, #31
 800108c:	6053      	str	r3, [r2, #4]
	ADC1->CR1 |= ADC_CR1_AWDEN; // HABILITA O WATCHDOG
 800108e:	4b1b      	ldr	r3, [pc, #108]	@ (80010fc <main+0xb4>)
 8001090:	685b      	ldr	r3, [r3, #4]
 8001092:	4a1a      	ldr	r2, [pc, #104]	@ (80010fc <main+0xb4>)
 8001094:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001098:	6053      	str	r3, [r2, #4]


	// Colocando uma interrupção toda vez que o bit sinalizar
	ADC1->CR1 |= ADC_CR1_AWDIE; // Habilita a interrupção o Watchdog
 800109a:	4b18      	ldr	r3, [pc, #96]	@ (80010fc <main+0xb4>)
 800109c:	685b      	ldr	r3, [r3, #4]
 800109e:	4a17      	ldr	r2, [pc, #92]	@ (80010fc <main+0xb4>)
 80010a0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80010a4:	6053      	str	r3, [r2, #4]
	NVIC_EnableIRQ(ADC_IRQn); // Habilita a interrupção no NIVC.
 80010a6:	2012      	movs	r0, #18
 80010a8:	f7ff fda2 	bl	8000bf0 <__NVIC_EnableIRQ>

	while(1){

		ADC1->CR2 |= ADC_CR2_SWSTART;
 80010ac:	4b13      	ldr	r3, [pc, #76]	@ (80010fc <main+0xb4>)
 80010ae:	689b      	ldr	r3, [r3, #8]
 80010b0:	4a12      	ldr	r2, [pc, #72]	@ (80010fc <main+0xb4>)
 80010b2:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80010b6:	6093      	str	r3, [r2, #8]
		while(!(ADC1->SR & ADC_SR_EOC));
 80010b8:	bf00      	nop
 80010ba:	4b10      	ldr	r3, [pc, #64]	@ (80010fc <main+0xb4>)
 80010bc:	681b      	ldr	r3, [r3, #0]
 80010be:	f003 0302 	and.w	r3, r3, #2
 80010c2:	2b00      	cmp	r3, #0
 80010c4:	d0f9      	beq.n	80010ba <main+0x72>
		printf("Leitura = %d\n", (int)ADC1->DR);
 80010c6:	4b0d      	ldr	r3, [pc, #52]	@ (80010fc <main+0xb4>)
 80010c8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80010ca:	4619      	mov	r1, r3
 80010cc:	480c      	ldr	r0, [pc, #48]	@ (8001100 <main+0xb8>)
 80010ce:	f000 fe79 	bl	8001dc4 <iprintf>

		if (ADC1->SR & ADC_SR_AWD)
 80010d2:	4b0a      	ldr	r3, [pc, #40]	@ (80010fc <main+0xb4>)
 80010d4:	681b      	ldr	r3, [r3, #0]
 80010d6:	f003 0301 	and.w	r3, r3, #1
 80010da:	2b00      	cmp	r3, #0
 80010dc:	d002      	beq.n	80010e4 <main+0x9c>
			printf("SAIDA DA REGIAO MONITORADA\n");
 80010de:	4809      	ldr	r0, [pc, #36]	@ (8001104 <main+0xbc>)
 80010e0:	f000 fed8 	bl	8001e94 <puts>

		ADC1->SR &= ~ADC_SR_AWD;
 80010e4:	4b05      	ldr	r3, [pc, #20]	@ (80010fc <main+0xb4>)
 80010e6:	681b      	ldr	r3, [r3, #0]
 80010e8:	4a04      	ldr	r2, [pc, #16]	@ (80010fc <main+0xb4>)
 80010ea:	f023 0301 	bic.w	r3, r3, #1
 80010ee:	6013      	str	r3, [r2, #0]
		Delay_ms(500);
 80010f0:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80010f4:	f7ff fe2c 	bl	8000d50 <Delay_ms>
		ADC1->CR2 |= ADC_CR2_SWSTART;
 80010f8:	e7d8      	b.n	80010ac <main+0x64>
 80010fa:	bf00      	nop
 80010fc:	40012000 	.word	0x40012000
 8001100:	08003db4 	.word	0x08003db4
 8001104:	08003dc4 	.word	0x08003dc4

08001108 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001108:	b480      	push	{r7}
 800110a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800110c:	bf00      	nop
 800110e:	e7fd      	b.n	800110c <NMI_Handler+0x4>

08001110 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001110:	b480      	push	{r7}
 8001112:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001114:	bf00      	nop
 8001116:	e7fd      	b.n	8001114 <HardFault_Handler+0x4>

08001118 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001118:	b480      	push	{r7}
 800111a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800111c:	bf00      	nop
 800111e:	e7fd      	b.n	800111c <MemManage_Handler+0x4>

08001120 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001120:	b480      	push	{r7}
 8001122:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001124:	bf00      	nop
 8001126:	e7fd      	b.n	8001124 <BusFault_Handler+0x4>

08001128 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001128:	b480      	push	{r7}
 800112a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800112c:	bf00      	nop
 800112e:	e7fd      	b.n	800112c <UsageFault_Handler+0x4>

08001130 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001130:	b480      	push	{r7}
 8001132:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001134:	bf00      	nop
 8001136:	46bd      	mov	sp, r7
 8001138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800113c:	4770      	bx	lr

0800113e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800113e:	b480      	push	{r7}
 8001140:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001142:	bf00      	nop
 8001144:	46bd      	mov	sp, r7
 8001146:	f85d 7b04 	ldr.w	r7, [sp], #4
 800114a:	4770      	bx	lr

0800114c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800114c:	b480      	push	{r7}
 800114e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001150:	bf00      	nop
 8001152:	46bd      	mov	sp, r7
 8001154:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001158:	4770      	bx	lr

0800115a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800115a:	b580      	push	{r7, lr}
 800115c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800115e:	f000 f905 	bl	800136c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001162:	bf00      	nop
 8001164:	bd80      	pop	{r7, pc}

08001166 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001166:	b480      	push	{r7}
 8001168:	af00      	add	r7, sp, #0
  return 1;
 800116a:	2301      	movs	r3, #1
}
 800116c:	4618      	mov	r0, r3
 800116e:	46bd      	mov	sp, r7
 8001170:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001174:	4770      	bx	lr

08001176 <_kill>:

int _kill(int pid, int sig)
{
 8001176:	b580      	push	{r7, lr}
 8001178:	b082      	sub	sp, #8
 800117a:	af00      	add	r7, sp, #0
 800117c:	6078      	str	r0, [r7, #4]
 800117e:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001180:	f000 ffba 	bl	80020f8 <__errno>
 8001184:	4603      	mov	r3, r0
 8001186:	2216      	movs	r2, #22
 8001188:	601a      	str	r2, [r3, #0]
  return -1;
 800118a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800118e:	4618      	mov	r0, r3
 8001190:	3708      	adds	r7, #8
 8001192:	46bd      	mov	sp, r7
 8001194:	bd80      	pop	{r7, pc}

08001196 <_exit>:

void _exit (int status)
{
 8001196:	b580      	push	{r7, lr}
 8001198:	b082      	sub	sp, #8
 800119a:	af00      	add	r7, sp, #0
 800119c:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800119e:	f04f 31ff 	mov.w	r1, #4294967295
 80011a2:	6878      	ldr	r0, [r7, #4]
 80011a4:	f7ff ffe7 	bl	8001176 <_kill>
  while (1) {}    /* Make sure we hang here */
 80011a8:	bf00      	nop
 80011aa:	e7fd      	b.n	80011a8 <_exit+0x12>

080011ac <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80011ac:	b580      	push	{r7, lr}
 80011ae:	b086      	sub	sp, #24
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	60f8      	str	r0, [r7, #12]
 80011b4:	60b9      	str	r1, [r7, #8]
 80011b6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80011b8:	2300      	movs	r3, #0
 80011ba:	617b      	str	r3, [r7, #20]
 80011bc:	e00a      	b.n	80011d4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80011be:	f7ff ff1b 	bl	8000ff8 <__io_getchar>
 80011c2:	4601      	mov	r1, r0
 80011c4:	68bb      	ldr	r3, [r7, #8]
 80011c6:	1c5a      	adds	r2, r3, #1
 80011c8:	60ba      	str	r2, [r7, #8]
 80011ca:	b2ca      	uxtb	r2, r1
 80011cc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80011ce:	697b      	ldr	r3, [r7, #20]
 80011d0:	3301      	adds	r3, #1
 80011d2:	617b      	str	r3, [r7, #20]
 80011d4:	697a      	ldr	r2, [r7, #20]
 80011d6:	687b      	ldr	r3, [r7, #4]
 80011d8:	429a      	cmp	r2, r3
 80011da:	dbf0      	blt.n	80011be <_read+0x12>
  }

  return len;
 80011dc:	687b      	ldr	r3, [r7, #4]
}
 80011de:	4618      	mov	r0, r3
 80011e0:	3718      	adds	r7, #24
 80011e2:	46bd      	mov	sp, r7
 80011e4:	bd80      	pop	{r7, pc}

080011e6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80011e6:	b580      	push	{r7, lr}
 80011e8:	b086      	sub	sp, #24
 80011ea:	af00      	add	r7, sp, #0
 80011ec:	60f8      	str	r0, [r7, #12]
 80011ee:	60b9      	str	r1, [r7, #8]
 80011f0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80011f2:	2300      	movs	r3, #0
 80011f4:	617b      	str	r3, [r7, #20]
 80011f6:	e009      	b.n	800120c <_write+0x26>
  {
    __io_putchar(*ptr++);
 80011f8:	68bb      	ldr	r3, [r7, #8]
 80011fa:	1c5a      	adds	r2, r3, #1
 80011fc:	60ba      	str	r2, [r7, #8]
 80011fe:	781b      	ldrb	r3, [r3, #0]
 8001200:	4618      	mov	r0, r3
 8001202:	f7ff fee1 	bl	8000fc8 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001206:	697b      	ldr	r3, [r7, #20]
 8001208:	3301      	adds	r3, #1
 800120a:	617b      	str	r3, [r7, #20]
 800120c:	697a      	ldr	r2, [r7, #20]
 800120e:	687b      	ldr	r3, [r7, #4]
 8001210:	429a      	cmp	r2, r3
 8001212:	dbf1      	blt.n	80011f8 <_write+0x12>
  }
  return len;
 8001214:	687b      	ldr	r3, [r7, #4]
}
 8001216:	4618      	mov	r0, r3
 8001218:	3718      	adds	r7, #24
 800121a:	46bd      	mov	sp, r7
 800121c:	bd80      	pop	{r7, pc}

0800121e <_close>:

int _close(int file)
{
 800121e:	b480      	push	{r7}
 8001220:	b083      	sub	sp, #12
 8001222:	af00      	add	r7, sp, #0
 8001224:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001226:	f04f 33ff 	mov.w	r3, #4294967295
}
 800122a:	4618      	mov	r0, r3
 800122c:	370c      	adds	r7, #12
 800122e:	46bd      	mov	sp, r7
 8001230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001234:	4770      	bx	lr

08001236 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001236:	b480      	push	{r7}
 8001238:	b083      	sub	sp, #12
 800123a:	af00      	add	r7, sp, #0
 800123c:	6078      	str	r0, [r7, #4]
 800123e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001240:	683b      	ldr	r3, [r7, #0]
 8001242:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001246:	605a      	str	r2, [r3, #4]
  return 0;
 8001248:	2300      	movs	r3, #0
}
 800124a:	4618      	mov	r0, r3
 800124c:	370c      	adds	r7, #12
 800124e:	46bd      	mov	sp, r7
 8001250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001254:	4770      	bx	lr

08001256 <_isatty>:

int _isatty(int file)
{
 8001256:	b480      	push	{r7}
 8001258:	b083      	sub	sp, #12
 800125a:	af00      	add	r7, sp, #0
 800125c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800125e:	2301      	movs	r3, #1
}
 8001260:	4618      	mov	r0, r3
 8001262:	370c      	adds	r7, #12
 8001264:	46bd      	mov	sp, r7
 8001266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800126a:	4770      	bx	lr

0800126c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800126c:	b480      	push	{r7}
 800126e:	b085      	sub	sp, #20
 8001270:	af00      	add	r7, sp, #0
 8001272:	60f8      	str	r0, [r7, #12]
 8001274:	60b9      	str	r1, [r7, #8]
 8001276:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001278:	2300      	movs	r3, #0
}
 800127a:	4618      	mov	r0, r3
 800127c:	3714      	adds	r7, #20
 800127e:	46bd      	mov	sp, r7
 8001280:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001284:	4770      	bx	lr
	...

08001288 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001288:	b580      	push	{r7, lr}
 800128a:	b086      	sub	sp, #24
 800128c:	af00      	add	r7, sp, #0
 800128e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001290:	4a14      	ldr	r2, [pc, #80]	@ (80012e4 <_sbrk+0x5c>)
 8001292:	4b15      	ldr	r3, [pc, #84]	@ (80012e8 <_sbrk+0x60>)
 8001294:	1ad3      	subs	r3, r2, r3
 8001296:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001298:	697b      	ldr	r3, [r7, #20]
 800129a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800129c:	4b13      	ldr	r3, [pc, #76]	@ (80012ec <_sbrk+0x64>)
 800129e:	681b      	ldr	r3, [r3, #0]
 80012a0:	2b00      	cmp	r3, #0
 80012a2:	d102      	bne.n	80012aa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80012a4:	4b11      	ldr	r3, [pc, #68]	@ (80012ec <_sbrk+0x64>)
 80012a6:	4a12      	ldr	r2, [pc, #72]	@ (80012f0 <_sbrk+0x68>)
 80012a8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80012aa:	4b10      	ldr	r3, [pc, #64]	@ (80012ec <_sbrk+0x64>)
 80012ac:	681a      	ldr	r2, [r3, #0]
 80012ae:	687b      	ldr	r3, [r7, #4]
 80012b0:	4413      	add	r3, r2
 80012b2:	693a      	ldr	r2, [r7, #16]
 80012b4:	429a      	cmp	r2, r3
 80012b6:	d207      	bcs.n	80012c8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80012b8:	f000 ff1e 	bl	80020f8 <__errno>
 80012bc:	4603      	mov	r3, r0
 80012be:	220c      	movs	r2, #12
 80012c0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80012c2:	f04f 33ff 	mov.w	r3, #4294967295
 80012c6:	e009      	b.n	80012dc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80012c8:	4b08      	ldr	r3, [pc, #32]	@ (80012ec <_sbrk+0x64>)
 80012ca:	681b      	ldr	r3, [r3, #0]
 80012cc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80012ce:	4b07      	ldr	r3, [pc, #28]	@ (80012ec <_sbrk+0x64>)
 80012d0:	681a      	ldr	r2, [r3, #0]
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	4413      	add	r3, r2
 80012d6:	4a05      	ldr	r2, [pc, #20]	@ (80012ec <_sbrk+0x64>)
 80012d8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80012da:	68fb      	ldr	r3, [r7, #12]
}
 80012dc:	4618      	mov	r0, r3
 80012de:	3718      	adds	r7, #24
 80012e0:	46bd      	mov	sp, r7
 80012e2:	bd80      	pop	{r7, pc}
 80012e4:	20020000 	.word	0x20020000
 80012e8:	00000400 	.word	0x00000400
 80012ec:	200001e8 	.word	0x200001e8
 80012f0:	20000340 	.word	0x20000340

080012f4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80012f4:	b480      	push	{r7}
 80012f6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80012f8:	4b06      	ldr	r3, [pc, #24]	@ (8001314 <SystemInit+0x20>)
 80012fa:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80012fe:	4a05      	ldr	r2, [pc, #20]	@ (8001314 <SystemInit+0x20>)
 8001300:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001304:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001308:	bf00      	nop
 800130a:	46bd      	mov	sp, r7
 800130c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001310:	4770      	bx	lr
 8001312:	bf00      	nop
 8001314:	e000ed00 	.word	0xe000ed00

08001318 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8001318:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001350 <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 800131c:	f7ff ffea 	bl	80012f4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001320:	480c      	ldr	r0, [pc, #48]	@ (8001354 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001322:	490d      	ldr	r1, [pc, #52]	@ (8001358 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001324:	4a0d      	ldr	r2, [pc, #52]	@ (800135c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001326:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001328:	e002      	b.n	8001330 <LoopCopyDataInit>

0800132a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800132a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800132c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800132e:	3304      	adds	r3, #4

08001330 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001330:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001332:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001334:	d3f9      	bcc.n	800132a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001336:	4a0a      	ldr	r2, [pc, #40]	@ (8001360 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001338:	4c0a      	ldr	r4, [pc, #40]	@ (8001364 <LoopFillZerobss+0x22>)
  movs r3, #0
 800133a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800133c:	e001      	b.n	8001342 <LoopFillZerobss>

0800133e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800133e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001340:	3204      	adds	r2, #4

08001342 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001342:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001344:	d3fb      	bcc.n	800133e <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8001346:	f000 fedd 	bl	8002104 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800134a:	f7ff fe7d 	bl	8001048 <main>
  bx  lr    
 800134e:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8001350:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001354:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001358:	200001cc 	.word	0x200001cc
  ldr r2, =_sidata
 800135c:	08004164 	.word	0x08004164
  ldr r2, =_sbss
 8001360:	200001cc 	.word	0x200001cc
  ldr r4, =_ebss
 8001364:	2000033c 	.word	0x2000033c

08001368 <CAN1_RX0_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001368:	e7fe      	b.n	8001368 <CAN1_RX0_IRQHandler>
	...

0800136c <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 800136c:	b480      	push	{r7}
 800136e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001370:	4b06      	ldr	r3, [pc, #24]	@ (800138c <HAL_IncTick+0x20>)
 8001372:	781b      	ldrb	r3, [r3, #0]
 8001374:	461a      	mov	r2, r3
 8001376:	4b06      	ldr	r3, [pc, #24]	@ (8001390 <HAL_IncTick+0x24>)
 8001378:	681b      	ldr	r3, [r3, #0]
 800137a:	4413      	add	r3, r2
 800137c:	4a04      	ldr	r2, [pc, #16]	@ (8001390 <HAL_IncTick+0x24>)
 800137e:	6013      	str	r3, [r2, #0]
}
 8001380:	bf00      	nop
 8001382:	46bd      	mov	sp, r7
 8001384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001388:	4770      	bx	lr
 800138a:	bf00      	nop
 800138c:	20000000 	.word	0x20000000
 8001390:	200001ec 	.word	0x200001ec

08001394 <__cvt>:
 8001394:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001398:	ec57 6b10 	vmov	r6, r7, d0
 800139c:	2f00      	cmp	r7, #0
 800139e:	460c      	mov	r4, r1
 80013a0:	4619      	mov	r1, r3
 80013a2:	463b      	mov	r3, r7
 80013a4:	bfbb      	ittet	lt
 80013a6:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 80013aa:	461f      	movlt	r7, r3
 80013ac:	2300      	movge	r3, #0
 80013ae:	232d      	movlt	r3, #45	@ 0x2d
 80013b0:	700b      	strb	r3, [r1, #0]
 80013b2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80013b4:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 80013b8:	4691      	mov	r9, r2
 80013ba:	f023 0820 	bic.w	r8, r3, #32
 80013be:	bfbc      	itt	lt
 80013c0:	4632      	movlt	r2, r6
 80013c2:	4616      	movlt	r6, r2
 80013c4:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80013c8:	d005      	beq.n	80013d6 <__cvt+0x42>
 80013ca:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80013ce:	d100      	bne.n	80013d2 <__cvt+0x3e>
 80013d0:	3401      	adds	r4, #1
 80013d2:	2102      	movs	r1, #2
 80013d4:	e000      	b.n	80013d8 <__cvt+0x44>
 80013d6:	2103      	movs	r1, #3
 80013d8:	ab03      	add	r3, sp, #12
 80013da:	9301      	str	r3, [sp, #4]
 80013dc:	ab02      	add	r3, sp, #8
 80013de:	9300      	str	r3, [sp, #0]
 80013e0:	ec47 6b10 	vmov	d0, r6, r7
 80013e4:	4653      	mov	r3, sl
 80013e6:	4622      	mov	r2, r4
 80013e8:	f000 ff3e 	bl	8002268 <_dtoa_r>
 80013ec:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80013f0:	4605      	mov	r5, r0
 80013f2:	d119      	bne.n	8001428 <__cvt+0x94>
 80013f4:	f019 0f01 	tst.w	r9, #1
 80013f8:	d00e      	beq.n	8001418 <__cvt+0x84>
 80013fa:	eb00 0904 	add.w	r9, r0, r4
 80013fe:	2200      	movs	r2, #0
 8001400:	2300      	movs	r3, #0
 8001402:	4630      	mov	r0, r6
 8001404:	4639      	mov	r1, r7
 8001406:	f7ff fb5f 	bl	8000ac8 <__aeabi_dcmpeq>
 800140a:	b108      	cbz	r0, 8001410 <__cvt+0x7c>
 800140c:	f8cd 900c 	str.w	r9, [sp, #12]
 8001410:	2230      	movs	r2, #48	@ 0x30
 8001412:	9b03      	ldr	r3, [sp, #12]
 8001414:	454b      	cmp	r3, r9
 8001416:	d31e      	bcc.n	8001456 <__cvt+0xc2>
 8001418:	9b03      	ldr	r3, [sp, #12]
 800141a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800141c:	1b5b      	subs	r3, r3, r5
 800141e:	4628      	mov	r0, r5
 8001420:	6013      	str	r3, [r2, #0]
 8001422:	b004      	add	sp, #16
 8001424:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001428:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800142c:	eb00 0904 	add.w	r9, r0, r4
 8001430:	d1e5      	bne.n	80013fe <__cvt+0x6a>
 8001432:	7803      	ldrb	r3, [r0, #0]
 8001434:	2b30      	cmp	r3, #48	@ 0x30
 8001436:	d10a      	bne.n	800144e <__cvt+0xba>
 8001438:	2200      	movs	r2, #0
 800143a:	2300      	movs	r3, #0
 800143c:	4630      	mov	r0, r6
 800143e:	4639      	mov	r1, r7
 8001440:	f7ff fb42 	bl	8000ac8 <__aeabi_dcmpeq>
 8001444:	b918      	cbnz	r0, 800144e <__cvt+0xba>
 8001446:	f1c4 0401 	rsb	r4, r4, #1
 800144a:	f8ca 4000 	str.w	r4, [sl]
 800144e:	f8da 3000 	ldr.w	r3, [sl]
 8001452:	4499      	add	r9, r3
 8001454:	e7d3      	b.n	80013fe <__cvt+0x6a>
 8001456:	1c59      	adds	r1, r3, #1
 8001458:	9103      	str	r1, [sp, #12]
 800145a:	701a      	strb	r2, [r3, #0]
 800145c:	e7d9      	b.n	8001412 <__cvt+0x7e>

0800145e <__exponent>:
 800145e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001460:	2900      	cmp	r1, #0
 8001462:	bfba      	itte	lt
 8001464:	4249      	neglt	r1, r1
 8001466:	232d      	movlt	r3, #45	@ 0x2d
 8001468:	232b      	movge	r3, #43	@ 0x2b
 800146a:	2909      	cmp	r1, #9
 800146c:	7002      	strb	r2, [r0, #0]
 800146e:	7043      	strb	r3, [r0, #1]
 8001470:	dd29      	ble.n	80014c6 <__exponent+0x68>
 8001472:	f10d 0307 	add.w	r3, sp, #7
 8001476:	461d      	mov	r5, r3
 8001478:	270a      	movs	r7, #10
 800147a:	461a      	mov	r2, r3
 800147c:	fbb1 f6f7 	udiv	r6, r1, r7
 8001480:	fb07 1416 	mls	r4, r7, r6, r1
 8001484:	3430      	adds	r4, #48	@ 0x30
 8001486:	f802 4c01 	strb.w	r4, [r2, #-1]
 800148a:	460c      	mov	r4, r1
 800148c:	2c63      	cmp	r4, #99	@ 0x63
 800148e:	f103 33ff 	add.w	r3, r3, #4294967295
 8001492:	4631      	mov	r1, r6
 8001494:	dcf1      	bgt.n	800147a <__exponent+0x1c>
 8001496:	3130      	adds	r1, #48	@ 0x30
 8001498:	1e94      	subs	r4, r2, #2
 800149a:	f803 1c01 	strb.w	r1, [r3, #-1]
 800149e:	1c41      	adds	r1, r0, #1
 80014a0:	4623      	mov	r3, r4
 80014a2:	42ab      	cmp	r3, r5
 80014a4:	d30a      	bcc.n	80014bc <__exponent+0x5e>
 80014a6:	f10d 0309 	add.w	r3, sp, #9
 80014aa:	1a9b      	subs	r3, r3, r2
 80014ac:	42ac      	cmp	r4, r5
 80014ae:	bf88      	it	hi
 80014b0:	2300      	movhi	r3, #0
 80014b2:	3302      	adds	r3, #2
 80014b4:	4403      	add	r3, r0
 80014b6:	1a18      	subs	r0, r3, r0
 80014b8:	b003      	add	sp, #12
 80014ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014bc:	f813 6b01 	ldrb.w	r6, [r3], #1
 80014c0:	f801 6f01 	strb.w	r6, [r1, #1]!
 80014c4:	e7ed      	b.n	80014a2 <__exponent+0x44>
 80014c6:	2330      	movs	r3, #48	@ 0x30
 80014c8:	3130      	adds	r1, #48	@ 0x30
 80014ca:	7083      	strb	r3, [r0, #2]
 80014cc:	70c1      	strb	r1, [r0, #3]
 80014ce:	1d03      	adds	r3, r0, #4
 80014d0:	e7f1      	b.n	80014b6 <__exponent+0x58>
	...

080014d4 <_printf_float>:
 80014d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80014d8:	b08d      	sub	sp, #52	@ 0x34
 80014da:	460c      	mov	r4, r1
 80014dc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80014e0:	4616      	mov	r6, r2
 80014e2:	461f      	mov	r7, r3
 80014e4:	4605      	mov	r5, r0
 80014e6:	f000 fdbd 	bl	8002064 <_localeconv_r>
 80014ea:	6803      	ldr	r3, [r0, #0]
 80014ec:	9304      	str	r3, [sp, #16]
 80014ee:	4618      	mov	r0, r3
 80014f0:	f7fe febe 	bl	8000270 <strlen>
 80014f4:	2300      	movs	r3, #0
 80014f6:	930a      	str	r3, [sp, #40]	@ 0x28
 80014f8:	f8d8 3000 	ldr.w	r3, [r8]
 80014fc:	9005      	str	r0, [sp, #20]
 80014fe:	3307      	adds	r3, #7
 8001500:	f023 0307 	bic.w	r3, r3, #7
 8001504:	f103 0208 	add.w	r2, r3, #8
 8001508:	f894 a018 	ldrb.w	sl, [r4, #24]
 800150c:	f8d4 b000 	ldr.w	fp, [r4]
 8001510:	f8c8 2000 	str.w	r2, [r8]
 8001514:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001518:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800151c:	9307      	str	r3, [sp, #28]
 800151e:	f8cd 8018 	str.w	r8, [sp, #24]
 8001522:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001526:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800152a:	4b9c      	ldr	r3, [pc, #624]	@ (800179c <_printf_float+0x2c8>)
 800152c:	f04f 32ff 	mov.w	r2, #4294967295
 8001530:	f7ff fafc 	bl	8000b2c <__aeabi_dcmpun>
 8001534:	bb70      	cbnz	r0, 8001594 <_printf_float+0xc0>
 8001536:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800153a:	4b98      	ldr	r3, [pc, #608]	@ (800179c <_printf_float+0x2c8>)
 800153c:	f04f 32ff 	mov.w	r2, #4294967295
 8001540:	f7ff fad6 	bl	8000af0 <__aeabi_dcmple>
 8001544:	bb30      	cbnz	r0, 8001594 <_printf_float+0xc0>
 8001546:	2200      	movs	r2, #0
 8001548:	2300      	movs	r3, #0
 800154a:	4640      	mov	r0, r8
 800154c:	4649      	mov	r1, r9
 800154e:	f7ff fac5 	bl	8000adc <__aeabi_dcmplt>
 8001552:	b110      	cbz	r0, 800155a <_printf_float+0x86>
 8001554:	232d      	movs	r3, #45	@ 0x2d
 8001556:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800155a:	4a91      	ldr	r2, [pc, #580]	@ (80017a0 <_printf_float+0x2cc>)
 800155c:	4b91      	ldr	r3, [pc, #580]	@ (80017a4 <_printf_float+0x2d0>)
 800155e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001562:	bf8c      	ite	hi
 8001564:	4690      	movhi	r8, r2
 8001566:	4698      	movls	r8, r3
 8001568:	2303      	movs	r3, #3
 800156a:	6123      	str	r3, [r4, #16]
 800156c:	f02b 0304 	bic.w	r3, fp, #4
 8001570:	6023      	str	r3, [r4, #0]
 8001572:	f04f 0900 	mov.w	r9, #0
 8001576:	9700      	str	r7, [sp, #0]
 8001578:	4633      	mov	r3, r6
 800157a:	aa0b      	add	r2, sp, #44	@ 0x2c
 800157c:	4621      	mov	r1, r4
 800157e:	4628      	mov	r0, r5
 8001580:	f000 f9d2 	bl	8001928 <_printf_common>
 8001584:	3001      	adds	r0, #1
 8001586:	f040 808d 	bne.w	80016a4 <_printf_float+0x1d0>
 800158a:	f04f 30ff 	mov.w	r0, #4294967295
 800158e:	b00d      	add	sp, #52	@ 0x34
 8001590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001594:	4642      	mov	r2, r8
 8001596:	464b      	mov	r3, r9
 8001598:	4640      	mov	r0, r8
 800159a:	4649      	mov	r1, r9
 800159c:	f7ff fac6 	bl	8000b2c <__aeabi_dcmpun>
 80015a0:	b140      	cbz	r0, 80015b4 <_printf_float+0xe0>
 80015a2:	464b      	mov	r3, r9
 80015a4:	2b00      	cmp	r3, #0
 80015a6:	bfbc      	itt	lt
 80015a8:	232d      	movlt	r3, #45	@ 0x2d
 80015aa:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80015ae:	4a7e      	ldr	r2, [pc, #504]	@ (80017a8 <_printf_float+0x2d4>)
 80015b0:	4b7e      	ldr	r3, [pc, #504]	@ (80017ac <_printf_float+0x2d8>)
 80015b2:	e7d4      	b.n	800155e <_printf_float+0x8a>
 80015b4:	6863      	ldr	r3, [r4, #4]
 80015b6:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 80015ba:	9206      	str	r2, [sp, #24]
 80015bc:	1c5a      	adds	r2, r3, #1
 80015be:	d13b      	bne.n	8001638 <_printf_float+0x164>
 80015c0:	2306      	movs	r3, #6
 80015c2:	6063      	str	r3, [r4, #4]
 80015c4:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 80015c8:	2300      	movs	r3, #0
 80015ca:	6022      	str	r2, [r4, #0]
 80015cc:	9303      	str	r3, [sp, #12]
 80015ce:	ab0a      	add	r3, sp, #40	@ 0x28
 80015d0:	e9cd a301 	strd	sl, r3, [sp, #4]
 80015d4:	ab09      	add	r3, sp, #36	@ 0x24
 80015d6:	9300      	str	r3, [sp, #0]
 80015d8:	6861      	ldr	r1, [r4, #4]
 80015da:	ec49 8b10 	vmov	d0, r8, r9
 80015de:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 80015e2:	4628      	mov	r0, r5
 80015e4:	f7ff fed6 	bl	8001394 <__cvt>
 80015e8:	9b06      	ldr	r3, [sp, #24]
 80015ea:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80015ec:	2b47      	cmp	r3, #71	@ 0x47
 80015ee:	4680      	mov	r8, r0
 80015f0:	d129      	bne.n	8001646 <_printf_float+0x172>
 80015f2:	1cc8      	adds	r0, r1, #3
 80015f4:	db02      	blt.n	80015fc <_printf_float+0x128>
 80015f6:	6863      	ldr	r3, [r4, #4]
 80015f8:	4299      	cmp	r1, r3
 80015fa:	dd41      	ble.n	8001680 <_printf_float+0x1ac>
 80015fc:	f1aa 0a02 	sub.w	sl, sl, #2
 8001600:	fa5f fa8a 	uxtb.w	sl, sl
 8001604:	3901      	subs	r1, #1
 8001606:	4652      	mov	r2, sl
 8001608:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800160c:	9109      	str	r1, [sp, #36]	@ 0x24
 800160e:	f7ff ff26 	bl	800145e <__exponent>
 8001612:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001614:	1813      	adds	r3, r2, r0
 8001616:	2a01      	cmp	r2, #1
 8001618:	4681      	mov	r9, r0
 800161a:	6123      	str	r3, [r4, #16]
 800161c:	dc02      	bgt.n	8001624 <_printf_float+0x150>
 800161e:	6822      	ldr	r2, [r4, #0]
 8001620:	07d2      	lsls	r2, r2, #31
 8001622:	d501      	bpl.n	8001628 <_printf_float+0x154>
 8001624:	3301      	adds	r3, #1
 8001626:	6123      	str	r3, [r4, #16]
 8001628:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800162c:	2b00      	cmp	r3, #0
 800162e:	d0a2      	beq.n	8001576 <_printf_float+0xa2>
 8001630:	232d      	movs	r3, #45	@ 0x2d
 8001632:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001636:	e79e      	b.n	8001576 <_printf_float+0xa2>
 8001638:	9a06      	ldr	r2, [sp, #24]
 800163a:	2a47      	cmp	r2, #71	@ 0x47
 800163c:	d1c2      	bne.n	80015c4 <_printf_float+0xf0>
 800163e:	2b00      	cmp	r3, #0
 8001640:	d1c0      	bne.n	80015c4 <_printf_float+0xf0>
 8001642:	2301      	movs	r3, #1
 8001644:	e7bd      	b.n	80015c2 <_printf_float+0xee>
 8001646:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800164a:	d9db      	bls.n	8001604 <_printf_float+0x130>
 800164c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001650:	d118      	bne.n	8001684 <_printf_float+0x1b0>
 8001652:	2900      	cmp	r1, #0
 8001654:	6863      	ldr	r3, [r4, #4]
 8001656:	dd0b      	ble.n	8001670 <_printf_float+0x19c>
 8001658:	6121      	str	r1, [r4, #16]
 800165a:	b913      	cbnz	r3, 8001662 <_printf_float+0x18e>
 800165c:	6822      	ldr	r2, [r4, #0]
 800165e:	07d0      	lsls	r0, r2, #31
 8001660:	d502      	bpl.n	8001668 <_printf_float+0x194>
 8001662:	3301      	adds	r3, #1
 8001664:	440b      	add	r3, r1
 8001666:	6123      	str	r3, [r4, #16]
 8001668:	65a1      	str	r1, [r4, #88]	@ 0x58
 800166a:	f04f 0900 	mov.w	r9, #0
 800166e:	e7db      	b.n	8001628 <_printf_float+0x154>
 8001670:	b913      	cbnz	r3, 8001678 <_printf_float+0x1a4>
 8001672:	6822      	ldr	r2, [r4, #0]
 8001674:	07d2      	lsls	r2, r2, #31
 8001676:	d501      	bpl.n	800167c <_printf_float+0x1a8>
 8001678:	3302      	adds	r3, #2
 800167a:	e7f4      	b.n	8001666 <_printf_float+0x192>
 800167c:	2301      	movs	r3, #1
 800167e:	e7f2      	b.n	8001666 <_printf_float+0x192>
 8001680:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001684:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001686:	4299      	cmp	r1, r3
 8001688:	db05      	blt.n	8001696 <_printf_float+0x1c2>
 800168a:	6823      	ldr	r3, [r4, #0]
 800168c:	6121      	str	r1, [r4, #16]
 800168e:	07d8      	lsls	r0, r3, #31
 8001690:	d5ea      	bpl.n	8001668 <_printf_float+0x194>
 8001692:	1c4b      	adds	r3, r1, #1
 8001694:	e7e7      	b.n	8001666 <_printf_float+0x192>
 8001696:	2900      	cmp	r1, #0
 8001698:	bfd4      	ite	le
 800169a:	f1c1 0202 	rsble	r2, r1, #2
 800169e:	2201      	movgt	r2, #1
 80016a0:	4413      	add	r3, r2
 80016a2:	e7e0      	b.n	8001666 <_printf_float+0x192>
 80016a4:	6823      	ldr	r3, [r4, #0]
 80016a6:	055a      	lsls	r2, r3, #21
 80016a8:	d407      	bmi.n	80016ba <_printf_float+0x1e6>
 80016aa:	6923      	ldr	r3, [r4, #16]
 80016ac:	4642      	mov	r2, r8
 80016ae:	4631      	mov	r1, r6
 80016b0:	4628      	mov	r0, r5
 80016b2:	47b8      	blx	r7
 80016b4:	3001      	adds	r0, #1
 80016b6:	d12b      	bne.n	8001710 <_printf_float+0x23c>
 80016b8:	e767      	b.n	800158a <_printf_float+0xb6>
 80016ba:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80016be:	f240 80dd 	bls.w	800187c <_printf_float+0x3a8>
 80016c2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80016c6:	2200      	movs	r2, #0
 80016c8:	2300      	movs	r3, #0
 80016ca:	f7ff f9fd 	bl	8000ac8 <__aeabi_dcmpeq>
 80016ce:	2800      	cmp	r0, #0
 80016d0:	d033      	beq.n	800173a <_printf_float+0x266>
 80016d2:	4a37      	ldr	r2, [pc, #220]	@ (80017b0 <_printf_float+0x2dc>)
 80016d4:	2301      	movs	r3, #1
 80016d6:	4631      	mov	r1, r6
 80016d8:	4628      	mov	r0, r5
 80016da:	47b8      	blx	r7
 80016dc:	3001      	adds	r0, #1
 80016de:	f43f af54 	beq.w	800158a <_printf_float+0xb6>
 80016e2:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 80016e6:	4543      	cmp	r3, r8
 80016e8:	db02      	blt.n	80016f0 <_printf_float+0x21c>
 80016ea:	6823      	ldr	r3, [r4, #0]
 80016ec:	07d8      	lsls	r0, r3, #31
 80016ee:	d50f      	bpl.n	8001710 <_printf_float+0x23c>
 80016f0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80016f4:	4631      	mov	r1, r6
 80016f6:	4628      	mov	r0, r5
 80016f8:	47b8      	blx	r7
 80016fa:	3001      	adds	r0, #1
 80016fc:	f43f af45 	beq.w	800158a <_printf_float+0xb6>
 8001700:	f04f 0900 	mov.w	r9, #0
 8001704:	f108 38ff 	add.w	r8, r8, #4294967295
 8001708:	f104 0a1a 	add.w	sl, r4, #26
 800170c:	45c8      	cmp	r8, r9
 800170e:	dc09      	bgt.n	8001724 <_printf_float+0x250>
 8001710:	6823      	ldr	r3, [r4, #0]
 8001712:	079b      	lsls	r3, r3, #30
 8001714:	f100 8103 	bmi.w	800191e <_printf_float+0x44a>
 8001718:	68e0      	ldr	r0, [r4, #12]
 800171a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800171c:	4298      	cmp	r0, r3
 800171e:	bfb8      	it	lt
 8001720:	4618      	movlt	r0, r3
 8001722:	e734      	b.n	800158e <_printf_float+0xba>
 8001724:	2301      	movs	r3, #1
 8001726:	4652      	mov	r2, sl
 8001728:	4631      	mov	r1, r6
 800172a:	4628      	mov	r0, r5
 800172c:	47b8      	blx	r7
 800172e:	3001      	adds	r0, #1
 8001730:	f43f af2b 	beq.w	800158a <_printf_float+0xb6>
 8001734:	f109 0901 	add.w	r9, r9, #1
 8001738:	e7e8      	b.n	800170c <_printf_float+0x238>
 800173a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800173c:	2b00      	cmp	r3, #0
 800173e:	dc39      	bgt.n	80017b4 <_printf_float+0x2e0>
 8001740:	4a1b      	ldr	r2, [pc, #108]	@ (80017b0 <_printf_float+0x2dc>)
 8001742:	2301      	movs	r3, #1
 8001744:	4631      	mov	r1, r6
 8001746:	4628      	mov	r0, r5
 8001748:	47b8      	blx	r7
 800174a:	3001      	adds	r0, #1
 800174c:	f43f af1d 	beq.w	800158a <_printf_float+0xb6>
 8001750:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8001754:	ea59 0303 	orrs.w	r3, r9, r3
 8001758:	d102      	bne.n	8001760 <_printf_float+0x28c>
 800175a:	6823      	ldr	r3, [r4, #0]
 800175c:	07d9      	lsls	r1, r3, #31
 800175e:	d5d7      	bpl.n	8001710 <_printf_float+0x23c>
 8001760:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001764:	4631      	mov	r1, r6
 8001766:	4628      	mov	r0, r5
 8001768:	47b8      	blx	r7
 800176a:	3001      	adds	r0, #1
 800176c:	f43f af0d 	beq.w	800158a <_printf_float+0xb6>
 8001770:	f04f 0a00 	mov.w	sl, #0
 8001774:	f104 0b1a 	add.w	fp, r4, #26
 8001778:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800177a:	425b      	negs	r3, r3
 800177c:	4553      	cmp	r3, sl
 800177e:	dc01      	bgt.n	8001784 <_printf_float+0x2b0>
 8001780:	464b      	mov	r3, r9
 8001782:	e793      	b.n	80016ac <_printf_float+0x1d8>
 8001784:	2301      	movs	r3, #1
 8001786:	465a      	mov	r2, fp
 8001788:	4631      	mov	r1, r6
 800178a:	4628      	mov	r0, r5
 800178c:	47b8      	blx	r7
 800178e:	3001      	adds	r0, #1
 8001790:	f43f aefb 	beq.w	800158a <_printf_float+0xb6>
 8001794:	f10a 0a01 	add.w	sl, sl, #1
 8001798:	e7ee      	b.n	8001778 <_printf_float+0x2a4>
 800179a:	bf00      	nop
 800179c:	7fefffff 	.word	0x7fefffff
 80017a0:	08003de3 	.word	0x08003de3
 80017a4:	08003ddf 	.word	0x08003ddf
 80017a8:	08003deb 	.word	0x08003deb
 80017ac:	08003de7 	.word	0x08003de7
 80017b0:	08003def 	.word	0x08003def
 80017b4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80017b6:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80017ba:	4553      	cmp	r3, sl
 80017bc:	bfa8      	it	ge
 80017be:	4653      	movge	r3, sl
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	4699      	mov	r9, r3
 80017c4:	dc36      	bgt.n	8001834 <_printf_float+0x360>
 80017c6:	f04f 0b00 	mov.w	fp, #0
 80017ca:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80017ce:	f104 021a 	add.w	r2, r4, #26
 80017d2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80017d4:	9306      	str	r3, [sp, #24]
 80017d6:	eba3 0309 	sub.w	r3, r3, r9
 80017da:	455b      	cmp	r3, fp
 80017dc:	dc31      	bgt.n	8001842 <_printf_float+0x36e>
 80017de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80017e0:	459a      	cmp	sl, r3
 80017e2:	dc3a      	bgt.n	800185a <_printf_float+0x386>
 80017e4:	6823      	ldr	r3, [r4, #0]
 80017e6:	07da      	lsls	r2, r3, #31
 80017e8:	d437      	bmi.n	800185a <_printf_float+0x386>
 80017ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80017ec:	ebaa 0903 	sub.w	r9, sl, r3
 80017f0:	9b06      	ldr	r3, [sp, #24]
 80017f2:	ebaa 0303 	sub.w	r3, sl, r3
 80017f6:	4599      	cmp	r9, r3
 80017f8:	bfa8      	it	ge
 80017fa:	4699      	movge	r9, r3
 80017fc:	f1b9 0f00 	cmp.w	r9, #0
 8001800:	dc33      	bgt.n	800186a <_printf_float+0x396>
 8001802:	f04f 0800 	mov.w	r8, #0
 8001806:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800180a:	f104 0b1a 	add.w	fp, r4, #26
 800180e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001810:	ebaa 0303 	sub.w	r3, sl, r3
 8001814:	eba3 0309 	sub.w	r3, r3, r9
 8001818:	4543      	cmp	r3, r8
 800181a:	f77f af79 	ble.w	8001710 <_printf_float+0x23c>
 800181e:	2301      	movs	r3, #1
 8001820:	465a      	mov	r2, fp
 8001822:	4631      	mov	r1, r6
 8001824:	4628      	mov	r0, r5
 8001826:	47b8      	blx	r7
 8001828:	3001      	adds	r0, #1
 800182a:	f43f aeae 	beq.w	800158a <_printf_float+0xb6>
 800182e:	f108 0801 	add.w	r8, r8, #1
 8001832:	e7ec      	b.n	800180e <_printf_float+0x33a>
 8001834:	4642      	mov	r2, r8
 8001836:	4631      	mov	r1, r6
 8001838:	4628      	mov	r0, r5
 800183a:	47b8      	blx	r7
 800183c:	3001      	adds	r0, #1
 800183e:	d1c2      	bne.n	80017c6 <_printf_float+0x2f2>
 8001840:	e6a3      	b.n	800158a <_printf_float+0xb6>
 8001842:	2301      	movs	r3, #1
 8001844:	4631      	mov	r1, r6
 8001846:	4628      	mov	r0, r5
 8001848:	9206      	str	r2, [sp, #24]
 800184a:	47b8      	blx	r7
 800184c:	3001      	adds	r0, #1
 800184e:	f43f ae9c 	beq.w	800158a <_printf_float+0xb6>
 8001852:	9a06      	ldr	r2, [sp, #24]
 8001854:	f10b 0b01 	add.w	fp, fp, #1
 8001858:	e7bb      	b.n	80017d2 <_printf_float+0x2fe>
 800185a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800185e:	4631      	mov	r1, r6
 8001860:	4628      	mov	r0, r5
 8001862:	47b8      	blx	r7
 8001864:	3001      	adds	r0, #1
 8001866:	d1c0      	bne.n	80017ea <_printf_float+0x316>
 8001868:	e68f      	b.n	800158a <_printf_float+0xb6>
 800186a:	9a06      	ldr	r2, [sp, #24]
 800186c:	464b      	mov	r3, r9
 800186e:	4442      	add	r2, r8
 8001870:	4631      	mov	r1, r6
 8001872:	4628      	mov	r0, r5
 8001874:	47b8      	blx	r7
 8001876:	3001      	adds	r0, #1
 8001878:	d1c3      	bne.n	8001802 <_printf_float+0x32e>
 800187a:	e686      	b.n	800158a <_printf_float+0xb6>
 800187c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001880:	f1ba 0f01 	cmp.w	sl, #1
 8001884:	dc01      	bgt.n	800188a <_printf_float+0x3b6>
 8001886:	07db      	lsls	r3, r3, #31
 8001888:	d536      	bpl.n	80018f8 <_printf_float+0x424>
 800188a:	2301      	movs	r3, #1
 800188c:	4642      	mov	r2, r8
 800188e:	4631      	mov	r1, r6
 8001890:	4628      	mov	r0, r5
 8001892:	47b8      	blx	r7
 8001894:	3001      	adds	r0, #1
 8001896:	f43f ae78 	beq.w	800158a <_printf_float+0xb6>
 800189a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800189e:	4631      	mov	r1, r6
 80018a0:	4628      	mov	r0, r5
 80018a2:	47b8      	blx	r7
 80018a4:	3001      	adds	r0, #1
 80018a6:	f43f ae70 	beq.w	800158a <_printf_float+0xb6>
 80018aa:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80018ae:	2200      	movs	r2, #0
 80018b0:	2300      	movs	r3, #0
 80018b2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80018b6:	f7ff f907 	bl	8000ac8 <__aeabi_dcmpeq>
 80018ba:	b9c0      	cbnz	r0, 80018ee <_printf_float+0x41a>
 80018bc:	4653      	mov	r3, sl
 80018be:	f108 0201 	add.w	r2, r8, #1
 80018c2:	4631      	mov	r1, r6
 80018c4:	4628      	mov	r0, r5
 80018c6:	47b8      	blx	r7
 80018c8:	3001      	adds	r0, #1
 80018ca:	d10c      	bne.n	80018e6 <_printf_float+0x412>
 80018cc:	e65d      	b.n	800158a <_printf_float+0xb6>
 80018ce:	2301      	movs	r3, #1
 80018d0:	465a      	mov	r2, fp
 80018d2:	4631      	mov	r1, r6
 80018d4:	4628      	mov	r0, r5
 80018d6:	47b8      	blx	r7
 80018d8:	3001      	adds	r0, #1
 80018da:	f43f ae56 	beq.w	800158a <_printf_float+0xb6>
 80018de:	f108 0801 	add.w	r8, r8, #1
 80018e2:	45d0      	cmp	r8, sl
 80018e4:	dbf3      	blt.n	80018ce <_printf_float+0x3fa>
 80018e6:	464b      	mov	r3, r9
 80018e8:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80018ec:	e6df      	b.n	80016ae <_printf_float+0x1da>
 80018ee:	f04f 0800 	mov.w	r8, #0
 80018f2:	f104 0b1a 	add.w	fp, r4, #26
 80018f6:	e7f4      	b.n	80018e2 <_printf_float+0x40e>
 80018f8:	2301      	movs	r3, #1
 80018fa:	4642      	mov	r2, r8
 80018fc:	e7e1      	b.n	80018c2 <_printf_float+0x3ee>
 80018fe:	2301      	movs	r3, #1
 8001900:	464a      	mov	r2, r9
 8001902:	4631      	mov	r1, r6
 8001904:	4628      	mov	r0, r5
 8001906:	47b8      	blx	r7
 8001908:	3001      	adds	r0, #1
 800190a:	f43f ae3e 	beq.w	800158a <_printf_float+0xb6>
 800190e:	f108 0801 	add.w	r8, r8, #1
 8001912:	68e3      	ldr	r3, [r4, #12]
 8001914:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001916:	1a5b      	subs	r3, r3, r1
 8001918:	4543      	cmp	r3, r8
 800191a:	dcf0      	bgt.n	80018fe <_printf_float+0x42a>
 800191c:	e6fc      	b.n	8001718 <_printf_float+0x244>
 800191e:	f04f 0800 	mov.w	r8, #0
 8001922:	f104 0919 	add.w	r9, r4, #25
 8001926:	e7f4      	b.n	8001912 <_printf_float+0x43e>

08001928 <_printf_common>:
 8001928:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800192c:	4616      	mov	r6, r2
 800192e:	4698      	mov	r8, r3
 8001930:	688a      	ldr	r2, [r1, #8]
 8001932:	690b      	ldr	r3, [r1, #16]
 8001934:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001938:	4293      	cmp	r3, r2
 800193a:	bfb8      	it	lt
 800193c:	4613      	movlt	r3, r2
 800193e:	6033      	str	r3, [r6, #0]
 8001940:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001944:	4607      	mov	r7, r0
 8001946:	460c      	mov	r4, r1
 8001948:	b10a      	cbz	r2, 800194e <_printf_common+0x26>
 800194a:	3301      	adds	r3, #1
 800194c:	6033      	str	r3, [r6, #0]
 800194e:	6823      	ldr	r3, [r4, #0]
 8001950:	0699      	lsls	r1, r3, #26
 8001952:	bf42      	ittt	mi
 8001954:	6833      	ldrmi	r3, [r6, #0]
 8001956:	3302      	addmi	r3, #2
 8001958:	6033      	strmi	r3, [r6, #0]
 800195a:	6825      	ldr	r5, [r4, #0]
 800195c:	f015 0506 	ands.w	r5, r5, #6
 8001960:	d106      	bne.n	8001970 <_printf_common+0x48>
 8001962:	f104 0a19 	add.w	sl, r4, #25
 8001966:	68e3      	ldr	r3, [r4, #12]
 8001968:	6832      	ldr	r2, [r6, #0]
 800196a:	1a9b      	subs	r3, r3, r2
 800196c:	42ab      	cmp	r3, r5
 800196e:	dc26      	bgt.n	80019be <_printf_common+0x96>
 8001970:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001974:	6822      	ldr	r2, [r4, #0]
 8001976:	3b00      	subs	r3, #0
 8001978:	bf18      	it	ne
 800197a:	2301      	movne	r3, #1
 800197c:	0692      	lsls	r2, r2, #26
 800197e:	d42b      	bmi.n	80019d8 <_printf_common+0xb0>
 8001980:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001984:	4641      	mov	r1, r8
 8001986:	4638      	mov	r0, r7
 8001988:	47c8      	blx	r9
 800198a:	3001      	adds	r0, #1
 800198c:	d01e      	beq.n	80019cc <_printf_common+0xa4>
 800198e:	6823      	ldr	r3, [r4, #0]
 8001990:	6922      	ldr	r2, [r4, #16]
 8001992:	f003 0306 	and.w	r3, r3, #6
 8001996:	2b04      	cmp	r3, #4
 8001998:	bf02      	ittt	eq
 800199a:	68e5      	ldreq	r5, [r4, #12]
 800199c:	6833      	ldreq	r3, [r6, #0]
 800199e:	1aed      	subeq	r5, r5, r3
 80019a0:	68a3      	ldr	r3, [r4, #8]
 80019a2:	bf0c      	ite	eq
 80019a4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80019a8:	2500      	movne	r5, #0
 80019aa:	4293      	cmp	r3, r2
 80019ac:	bfc4      	itt	gt
 80019ae:	1a9b      	subgt	r3, r3, r2
 80019b0:	18ed      	addgt	r5, r5, r3
 80019b2:	2600      	movs	r6, #0
 80019b4:	341a      	adds	r4, #26
 80019b6:	42b5      	cmp	r5, r6
 80019b8:	d11a      	bne.n	80019f0 <_printf_common+0xc8>
 80019ba:	2000      	movs	r0, #0
 80019bc:	e008      	b.n	80019d0 <_printf_common+0xa8>
 80019be:	2301      	movs	r3, #1
 80019c0:	4652      	mov	r2, sl
 80019c2:	4641      	mov	r1, r8
 80019c4:	4638      	mov	r0, r7
 80019c6:	47c8      	blx	r9
 80019c8:	3001      	adds	r0, #1
 80019ca:	d103      	bne.n	80019d4 <_printf_common+0xac>
 80019cc:	f04f 30ff 	mov.w	r0, #4294967295
 80019d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80019d4:	3501      	adds	r5, #1
 80019d6:	e7c6      	b.n	8001966 <_printf_common+0x3e>
 80019d8:	18e1      	adds	r1, r4, r3
 80019da:	1c5a      	adds	r2, r3, #1
 80019dc:	2030      	movs	r0, #48	@ 0x30
 80019de:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80019e2:	4422      	add	r2, r4
 80019e4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80019e8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80019ec:	3302      	adds	r3, #2
 80019ee:	e7c7      	b.n	8001980 <_printf_common+0x58>
 80019f0:	2301      	movs	r3, #1
 80019f2:	4622      	mov	r2, r4
 80019f4:	4641      	mov	r1, r8
 80019f6:	4638      	mov	r0, r7
 80019f8:	47c8      	blx	r9
 80019fa:	3001      	adds	r0, #1
 80019fc:	d0e6      	beq.n	80019cc <_printf_common+0xa4>
 80019fe:	3601      	adds	r6, #1
 8001a00:	e7d9      	b.n	80019b6 <_printf_common+0x8e>
	...

08001a04 <_printf_i>:
 8001a04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001a08:	7e0f      	ldrb	r7, [r1, #24]
 8001a0a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001a0c:	2f78      	cmp	r7, #120	@ 0x78
 8001a0e:	4691      	mov	r9, r2
 8001a10:	4680      	mov	r8, r0
 8001a12:	460c      	mov	r4, r1
 8001a14:	469a      	mov	sl, r3
 8001a16:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001a1a:	d807      	bhi.n	8001a2c <_printf_i+0x28>
 8001a1c:	2f62      	cmp	r7, #98	@ 0x62
 8001a1e:	d80a      	bhi.n	8001a36 <_printf_i+0x32>
 8001a20:	2f00      	cmp	r7, #0
 8001a22:	f000 80d1 	beq.w	8001bc8 <_printf_i+0x1c4>
 8001a26:	2f58      	cmp	r7, #88	@ 0x58
 8001a28:	f000 80b8 	beq.w	8001b9c <_printf_i+0x198>
 8001a2c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001a30:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001a34:	e03a      	b.n	8001aac <_printf_i+0xa8>
 8001a36:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001a3a:	2b15      	cmp	r3, #21
 8001a3c:	d8f6      	bhi.n	8001a2c <_printf_i+0x28>
 8001a3e:	a101      	add	r1, pc, #4	@ (adr r1, 8001a44 <_printf_i+0x40>)
 8001a40:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001a44:	08001a9d 	.word	0x08001a9d
 8001a48:	08001ab1 	.word	0x08001ab1
 8001a4c:	08001a2d 	.word	0x08001a2d
 8001a50:	08001a2d 	.word	0x08001a2d
 8001a54:	08001a2d 	.word	0x08001a2d
 8001a58:	08001a2d 	.word	0x08001a2d
 8001a5c:	08001ab1 	.word	0x08001ab1
 8001a60:	08001a2d 	.word	0x08001a2d
 8001a64:	08001a2d 	.word	0x08001a2d
 8001a68:	08001a2d 	.word	0x08001a2d
 8001a6c:	08001a2d 	.word	0x08001a2d
 8001a70:	08001baf 	.word	0x08001baf
 8001a74:	08001adb 	.word	0x08001adb
 8001a78:	08001b69 	.word	0x08001b69
 8001a7c:	08001a2d 	.word	0x08001a2d
 8001a80:	08001a2d 	.word	0x08001a2d
 8001a84:	08001bd1 	.word	0x08001bd1
 8001a88:	08001a2d 	.word	0x08001a2d
 8001a8c:	08001adb 	.word	0x08001adb
 8001a90:	08001a2d 	.word	0x08001a2d
 8001a94:	08001a2d 	.word	0x08001a2d
 8001a98:	08001b71 	.word	0x08001b71
 8001a9c:	6833      	ldr	r3, [r6, #0]
 8001a9e:	1d1a      	adds	r2, r3, #4
 8001aa0:	681b      	ldr	r3, [r3, #0]
 8001aa2:	6032      	str	r2, [r6, #0]
 8001aa4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001aa8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001aac:	2301      	movs	r3, #1
 8001aae:	e09c      	b.n	8001bea <_printf_i+0x1e6>
 8001ab0:	6833      	ldr	r3, [r6, #0]
 8001ab2:	6820      	ldr	r0, [r4, #0]
 8001ab4:	1d19      	adds	r1, r3, #4
 8001ab6:	6031      	str	r1, [r6, #0]
 8001ab8:	0606      	lsls	r6, r0, #24
 8001aba:	d501      	bpl.n	8001ac0 <_printf_i+0xbc>
 8001abc:	681d      	ldr	r5, [r3, #0]
 8001abe:	e003      	b.n	8001ac8 <_printf_i+0xc4>
 8001ac0:	0645      	lsls	r5, r0, #25
 8001ac2:	d5fb      	bpl.n	8001abc <_printf_i+0xb8>
 8001ac4:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001ac8:	2d00      	cmp	r5, #0
 8001aca:	da03      	bge.n	8001ad4 <_printf_i+0xd0>
 8001acc:	232d      	movs	r3, #45	@ 0x2d
 8001ace:	426d      	negs	r5, r5
 8001ad0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001ad4:	4858      	ldr	r0, [pc, #352]	@ (8001c38 <_printf_i+0x234>)
 8001ad6:	230a      	movs	r3, #10
 8001ad8:	e011      	b.n	8001afe <_printf_i+0xfa>
 8001ada:	6821      	ldr	r1, [r4, #0]
 8001adc:	6833      	ldr	r3, [r6, #0]
 8001ade:	0608      	lsls	r0, r1, #24
 8001ae0:	f853 5b04 	ldr.w	r5, [r3], #4
 8001ae4:	d402      	bmi.n	8001aec <_printf_i+0xe8>
 8001ae6:	0649      	lsls	r1, r1, #25
 8001ae8:	bf48      	it	mi
 8001aea:	b2ad      	uxthmi	r5, r5
 8001aec:	2f6f      	cmp	r7, #111	@ 0x6f
 8001aee:	4852      	ldr	r0, [pc, #328]	@ (8001c38 <_printf_i+0x234>)
 8001af0:	6033      	str	r3, [r6, #0]
 8001af2:	bf14      	ite	ne
 8001af4:	230a      	movne	r3, #10
 8001af6:	2308      	moveq	r3, #8
 8001af8:	2100      	movs	r1, #0
 8001afa:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001afe:	6866      	ldr	r6, [r4, #4]
 8001b00:	60a6      	str	r6, [r4, #8]
 8001b02:	2e00      	cmp	r6, #0
 8001b04:	db05      	blt.n	8001b12 <_printf_i+0x10e>
 8001b06:	6821      	ldr	r1, [r4, #0]
 8001b08:	432e      	orrs	r6, r5
 8001b0a:	f021 0104 	bic.w	r1, r1, #4
 8001b0e:	6021      	str	r1, [r4, #0]
 8001b10:	d04b      	beq.n	8001baa <_printf_i+0x1a6>
 8001b12:	4616      	mov	r6, r2
 8001b14:	fbb5 f1f3 	udiv	r1, r5, r3
 8001b18:	fb03 5711 	mls	r7, r3, r1, r5
 8001b1c:	5dc7      	ldrb	r7, [r0, r7]
 8001b1e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001b22:	462f      	mov	r7, r5
 8001b24:	42bb      	cmp	r3, r7
 8001b26:	460d      	mov	r5, r1
 8001b28:	d9f4      	bls.n	8001b14 <_printf_i+0x110>
 8001b2a:	2b08      	cmp	r3, #8
 8001b2c:	d10b      	bne.n	8001b46 <_printf_i+0x142>
 8001b2e:	6823      	ldr	r3, [r4, #0]
 8001b30:	07df      	lsls	r7, r3, #31
 8001b32:	d508      	bpl.n	8001b46 <_printf_i+0x142>
 8001b34:	6923      	ldr	r3, [r4, #16]
 8001b36:	6861      	ldr	r1, [r4, #4]
 8001b38:	4299      	cmp	r1, r3
 8001b3a:	bfde      	ittt	le
 8001b3c:	2330      	movle	r3, #48	@ 0x30
 8001b3e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001b42:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001b46:	1b92      	subs	r2, r2, r6
 8001b48:	6122      	str	r2, [r4, #16]
 8001b4a:	f8cd a000 	str.w	sl, [sp]
 8001b4e:	464b      	mov	r3, r9
 8001b50:	aa03      	add	r2, sp, #12
 8001b52:	4621      	mov	r1, r4
 8001b54:	4640      	mov	r0, r8
 8001b56:	f7ff fee7 	bl	8001928 <_printf_common>
 8001b5a:	3001      	adds	r0, #1
 8001b5c:	d14a      	bne.n	8001bf4 <_printf_i+0x1f0>
 8001b5e:	f04f 30ff 	mov.w	r0, #4294967295
 8001b62:	b004      	add	sp, #16
 8001b64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001b68:	6823      	ldr	r3, [r4, #0]
 8001b6a:	f043 0320 	orr.w	r3, r3, #32
 8001b6e:	6023      	str	r3, [r4, #0]
 8001b70:	4832      	ldr	r0, [pc, #200]	@ (8001c3c <_printf_i+0x238>)
 8001b72:	2778      	movs	r7, #120	@ 0x78
 8001b74:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001b78:	6823      	ldr	r3, [r4, #0]
 8001b7a:	6831      	ldr	r1, [r6, #0]
 8001b7c:	061f      	lsls	r7, r3, #24
 8001b7e:	f851 5b04 	ldr.w	r5, [r1], #4
 8001b82:	d402      	bmi.n	8001b8a <_printf_i+0x186>
 8001b84:	065f      	lsls	r7, r3, #25
 8001b86:	bf48      	it	mi
 8001b88:	b2ad      	uxthmi	r5, r5
 8001b8a:	6031      	str	r1, [r6, #0]
 8001b8c:	07d9      	lsls	r1, r3, #31
 8001b8e:	bf44      	itt	mi
 8001b90:	f043 0320 	orrmi.w	r3, r3, #32
 8001b94:	6023      	strmi	r3, [r4, #0]
 8001b96:	b11d      	cbz	r5, 8001ba0 <_printf_i+0x19c>
 8001b98:	2310      	movs	r3, #16
 8001b9a:	e7ad      	b.n	8001af8 <_printf_i+0xf4>
 8001b9c:	4826      	ldr	r0, [pc, #152]	@ (8001c38 <_printf_i+0x234>)
 8001b9e:	e7e9      	b.n	8001b74 <_printf_i+0x170>
 8001ba0:	6823      	ldr	r3, [r4, #0]
 8001ba2:	f023 0320 	bic.w	r3, r3, #32
 8001ba6:	6023      	str	r3, [r4, #0]
 8001ba8:	e7f6      	b.n	8001b98 <_printf_i+0x194>
 8001baa:	4616      	mov	r6, r2
 8001bac:	e7bd      	b.n	8001b2a <_printf_i+0x126>
 8001bae:	6833      	ldr	r3, [r6, #0]
 8001bb0:	6825      	ldr	r5, [r4, #0]
 8001bb2:	6961      	ldr	r1, [r4, #20]
 8001bb4:	1d18      	adds	r0, r3, #4
 8001bb6:	6030      	str	r0, [r6, #0]
 8001bb8:	062e      	lsls	r6, r5, #24
 8001bba:	681b      	ldr	r3, [r3, #0]
 8001bbc:	d501      	bpl.n	8001bc2 <_printf_i+0x1be>
 8001bbe:	6019      	str	r1, [r3, #0]
 8001bc0:	e002      	b.n	8001bc8 <_printf_i+0x1c4>
 8001bc2:	0668      	lsls	r0, r5, #25
 8001bc4:	d5fb      	bpl.n	8001bbe <_printf_i+0x1ba>
 8001bc6:	8019      	strh	r1, [r3, #0]
 8001bc8:	2300      	movs	r3, #0
 8001bca:	6123      	str	r3, [r4, #16]
 8001bcc:	4616      	mov	r6, r2
 8001bce:	e7bc      	b.n	8001b4a <_printf_i+0x146>
 8001bd0:	6833      	ldr	r3, [r6, #0]
 8001bd2:	1d1a      	adds	r2, r3, #4
 8001bd4:	6032      	str	r2, [r6, #0]
 8001bd6:	681e      	ldr	r6, [r3, #0]
 8001bd8:	6862      	ldr	r2, [r4, #4]
 8001bda:	2100      	movs	r1, #0
 8001bdc:	4630      	mov	r0, r6
 8001bde:	f7fe faf7 	bl	80001d0 <memchr>
 8001be2:	b108      	cbz	r0, 8001be8 <_printf_i+0x1e4>
 8001be4:	1b80      	subs	r0, r0, r6
 8001be6:	6060      	str	r0, [r4, #4]
 8001be8:	6863      	ldr	r3, [r4, #4]
 8001bea:	6123      	str	r3, [r4, #16]
 8001bec:	2300      	movs	r3, #0
 8001bee:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001bf2:	e7aa      	b.n	8001b4a <_printf_i+0x146>
 8001bf4:	6923      	ldr	r3, [r4, #16]
 8001bf6:	4632      	mov	r2, r6
 8001bf8:	4649      	mov	r1, r9
 8001bfa:	4640      	mov	r0, r8
 8001bfc:	47d0      	blx	sl
 8001bfe:	3001      	adds	r0, #1
 8001c00:	d0ad      	beq.n	8001b5e <_printf_i+0x15a>
 8001c02:	6823      	ldr	r3, [r4, #0]
 8001c04:	079b      	lsls	r3, r3, #30
 8001c06:	d413      	bmi.n	8001c30 <_printf_i+0x22c>
 8001c08:	68e0      	ldr	r0, [r4, #12]
 8001c0a:	9b03      	ldr	r3, [sp, #12]
 8001c0c:	4298      	cmp	r0, r3
 8001c0e:	bfb8      	it	lt
 8001c10:	4618      	movlt	r0, r3
 8001c12:	e7a6      	b.n	8001b62 <_printf_i+0x15e>
 8001c14:	2301      	movs	r3, #1
 8001c16:	4632      	mov	r2, r6
 8001c18:	4649      	mov	r1, r9
 8001c1a:	4640      	mov	r0, r8
 8001c1c:	47d0      	blx	sl
 8001c1e:	3001      	adds	r0, #1
 8001c20:	d09d      	beq.n	8001b5e <_printf_i+0x15a>
 8001c22:	3501      	adds	r5, #1
 8001c24:	68e3      	ldr	r3, [r4, #12]
 8001c26:	9903      	ldr	r1, [sp, #12]
 8001c28:	1a5b      	subs	r3, r3, r1
 8001c2a:	42ab      	cmp	r3, r5
 8001c2c:	dcf2      	bgt.n	8001c14 <_printf_i+0x210>
 8001c2e:	e7eb      	b.n	8001c08 <_printf_i+0x204>
 8001c30:	2500      	movs	r5, #0
 8001c32:	f104 0619 	add.w	r6, r4, #25
 8001c36:	e7f5      	b.n	8001c24 <_printf_i+0x220>
 8001c38:	08003df1 	.word	0x08003df1
 8001c3c:	08003e02 	.word	0x08003e02

08001c40 <std>:
 8001c40:	2300      	movs	r3, #0
 8001c42:	b510      	push	{r4, lr}
 8001c44:	4604      	mov	r4, r0
 8001c46:	e9c0 3300 	strd	r3, r3, [r0]
 8001c4a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001c4e:	6083      	str	r3, [r0, #8]
 8001c50:	8181      	strh	r1, [r0, #12]
 8001c52:	6643      	str	r3, [r0, #100]	@ 0x64
 8001c54:	81c2      	strh	r2, [r0, #14]
 8001c56:	6183      	str	r3, [r0, #24]
 8001c58:	4619      	mov	r1, r3
 8001c5a:	2208      	movs	r2, #8
 8001c5c:	305c      	adds	r0, #92	@ 0x5c
 8001c5e:	f000 f9f9 	bl	8002054 <memset>
 8001c62:	4b0d      	ldr	r3, [pc, #52]	@ (8001c98 <std+0x58>)
 8001c64:	6263      	str	r3, [r4, #36]	@ 0x24
 8001c66:	4b0d      	ldr	r3, [pc, #52]	@ (8001c9c <std+0x5c>)
 8001c68:	62a3      	str	r3, [r4, #40]	@ 0x28
 8001c6a:	4b0d      	ldr	r3, [pc, #52]	@ (8001ca0 <std+0x60>)
 8001c6c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001c6e:	4b0d      	ldr	r3, [pc, #52]	@ (8001ca4 <std+0x64>)
 8001c70:	6323      	str	r3, [r4, #48]	@ 0x30
 8001c72:	4b0d      	ldr	r3, [pc, #52]	@ (8001ca8 <std+0x68>)
 8001c74:	6224      	str	r4, [r4, #32]
 8001c76:	429c      	cmp	r4, r3
 8001c78:	d006      	beq.n	8001c88 <std+0x48>
 8001c7a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8001c7e:	4294      	cmp	r4, r2
 8001c80:	d002      	beq.n	8001c88 <std+0x48>
 8001c82:	33d0      	adds	r3, #208	@ 0xd0
 8001c84:	429c      	cmp	r4, r3
 8001c86:	d105      	bne.n	8001c94 <std+0x54>
 8001c88:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001c8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001c90:	f000 ba5c 	b.w	800214c <__retarget_lock_init_recursive>
 8001c94:	bd10      	pop	{r4, pc}
 8001c96:	bf00      	nop
 8001c98:	08001ea5 	.word	0x08001ea5
 8001c9c:	08001ec7 	.word	0x08001ec7
 8001ca0:	08001eff 	.word	0x08001eff
 8001ca4:	08001f23 	.word	0x08001f23
 8001ca8:	200001f0 	.word	0x200001f0

08001cac <stdio_exit_handler>:
 8001cac:	4a02      	ldr	r2, [pc, #8]	@ (8001cb8 <stdio_exit_handler+0xc>)
 8001cae:	4903      	ldr	r1, [pc, #12]	@ (8001cbc <stdio_exit_handler+0x10>)
 8001cb0:	4803      	ldr	r0, [pc, #12]	@ (8001cc0 <stdio_exit_handler+0x14>)
 8001cb2:	f000 b869 	b.w	8001d88 <_fwalk_sglue>
 8001cb6:	bf00      	nop
 8001cb8:	20000004 	.word	0x20000004
 8001cbc:	08003a89 	.word	0x08003a89
 8001cc0:	20000014 	.word	0x20000014

08001cc4 <cleanup_stdio>:
 8001cc4:	6841      	ldr	r1, [r0, #4]
 8001cc6:	4b0c      	ldr	r3, [pc, #48]	@ (8001cf8 <cleanup_stdio+0x34>)
 8001cc8:	4299      	cmp	r1, r3
 8001cca:	b510      	push	{r4, lr}
 8001ccc:	4604      	mov	r4, r0
 8001cce:	d001      	beq.n	8001cd4 <cleanup_stdio+0x10>
 8001cd0:	f001 feda 	bl	8003a88 <_fflush_r>
 8001cd4:	68a1      	ldr	r1, [r4, #8]
 8001cd6:	4b09      	ldr	r3, [pc, #36]	@ (8001cfc <cleanup_stdio+0x38>)
 8001cd8:	4299      	cmp	r1, r3
 8001cda:	d002      	beq.n	8001ce2 <cleanup_stdio+0x1e>
 8001cdc:	4620      	mov	r0, r4
 8001cde:	f001 fed3 	bl	8003a88 <_fflush_r>
 8001ce2:	68e1      	ldr	r1, [r4, #12]
 8001ce4:	4b06      	ldr	r3, [pc, #24]	@ (8001d00 <cleanup_stdio+0x3c>)
 8001ce6:	4299      	cmp	r1, r3
 8001ce8:	d004      	beq.n	8001cf4 <cleanup_stdio+0x30>
 8001cea:	4620      	mov	r0, r4
 8001cec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001cf0:	f001 beca 	b.w	8003a88 <_fflush_r>
 8001cf4:	bd10      	pop	{r4, pc}
 8001cf6:	bf00      	nop
 8001cf8:	200001f0 	.word	0x200001f0
 8001cfc:	20000258 	.word	0x20000258
 8001d00:	200002c0 	.word	0x200002c0

08001d04 <global_stdio_init.part.0>:
 8001d04:	b510      	push	{r4, lr}
 8001d06:	4b0b      	ldr	r3, [pc, #44]	@ (8001d34 <global_stdio_init.part.0+0x30>)
 8001d08:	4c0b      	ldr	r4, [pc, #44]	@ (8001d38 <global_stdio_init.part.0+0x34>)
 8001d0a:	4a0c      	ldr	r2, [pc, #48]	@ (8001d3c <global_stdio_init.part.0+0x38>)
 8001d0c:	601a      	str	r2, [r3, #0]
 8001d0e:	4620      	mov	r0, r4
 8001d10:	2200      	movs	r2, #0
 8001d12:	2104      	movs	r1, #4
 8001d14:	f7ff ff94 	bl	8001c40 <std>
 8001d18:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8001d1c:	2201      	movs	r2, #1
 8001d1e:	2109      	movs	r1, #9
 8001d20:	f7ff ff8e 	bl	8001c40 <std>
 8001d24:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8001d28:	2202      	movs	r2, #2
 8001d2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d2e:	2112      	movs	r1, #18
 8001d30:	f7ff bf86 	b.w	8001c40 <std>
 8001d34:	20000328 	.word	0x20000328
 8001d38:	200001f0 	.word	0x200001f0
 8001d3c:	08001cad 	.word	0x08001cad

08001d40 <__sfp_lock_acquire>:
 8001d40:	4801      	ldr	r0, [pc, #4]	@ (8001d48 <__sfp_lock_acquire+0x8>)
 8001d42:	f000 ba04 	b.w	800214e <__retarget_lock_acquire_recursive>
 8001d46:	bf00      	nop
 8001d48:	20000331 	.word	0x20000331

08001d4c <__sfp_lock_release>:
 8001d4c:	4801      	ldr	r0, [pc, #4]	@ (8001d54 <__sfp_lock_release+0x8>)
 8001d4e:	f000 b9ff 	b.w	8002150 <__retarget_lock_release_recursive>
 8001d52:	bf00      	nop
 8001d54:	20000331 	.word	0x20000331

08001d58 <__sinit>:
 8001d58:	b510      	push	{r4, lr}
 8001d5a:	4604      	mov	r4, r0
 8001d5c:	f7ff fff0 	bl	8001d40 <__sfp_lock_acquire>
 8001d60:	6a23      	ldr	r3, [r4, #32]
 8001d62:	b11b      	cbz	r3, 8001d6c <__sinit+0x14>
 8001d64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d68:	f7ff bff0 	b.w	8001d4c <__sfp_lock_release>
 8001d6c:	4b04      	ldr	r3, [pc, #16]	@ (8001d80 <__sinit+0x28>)
 8001d6e:	6223      	str	r3, [r4, #32]
 8001d70:	4b04      	ldr	r3, [pc, #16]	@ (8001d84 <__sinit+0x2c>)
 8001d72:	681b      	ldr	r3, [r3, #0]
 8001d74:	2b00      	cmp	r3, #0
 8001d76:	d1f5      	bne.n	8001d64 <__sinit+0xc>
 8001d78:	f7ff ffc4 	bl	8001d04 <global_stdio_init.part.0>
 8001d7c:	e7f2      	b.n	8001d64 <__sinit+0xc>
 8001d7e:	bf00      	nop
 8001d80:	08001cc5 	.word	0x08001cc5
 8001d84:	20000328 	.word	0x20000328

08001d88 <_fwalk_sglue>:
 8001d88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001d8c:	4607      	mov	r7, r0
 8001d8e:	4688      	mov	r8, r1
 8001d90:	4614      	mov	r4, r2
 8001d92:	2600      	movs	r6, #0
 8001d94:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001d98:	f1b9 0901 	subs.w	r9, r9, #1
 8001d9c:	d505      	bpl.n	8001daa <_fwalk_sglue+0x22>
 8001d9e:	6824      	ldr	r4, [r4, #0]
 8001da0:	2c00      	cmp	r4, #0
 8001da2:	d1f7      	bne.n	8001d94 <_fwalk_sglue+0xc>
 8001da4:	4630      	mov	r0, r6
 8001da6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001daa:	89ab      	ldrh	r3, [r5, #12]
 8001dac:	2b01      	cmp	r3, #1
 8001dae:	d907      	bls.n	8001dc0 <_fwalk_sglue+0x38>
 8001db0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001db4:	3301      	adds	r3, #1
 8001db6:	d003      	beq.n	8001dc0 <_fwalk_sglue+0x38>
 8001db8:	4629      	mov	r1, r5
 8001dba:	4638      	mov	r0, r7
 8001dbc:	47c0      	blx	r8
 8001dbe:	4306      	orrs	r6, r0
 8001dc0:	3568      	adds	r5, #104	@ 0x68
 8001dc2:	e7e9      	b.n	8001d98 <_fwalk_sglue+0x10>

08001dc4 <iprintf>:
 8001dc4:	b40f      	push	{r0, r1, r2, r3}
 8001dc6:	b507      	push	{r0, r1, r2, lr}
 8001dc8:	4906      	ldr	r1, [pc, #24]	@ (8001de4 <iprintf+0x20>)
 8001dca:	ab04      	add	r3, sp, #16
 8001dcc:	6808      	ldr	r0, [r1, #0]
 8001dce:	f853 2b04 	ldr.w	r2, [r3], #4
 8001dd2:	6881      	ldr	r1, [r0, #8]
 8001dd4:	9301      	str	r3, [sp, #4]
 8001dd6:	f001 fcbb 	bl	8003750 <_vfiprintf_r>
 8001dda:	b003      	add	sp, #12
 8001ddc:	f85d eb04 	ldr.w	lr, [sp], #4
 8001de0:	b004      	add	sp, #16
 8001de2:	4770      	bx	lr
 8001de4:	20000010 	.word	0x20000010

08001de8 <_puts_r>:
 8001de8:	6a03      	ldr	r3, [r0, #32]
 8001dea:	b570      	push	{r4, r5, r6, lr}
 8001dec:	6884      	ldr	r4, [r0, #8]
 8001dee:	4605      	mov	r5, r0
 8001df0:	460e      	mov	r6, r1
 8001df2:	b90b      	cbnz	r3, 8001df8 <_puts_r+0x10>
 8001df4:	f7ff ffb0 	bl	8001d58 <__sinit>
 8001df8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001dfa:	07db      	lsls	r3, r3, #31
 8001dfc:	d405      	bmi.n	8001e0a <_puts_r+0x22>
 8001dfe:	89a3      	ldrh	r3, [r4, #12]
 8001e00:	0598      	lsls	r0, r3, #22
 8001e02:	d402      	bmi.n	8001e0a <_puts_r+0x22>
 8001e04:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001e06:	f000 f9a2 	bl	800214e <__retarget_lock_acquire_recursive>
 8001e0a:	89a3      	ldrh	r3, [r4, #12]
 8001e0c:	0719      	lsls	r1, r3, #28
 8001e0e:	d502      	bpl.n	8001e16 <_puts_r+0x2e>
 8001e10:	6923      	ldr	r3, [r4, #16]
 8001e12:	2b00      	cmp	r3, #0
 8001e14:	d135      	bne.n	8001e82 <_puts_r+0x9a>
 8001e16:	4621      	mov	r1, r4
 8001e18:	4628      	mov	r0, r5
 8001e1a:	f000 f8c5 	bl	8001fa8 <__swsetup_r>
 8001e1e:	b380      	cbz	r0, 8001e82 <_puts_r+0x9a>
 8001e20:	f04f 35ff 	mov.w	r5, #4294967295
 8001e24:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001e26:	07da      	lsls	r2, r3, #31
 8001e28:	d405      	bmi.n	8001e36 <_puts_r+0x4e>
 8001e2a:	89a3      	ldrh	r3, [r4, #12]
 8001e2c:	059b      	lsls	r3, r3, #22
 8001e2e:	d402      	bmi.n	8001e36 <_puts_r+0x4e>
 8001e30:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001e32:	f000 f98d 	bl	8002150 <__retarget_lock_release_recursive>
 8001e36:	4628      	mov	r0, r5
 8001e38:	bd70      	pop	{r4, r5, r6, pc}
 8001e3a:	2b00      	cmp	r3, #0
 8001e3c:	da04      	bge.n	8001e48 <_puts_r+0x60>
 8001e3e:	69a2      	ldr	r2, [r4, #24]
 8001e40:	429a      	cmp	r2, r3
 8001e42:	dc17      	bgt.n	8001e74 <_puts_r+0x8c>
 8001e44:	290a      	cmp	r1, #10
 8001e46:	d015      	beq.n	8001e74 <_puts_r+0x8c>
 8001e48:	6823      	ldr	r3, [r4, #0]
 8001e4a:	1c5a      	adds	r2, r3, #1
 8001e4c:	6022      	str	r2, [r4, #0]
 8001e4e:	7019      	strb	r1, [r3, #0]
 8001e50:	68a3      	ldr	r3, [r4, #8]
 8001e52:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001e56:	3b01      	subs	r3, #1
 8001e58:	60a3      	str	r3, [r4, #8]
 8001e5a:	2900      	cmp	r1, #0
 8001e5c:	d1ed      	bne.n	8001e3a <_puts_r+0x52>
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	da11      	bge.n	8001e86 <_puts_r+0x9e>
 8001e62:	4622      	mov	r2, r4
 8001e64:	210a      	movs	r1, #10
 8001e66:	4628      	mov	r0, r5
 8001e68:	f000 f85f 	bl	8001f2a <__swbuf_r>
 8001e6c:	3001      	adds	r0, #1
 8001e6e:	d0d7      	beq.n	8001e20 <_puts_r+0x38>
 8001e70:	250a      	movs	r5, #10
 8001e72:	e7d7      	b.n	8001e24 <_puts_r+0x3c>
 8001e74:	4622      	mov	r2, r4
 8001e76:	4628      	mov	r0, r5
 8001e78:	f000 f857 	bl	8001f2a <__swbuf_r>
 8001e7c:	3001      	adds	r0, #1
 8001e7e:	d1e7      	bne.n	8001e50 <_puts_r+0x68>
 8001e80:	e7ce      	b.n	8001e20 <_puts_r+0x38>
 8001e82:	3e01      	subs	r6, #1
 8001e84:	e7e4      	b.n	8001e50 <_puts_r+0x68>
 8001e86:	6823      	ldr	r3, [r4, #0]
 8001e88:	1c5a      	adds	r2, r3, #1
 8001e8a:	6022      	str	r2, [r4, #0]
 8001e8c:	220a      	movs	r2, #10
 8001e8e:	701a      	strb	r2, [r3, #0]
 8001e90:	e7ee      	b.n	8001e70 <_puts_r+0x88>
	...

08001e94 <puts>:
 8001e94:	4b02      	ldr	r3, [pc, #8]	@ (8001ea0 <puts+0xc>)
 8001e96:	4601      	mov	r1, r0
 8001e98:	6818      	ldr	r0, [r3, #0]
 8001e9a:	f7ff bfa5 	b.w	8001de8 <_puts_r>
 8001e9e:	bf00      	nop
 8001ea0:	20000010 	.word	0x20000010

08001ea4 <__sread>:
 8001ea4:	b510      	push	{r4, lr}
 8001ea6:	460c      	mov	r4, r1
 8001ea8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001eac:	f000 f900 	bl	80020b0 <_read_r>
 8001eb0:	2800      	cmp	r0, #0
 8001eb2:	bfab      	itete	ge
 8001eb4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8001eb6:	89a3      	ldrhlt	r3, [r4, #12]
 8001eb8:	181b      	addge	r3, r3, r0
 8001eba:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8001ebe:	bfac      	ite	ge
 8001ec0:	6563      	strge	r3, [r4, #84]	@ 0x54
 8001ec2:	81a3      	strhlt	r3, [r4, #12]
 8001ec4:	bd10      	pop	{r4, pc}

08001ec6 <__swrite>:
 8001ec6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001eca:	461f      	mov	r7, r3
 8001ecc:	898b      	ldrh	r3, [r1, #12]
 8001ece:	05db      	lsls	r3, r3, #23
 8001ed0:	4605      	mov	r5, r0
 8001ed2:	460c      	mov	r4, r1
 8001ed4:	4616      	mov	r6, r2
 8001ed6:	d505      	bpl.n	8001ee4 <__swrite+0x1e>
 8001ed8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001edc:	2302      	movs	r3, #2
 8001ede:	2200      	movs	r2, #0
 8001ee0:	f000 f8d4 	bl	800208c <_lseek_r>
 8001ee4:	89a3      	ldrh	r3, [r4, #12]
 8001ee6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001eea:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8001eee:	81a3      	strh	r3, [r4, #12]
 8001ef0:	4632      	mov	r2, r6
 8001ef2:	463b      	mov	r3, r7
 8001ef4:	4628      	mov	r0, r5
 8001ef6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001efa:	f000 b8eb 	b.w	80020d4 <_write_r>

08001efe <__sseek>:
 8001efe:	b510      	push	{r4, lr}
 8001f00:	460c      	mov	r4, r1
 8001f02:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001f06:	f000 f8c1 	bl	800208c <_lseek_r>
 8001f0a:	1c43      	adds	r3, r0, #1
 8001f0c:	89a3      	ldrh	r3, [r4, #12]
 8001f0e:	bf15      	itete	ne
 8001f10:	6560      	strne	r0, [r4, #84]	@ 0x54
 8001f12:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8001f16:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8001f1a:	81a3      	strheq	r3, [r4, #12]
 8001f1c:	bf18      	it	ne
 8001f1e:	81a3      	strhne	r3, [r4, #12]
 8001f20:	bd10      	pop	{r4, pc}

08001f22 <__sclose>:
 8001f22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001f26:	f000 b8a1 	b.w	800206c <_close_r>

08001f2a <__swbuf_r>:
 8001f2a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001f2c:	460e      	mov	r6, r1
 8001f2e:	4614      	mov	r4, r2
 8001f30:	4605      	mov	r5, r0
 8001f32:	b118      	cbz	r0, 8001f3c <__swbuf_r+0x12>
 8001f34:	6a03      	ldr	r3, [r0, #32]
 8001f36:	b90b      	cbnz	r3, 8001f3c <__swbuf_r+0x12>
 8001f38:	f7ff ff0e 	bl	8001d58 <__sinit>
 8001f3c:	69a3      	ldr	r3, [r4, #24]
 8001f3e:	60a3      	str	r3, [r4, #8]
 8001f40:	89a3      	ldrh	r3, [r4, #12]
 8001f42:	071a      	lsls	r2, r3, #28
 8001f44:	d501      	bpl.n	8001f4a <__swbuf_r+0x20>
 8001f46:	6923      	ldr	r3, [r4, #16]
 8001f48:	b943      	cbnz	r3, 8001f5c <__swbuf_r+0x32>
 8001f4a:	4621      	mov	r1, r4
 8001f4c:	4628      	mov	r0, r5
 8001f4e:	f000 f82b 	bl	8001fa8 <__swsetup_r>
 8001f52:	b118      	cbz	r0, 8001f5c <__swbuf_r+0x32>
 8001f54:	f04f 37ff 	mov.w	r7, #4294967295
 8001f58:	4638      	mov	r0, r7
 8001f5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f5c:	6823      	ldr	r3, [r4, #0]
 8001f5e:	6922      	ldr	r2, [r4, #16]
 8001f60:	1a98      	subs	r0, r3, r2
 8001f62:	6963      	ldr	r3, [r4, #20]
 8001f64:	b2f6      	uxtb	r6, r6
 8001f66:	4283      	cmp	r3, r0
 8001f68:	4637      	mov	r7, r6
 8001f6a:	dc05      	bgt.n	8001f78 <__swbuf_r+0x4e>
 8001f6c:	4621      	mov	r1, r4
 8001f6e:	4628      	mov	r0, r5
 8001f70:	f001 fd8a 	bl	8003a88 <_fflush_r>
 8001f74:	2800      	cmp	r0, #0
 8001f76:	d1ed      	bne.n	8001f54 <__swbuf_r+0x2a>
 8001f78:	68a3      	ldr	r3, [r4, #8]
 8001f7a:	3b01      	subs	r3, #1
 8001f7c:	60a3      	str	r3, [r4, #8]
 8001f7e:	6823      	ldr	r3, [r4, #0]
 8001f80:	1c5a      	adds	r2, r3, #1
 8001f82:	6022      	str	r2, [r4, #0]
 8001f84:	701e      	strb	r6, [r3, #0]
 8001f86:	6962      	ldr	r2, [r4, #20]
 8001f88:	1c43      	adds	r3, r0, #1
 8001f8a:	429a      	cmp	r2, r3
 8001f8c:	d004      	beq.n	8001f98 <__swbuf_r+0x6e>
 8001f8e:	89a3      	ldrh	r3, [r4, #12]
 8001f90:	07db      	lsls	r3, r3, #31
 8001f92:	d5e1      	bpl.n	8001f58 <__swbuf_r+0x2e>
 8001f94:	2e0a      	cmp	r6, #10
 8001f96:	d1df      	bne.n	8001f58 <__swbuf_r+0x2e>
 8001f98:	4621      	mov	r1, r4
 8001f9a:	4628      	mov	r0, r5
 8001f9c:	f001 fd74 	bl	8003a88 <_fflush_r>
 8001fa0:	2800      	cmp	r0, #0
 8001fa2:	d0d9      	beq.n	8001f58 <__swbuf_r+0x2e>
 8001fa4:	e7d6      	b.n	8001f54 <__swbuf_r+0x2a>
	...

08001fa8 <__swsetup_r>:
 8001fa8:	b538      	push	{r3, r4, r5, lr}
 8001faa:	4b29      	ldr	r3, [pc, #164]	@ (8002050 <__swsetup_r+0xa8>)
 8001fac:	4605      	mov	r5, r0
 8001fae:	6818      	ldr	r0, [r3, #0]
 8001fb0:	460c      	mov	r4, r1
 8001fb2:	b118      	cbz	r0, 8001fbc <__swsetup_r+0x14>
 8001fb4:	6a03      	ldr	r3, [r0, #32]
 8001fb6:	b90b      	cbnz	r3, 8001fbc <__swsetup_r+0x14>
 8001fb8:	f7ff fece 	bl	8001d58 <__sinit>
 8001fbc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001fc0:	0719      	lsls	r1, r3, #28
 8001fc2:	d422      	bmi.n	800200a <__swsetup_r+0x62>
 8001fc4:	06da      	lsls	r2, r3, #27
 8001fc6:	d407      	bmi.n	8001fd8 <__swsetup_r+0x30>
 8001fc8:	2209      	movs	r2, #9
 8001fca:	602a      	str	r2, [r5, #0]
 8001fcc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001fd0:	81a3      	strh	r3, [r4, #12]
 8001fd2:	f04f 30ff 	mov.w	r0, #4294967295
 8001fd6:	e033      	b.n	8002040 <__swsetup_r+0x98>
 8001fd8:	0758      	lsls	r0, r3, #29
 8001fda:	d512      	bpl.n	8002002 <__swsetup_r+0x5a>
 8001fdc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001fde:	b141      	cbz	r1, 8001ff2 <__swsetup_r+0x4a>
 8001fe0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001fe4:	4299      	cmp	r1, r3
 8001fe6:	d002      	beq.n	8001fee <__swsetup_r+0x46>
 8001fe8:	4628      	mov	r0, r5
 8001fea:	f000 ff0d 	bl	8002e08 <_free_r>
 8001fee:	2300      	movs	r3, #0
 8001ff0:	6363      	str	r3, [r4, #52]	@ 0x34
 8001ff2:	89a3      	ldrh	r3, [r4, #12]
 8001ff4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001ff8:	81a3      	strh	r3, [r4, #12]
 8001ffa:	2300      	movs	r3, #0
 8001ffc:	6063      	str	r3, [r4, #4]
 8001ffe:	6923      	ldr	r3, [r4, #16]
 8002000:	6023      	str	r3, [r4, #0]
 8002002:	89a3      	ldrh	r3, [r4, #12]
 8002004:	f043 0308 	orr.w	r3, r3, #8
 8002008:	81a3      	strh	r3, [r4, #12]
 800200a:	6923      	ldr	r3, [r4, #16]
 800200c:	b94b      	cbnz	r3, 8002022 <__swsetup_r+0x7a>
 800200e:	89a3      	ldrh	r3, [r4, #12]
 8002010:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8002014:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002018:	d003      	beq.n	8002022 <__swsetup_r+0x7a>
 800201a:	4621      	mov	r1, r4
 800201c:	4628      	mov	r0, r5
 800201e:	f001 fd81 	bl	8003b24 <__smakebuf_r>
 8002022:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002026:	f013 0201 	ands.w	r2, r3, #1
 800202a:	d00a      	beq.n	8002042 <__swsetup_r+0x9a>
 800202c:	2200      	movs	r2, #0
 800202e:	60a2      	str	r2, [r4, #8]
 8002030:	6962      	ldr	r2, [r4, #20]
 8002032:	4252      	negs	r2, r2
 8002034:	61a2      	str	r2, [r4, #24]
 8002036:	6922      	ldr	r2, [r4, #16]
 8002038:	b942      	cbnz	r2, 800204c <__swsetup_r+0xa4>
 800203a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800203e:	d1c5      	bne.n	8001fcc <__swsetup_r+0x24>
 8002040:	bd38      	pop	{r3, r4, r5, pc}
 8002042:	0799      	lsls	r1, r3, #30
 8002044:	bf58      	it	pl
 8002046:	6962      	ldrpl	r2, [r4, #20]
 8002048:	60a2      	str	r2, [r4, #8]
 800204a:	e7f4      	b.n	8002036 <__swsetup_r+0x8e>
 800204c:	2000      	movs	r0, #0
 800204e:	e7f7      	b.n	8002040 <__swsetup_r+0x98>
 8002050:	20000010 	.word	0x20000010

08002054 <memset>:
 8002054:	4402      	add	r2, r0
 8002056:	4603      	mov	r3, r0
 8002058:	4293      	cmp	r3, r2
 800205a:	d100      	bne.n	800205e <memset+0xa>
 800205c:	4770      	bx	lr
 800205e:	f803 1b01 	strb.w	r1, [r3], #1
 8002062:	e7f9      	b.n	8002058 <memset+0x4>

08002064 <_localeconv_r>:
 8002064:	4800      	ldr	r0, [pc, #0]	@ (8002068 <_localeconv_r+0x4>)
 8002066:	4770      	bx	lr
 8002068:	20000150 	.word	0x20000150

0800206c <_close_r>:
 800206c:	b538      	push	{r3, r4, r5, lr}
 800206e:	4d06      	ldr	r5, [pc, #24]	@ (8002088 <_close_r+0x1c>)
 8002070:	2300      	movs	r3, #0
 8002072:	4604      	mov	r4, r0
 8002074:	4608      	mov	r0, r1
 8002076:	602b      	str	r3, [r5, #0]
 8002078:	f7ff f8d1 	bl	800121e <_close>
 800207c:	1c43      	adds	r3, r0, #1
 800207e:	d102      	bne.n	8002086 <_close_r+0x1a>
 8002080:	682b      	ldr	r3, [r5, #0]
 8002082:	b103      	cbz	r3, 8002086 <_close_r+0x1a>
 8002084:	6023      	str	r3, [r4, #0]
 8002086:	bd38      	pop	{r3, r4, r5, pc}
 8002088:	2000032c 	.word	0x2000032c

0800208c <_lseek_r>:
 800208c:	b538      	push	{r3, r4, r5, lr}
 800208e:	4d07      	ldr	r5, [pc, #28]	@ (80020ac <_lseek_r+0x20>)
 8002090:	4604      	mov	r4, r0
 8002092:	4608      	mov	r0, r1
 8002094:	4611      	mov	r1, r2
 8002096:	2200      	movs	r2, #0
 8002098:	602a      	str	r2, [r5, #0]
 800209a:	461a      	mov	r2, r3
 800209c:	f7ff f8e6 	bl	800126c <_lseek>
 80020a0:	1c43      	adds	r3, r0, #1
 80020a2:	d102      	bne.n	80020aa <_lseek_r+0x1e>
 80020a4:	682b      	ldr	r3, [r5, #0]
 80020a6:	b103      	cbz	r3, 80020aa <_lseek_r+0x1e>
 80020a8:	6023      	str	r3, [r4, #0]
 80020aa:	bd38      	pop	{r3, r4, r5, pc}
 80020ac:	2000032c 	.word	0x2000032c

080020b0 <_read_r>:
 80020b0:	b538      	push	{r3, r4, r5, lr}
 80020b2:	4d07      	ldr	r5, [pc, #28]	@ (80020d0 <_read_r+0x20>)
 80020b4:	4604      	mov	r4, r0
 80020b6:	4608      	mov	r0, r1
 80020b8:	4611      	mov	r1, r2
 80020ba:	2200      	movs	r2, #0
 80020bc:	602a      	str	r2, [r5, #0]
 80020be:	461a      	mov	r2, r3
 80020c0:	f7ff f874 	bl	80011ac <_read>
 80020c4:	1c43      	adds	r3, r0, #1
 80020c6:	d102      	bne.n	80020ce <_read_r+0x1e>
 80020c8:	682b      	ldr	r3, [r5, #0]
 80020ca:	b103      	cbz	r3, 80020ce <_read_r+0x1e>
 80020cc:	6023      	str	r3, [r4, #0]
 80020ce:	bd38      	pop	{r3, r4, r5, pc}
 80020d0:	2000032c 	.word	0x2000032c

080020d4 <_write_r>:
 80020d4:	b538      	push	{r3, r4, r5, lr}
 80020d6:	4d07      	ldr	r5, [pc, #28]	@ (80020f4 <_write_r+0x20>)
 80020d8:	4604      	mov	r4, r0
 80020da:	4608      	mov	r0, r1
 80020dc:	4611      	mov	r1, r2
 80020de:	2200      	movs	r2, #0
 80020e0:	602a      	str	r2, [r5, #0]
 80020e2:	461a      	mov	r2, r3
 80020e4:	f7ff f87f 	bl	80011e6 <_write>
 80020e8:	1c43      	adds	r3, r0, #1
 80020ea:	d102      	bne.n	80020f2 <_write_r+0x1e>
 80020ec:	682b      	ldr	r3, [r5, #0]
 80020ee:	b103      	cbz	r3, 80020f2 <_write_r+0x1e>
 80020f0:	6023      	str	r3, [r4, #0]
 80020f2:	bd38      	pop	{r3, r4, r5, pc}
 80020f4:	2000032c 	.word	0x2000032c

080020f8 <__errno>:
 80020f8:	4b01      	ldr	r3, [pc, #4]	@ (8002100 <__errno+0x8>)
 80020fa:	6818      	ldr	r0, [r3, #0]
 80020fc:	4770      	bx	lr
 80020fe:	bf00      	nop
 8002100:	20000010 	.word	0x20000010

08002104 <__libc_init_array>:
 8002104:	b570      	push	{r4, r5, r6, lr}
 8002106:	4d0d      	ldr	r5, [pc, #52]	@ (800213c <__libc_init_array+0x38>)
 8002108:	4c0d      	ldr	r4, [pc, #52]	@ (8002140 <__libc_init_array+0x3c>)
 800210a:	1b64      	subs	r4, r4, r5
 800210c:	10a4      	asrs	r4, r4, #2
 800210e:	2600      	movs	r6, #0
 8002110:	42a6      	cmp	r6, r4
 8002112:	d109      	bne.n	8002128 <__libc_init_array+0x24>
 8002114:	4d0b      	ldr	r5, [pc, #44]	@ (8002144 <__libc_init_array+0x40>)
 8002116:	4c0c      	ldr	r4, [pc, #48]	@ (8002148 <__libc_init_array+0x44>)
 8002118:	f001 fe30 	bl	8003d7c <_init>
 800211c:	1b64      	subs	r4, r4, r5
 800211e:	10a4      	asrs	r4, r4, #2
 8002120:	2600      	movs	r6, #0
 8002122:	42a6      	cmp	r6, r4
 8002124:	d105      	bne.n	8002132 <__libc_init_array+0x2e>
 8002126:	bd70      	pop	{r4, r5, r6, pc}
 8002128:	f855 3b04 	ldr.w	r3, [r5], #4
 800212c:	4798      	blx	r3
 800212e:	3601      	adds	r6, #1
 8002130:	e7ee      	b.n	8002110 <__libc_init_array+0xc>
 8002132:	f855 3b04 	ldr.w	r3, [r5], #4
 8002136:	4798      	blx	r3
 8002138:	3601      	adds	r6, #1
 800213a:	e7f2      	b.n	8002122 <__libc_init_array+0x1e>
 800213c:	0800415c 	.word	0x0800415c
 8002140:	0800415c 	.word	0x0800415c
 8002144:	0800415c 	.word	0x0800415c
 8002148:	08004160 	.word	0x08004160

0800214c <__retarget_lock_init_recursive>:
 800214c:	4770      	bx	lr

0800214e <__retarget_lock_acquire_recursive>:
 800214e:	4770      	bx	lr

08002150 <__retarget_lock_release_recursive>:
 8002150:	4770      	bx	lr

08002152 <quorem>:
 8002152:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002156:	6903      	ldr	r3, [r0, #16]
 8002158:	690c      	ldr	r4, [r1, #16]
 800215a:	42a3      	cmp	r3, r4
 800215c:	4607      	mov	r7, r0
 800215e:	db7e      	blt.n	800225e <quorem+0x10c>
 8002160:	3c01      	subs	r4, #1
 8002162:	f101 0814 	add.w	r8, r1, #20
 8002166:	00a3      	lsls	r3, r4, #2
 8002168:	f100 0514 	add.w	r5, r0, #20
 800216c:	9300      	str	r3, [sp, #0]
 800216e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002172:	9301      	str	r3, [sp, #4]
 8002174:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002178:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800217c:	3301      	adds	r3, #1
 800217e:	429a      	cmp	r2, r3
 8002180:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002184:	fbb2 f6f3 	udiv	r6, r2, r3
 8002188:	d32e      	bcc.n	80021e8 <quorem+0x96>
 800218a:	f04f 0a00 	mov.w	sl, #0
 800218e:	46c4      	mov	ip, r8
 8002190:	46ae      	mov	lr, r5
 8002192:	46d3      	mov	fp, sl
 8002194:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002198:	b298      	uxth	r0, r3
 800219a:	fb06 a000 	mla	r0, r6, r0, sl
 800219e:	0c02      	lsrs	r2, r0, #16
 80021a0:	0c1b      	lsrs	r3, r3, #16
 80021a2:	fb06 2303 	mla	r3, r6, r3, r2
 80021a6:	f8de 2000 	ldr.w	r2, [lr]
 80021aa:	b280      	uxth	r0, r0
 80021ac:	b292      	uxth	r2, r2
 80021ae:	1a12      	subs	r2, r2, r0
 80021b0:	445a      	add	r2, fp
 80021b2:	f8de 0000 	ldr.w	r0, [lr]
 80021b6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80021ba:	b29b      	uxth	r3, r3
 80021bc:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80021c0:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80021c4:	b292      	uxth	r2, r2
 80021c6:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80021ca:	45e1      	cmp	r9, ip
 80021cc:	f84e 2b04 	str.w	r2, [lr], #4
 80021d0:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80021d4:	d2de      	bcs.n	8002194 <quorem+0x42>
 80021d6:	9b00      	ldr	r3, [sp, #0]
 80021d8:	58eb      	ldr	r3, [r5, r3]
 80021da:	b92b      	cbnz	r3, 80021e8 <quorem+0x96>
 80021dc:	9b01      	ldr	r3, [sp, #4]
 80021de:	3b04      	subs	r3, #4
 80021e0:	429d      	cmp	r5, r3
 80021e2:	461a      	mov	r2, r3
 80021e4:	d32f      	bcc.n	8002246 <quorem+0xf4>
 80021e6:	613c      	str	r4, [r7, #16]
 80021e8:	4638      	mov	r0, r7
 80021ea:	f001 f97f 	bl	80034ec <__mcmp>
 80021ee:	2800      	cmp	r0, #0
 80021f0:	db25      	blt.n	800223e <quorem+0xec>
 80021f2:	4629      	mov	r1, r5
 80021f4:	2000      	movs	r0, #0
 80021f6:	f858 2b04 	ldr.w	r2, [r8], #4
 80021fa:	f8d1 c000 	ldr.w	ip, [r1]
 80021fe:	fa1f fe82 	uxth.w	lr, r2
 8002202:	fa1f f38c 	uxth.w	r3, ip
 8002206:	eba3 030e 	sub.w	r3, r3, lr
 800220a:	4403      	add	r3, r0
 800220c:	0c12      	lsrs	r2, r2, #16
 800220e:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002212:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002216:	b29b      	uxth	r3, r3
 8002218:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800221c:	45c1      	cmp	r9, r8
 800221e:	f841 3b04 	str.w	r3, [r1], #4
 8002222:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002226:	d2e6      	bcs.n	80021f6 <quorem+0xa4>
 8002228:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800222c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002230:	b922      	cbnz	r2, 800223c <quorem+0xea>
 8002232:	3b04      	subs	r3, #4
 8002234:	429d      	cmp	r5, r3
 8002236:	461a      	mov	r2, r3
 8002238:	d30b      	bcc.n	8002252 <quorem+0x100>
 800223a:	613c      	str	r4, [r7, #16]
 800223c:	3601      	adds	r6, #1
 800223e:	4630      	mov	r0, r6
 8002240:	b003      	add	sp, #12
 8002242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002246:	6812      	ldr	r2, [r2, #0]
 8002248:	3b04      	subs	r3, #4
 800224a:	2a00      	cmp	r2, #0
 800224c:	d1cb      	bne.n	80021e6 <quorem+0x94>
 800224e:	3c01      	subs	r4, #1
 8002250:	e7c6      	b.n	80021e0 <quorem+0x8e>
 8002252:	6812      	ldr	r2, [r2, #0]
 8002254:	3b04      	subs	r3, #4
 8002256:	2a00      	cmp	r2, #0
 8002258:	d1ef      	bne.n	800223a <quorem+0xe8>
 800225a:	3c01      	subs	r4, #1
 800225c:	e7ea      	b.n	8002234 <quorem+0xe2>
 800225e:	2000      	movs	r0, #0
 8002260:	e7ee      	b.n	8002240 <quorem+0xee>
 8002262:	0000      	movs	r0, r0
 8002264:	0000      	movs	r0, r0
	...

08002268 <_dtoa_r>:
 8002268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800226c:	69c7      	ldr	r7, [r0, #28]
 800226e:	b097      	sub	sp, #92	@ 0x5c
 8002270:	ed8d 0b04 	vstr	d0, [sp, #16]
 8002274:	ec55 4b10 	vmov	r4, r5, d0
 8002278:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 800227a:	9107      	str	r1, [sp, #28]
 800227c:	4681      	mov	r9, r0
 800227e:	920c      	str	r2, [sp, #48]	@ 0x30
 8002280:	9311      	str	r3, [sp, #68]	@ 0x44
 8002282:	b97f      	cbnz	r7, 80022a4 <_dtoa_r+0x3c>
 8002284:	2010      	movs	r0, #16
 8002286:	f000 fe09 	bl	8002e9c <malloc>
 800228a:	4602      	mov	r2, r0
 800228c:	f8c9 001c 	str.w	r0, [r9, #28]
 8002290:	b920      	cbnz	r0, 800229c <_dtoa_r+0x34>
 8002292:	4ba9      	ldr	r3, [pc, #676]	@ (8002538 <_dtoa_r+0x2d0>)
 8002294:	21ef      	movs	r1, #239	@ 0xef
 8002296:	48a9      	ldr	r0, [pc, #676]	@ (800253c <_dtoa_r+0x2d4>)
 8002298:	f001 fcc0 	bl	8003c1c <__assert_func>
 800229c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80022a0:	6007      	str	r7, [r0, #0]
 80022a2:	60c7      	str	r7, [r0, #12]
 80022a4:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80022a8:	6819      	ldr	r1, [r3, #0]
 80022aa:	b159      	cbz	r1, 80022c4 <_dtoa_r+0x5c>
 80022ac:	685a      	ldr	r2, [r3, #4]
 80022ae:	604a      	str	r2, [r1, #4]
 80022b0:	2301      	movs	r3, #1
 80022b2:	4093      	lsls	r3, r2
 80022b4:	608b      	str	r3, [r1, #8]
 80022b6:	4648      	mov	r0, r9
 80022b8:	f000 fee6 	bl	8003088 <_Bfree>
 80022bc:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80022c0:	2200      	movs	r2, #0
 80022c2:	601a      	str	r2, [r3, #0]
 80022c4:	1e2b      	subs	r3, r5, #0
 80022c6:	bfb9      	ittee	lt
 80022c8:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80022cc:	9305      	strlt	r3, [sp, #20]
 80022ce:	2300      	movge	r3, #0
 80022d0:	6033      	strge	r3, [r6, #0]
 80022d2:	9f05      	ldr	r7, [sp, #20]
 80022d4:	4b9a      	ldr	r3, [pc, #616]	@ (8002540 <_dtoa_r+0x2d8>)
 80022d6:	bfbc      	itt	lt
 80022d8:	2201      	movlt	r2, #1
 80022da:	6032      	strlt	r2, [r6, #0]
 80022dc:	43bb      	bics	r3, r7
 80022de:	d112      	bne.n	8002306 <_dtoa_r+0x9e>
 80022e0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80022e2:	f242 730f 	movw	r3, #9999	@ 0x270f
 80022e6:	6013      	str	r3, [r2, #0]
 80022e8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80022ec:	4323      	orrs	r3, r4
 80022ee:	f000 855a 	beq.w	8002da6 <_dtoa_r+0xb3e>
 80022f2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80022f4:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 8002554 <_dtoa_r+0x2ec>
 80022f8:	2b00      	cmp	r3, #0
 80022fa:	f000 855c 	beq.w	8002db6 <_dtoa_r+0xb4e>
 80022fe:	f10a 0303 	add.w	r3, sl, #3
 8002302:	f000 bd56 	b.w	8002db2 <_dtoa_r+0xb4a>
 8002306:	ed9d 7b04 	vldr	d7, [sp, #16]
 800230a:	2200      	movs	r2, #0
 800230c:	ec51 0b17 	vmov	r0, r1, d7
 8002310:	2300      	movs	r3, #0
 8002312:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 8002316:	f7fe fbd7 	bl	8000ac8 <__aeabi_dcmpeq>
 800231a:	4680      	mov	r8, r0
 800231c:	b158      	cbz	r0, 8002336 <_dtoa_r+0xce>
 800231e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8002320:	2301      	movs	r3, #1
 8002322:	6013      	str	r3, [r2, #0]
 8002324:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002326:	b113      	cbz	r3, 800232e <_dtoa_r+0xc6>
 8002328:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800232a:	4b86      	ldr	r3, [pc, #536]	@ (8002544 <_dtoa_r+0x2dc>)
 800232c:	6013      	str	r3, [r2, #0]
 800232e:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8002558 <_dtoa_r+0x2f0>
 8002332:	f000 bd40 	b.w	8002db6 <_dtoa_r+0xb4e>
 8002336:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 800233a:	aa14      	add	r2, sp, #80	@ 0x50
 800233c:	a915      	add	r1, sp, #84	@ 0x54
 800233e:	4648      	mov	r0, r9
 8002340:	f001 f984 	bl	800364c <__d2b>
 8002344:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8002348:	9002      	str	r0, [sp, #8]
 800234a:	2e00      	cmp	r6, #0
 800234c:	d078      	beq.n	8002440 <_dtoa_r+0x1d8>
 800234e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002350:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 8002354:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002358:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800235c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002360:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002364:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002368:	4619      	mov	r1, r3
 800236a:	2200      	movs	r2, #0
 800236c:	4b76      	ldr	r3, [pc, #472]	@ (8002548 <_dtoa_r+0x2e0>)
 800236e:	f7fd ff8b 	bl	8000288 <__aeabi_dsub>
 8002372:	a36b      	add	r3, pc, #428	@ (adr r3, 8002520 <_dtoa_r+0x2b8>)
 8002374:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002378:	f7fe f93e 	bl	80005f8 <__aeabi_dmul>
 800237c:	a36a      	add	r3, pc, #424	@ (adr r3, 8002528 <_dtoa_r+0x2c0>)
 800237e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002382:	f7fd ff83 	bl	800028c <__adddf3>
 8002386:	4604      	mov	r4, r0
 8002388:	4630      	mov	r0, r6
 800238a:	460d      	mov	r5, r1
 800238c:	f7fe f8ca 	bl	8000524 <__aeabi_i2d>
 8002390:	a367      	add	r3, pc, #412	@ (adr r3, 8002530 <_dtoa_r+0x2c8>)
 8002392:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002396:	f7fe f92f 	bl	80005f8 <__aeabi_dmul>
 800239a:	4602      	mov	r2, r0
 800239c:	460b      	mov	r3, r1
 800239e:	4620      	mov	r0, r4
 80023a0:	4629      	mov	r1, r5
 80023a2:	f7fd ff73 	bl	800028c <__adddf3>
 80023a6:	4604      	mov	r4, r0
 80023a8:	460d      	mov	r5, r1
 80023aa:	f7fe fbd5 	bl	8000b58 <__aeabi_d2iz>
 80023ae:	2200      	movs	r2, #0
 80023b0:	4607      	mov	r7, r0
 80023b2:	2300      	movs	r3, #0
 80023b4:	4620      	mov	r0, r4
 80023b6:	4629      	mov	r1, r5
 80023b8:	f7fe fb90 	bl	8000adc <__aeabi_dcmplt>
 80023bc:	b140      	cbz	r0, 80023d0 <_dtoa_r+0x168>
 80023be:	4638      	mov	r0, r7
 80023c0:	f7fe f8b0 	bl	8000524 <__aeabi_i2d>
 80023c4:	4622      	mov	r2, r4
 80023c6:	462b      	mov	r3, r5
 80023c8:	f7fe fb7e 	bl	8000ac8 <__aeabi_dcmpeq>
 80023cc:	b900      	cbnz	r0, 80023d0 <_dtoa_r+0x168>
 80023ce:	3f01      	subs	r7, #1
 80023d0:	2f16      	cmp	r7, #22
 80023d2:	d852      	bhi.n	800247a <_dtoa_r+0x212>
 80023d4:	4b5d      	ldr	r3, [pc, #372]	@ (800254c <_dtoa_r+0x2e4>)
 80023d6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80023da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023de:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80023e2:	f7fe fb7b 	bl	8000adc <__aeabi_dcmplt>
 80023e6:	2800      	cmp	r0, #0
 80023e8:	d049      	beq.n	800247e <_dtoa_r+0x216>
 80023ea:	3f01      	subs	r7, #1
 80023ec:	2300      	movs	r3, #0
 80023ee:	9310      	str	r3, [sp, #64]	@ 0x40
 80023f0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80023f2:	1b9b      	subs	r3, r3, r6
 80023f4:	1e5a      	subs	r2, r3, #1
 80023f6:	bf45      	ittet	mi
 80023f8:	f1c3 0301 	rsbmi	r3, r3, #1
 80023fc:	9300      	strmi	r3, [sp, #0]
 80023fe:	2300      	movpl	r3, #0
 8002400:	2300      	movmi	r3, #0
 8002402:	9206      	str	r2, [sp, #24]
 8002404:	bf54      	ite	pl
 8002406:	9300      	strpl	r3, [sp, #0]
 8002408:	9306      	strmi	r3, [sp, #24]
 800240a:	2f00      	cmp	r7, #0
 800240c:	db39      	blt.n	8002482 <_dtoa_r+0x21a>
 800240e:	9b06      	ldr	r3, [sp, #24]
 8002410:	970d      	str	r7, [sp, #52]	@ 0x34
 8002412:	443b      	add	r3, r7
 8002414:	9306      	str	r3, [sp, #24]
 8002416:	2300      	movs	r3, #0
 8002418:	9308      	str	r3, [sp, #32]
 800241a:	9b07      	ldr	r3, [sp, #28]
 800241c:	2b09      	cmp	r3, #9
 800241e:	d863      	bhi.n	80024e8 <_dtoa_r+0x280>
 8002420:	2b05      	cmp	r3, #5
 8002422:	bfc4      	itt	gt
 8002424:	3b04      	subgt	r3, #4
 8002426:	9307      	strgt	r3, [sp, #28]
 8002428:	9b07      	ldr	r3, [sp, #28]
 800242a:	f1a3 0302 	sub.w	r3, r3, #2
 800242e:	bfcc      	ite	gt
 8002430:	2400      	movgt	r4, #0
 8002432:	2401      	movle	r4, #1
 8002434:	2b03      	cmp	r3, #3
 8002436:	d863      	bhi.n	8002500 <_dtoa_r+0x298>
 8002438:	e8df f003 	tbb	[pc, r3]
 800243c:	2b375452 	.word	0x2b375452
 8002440:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8002444:	441e      	add	r6, r3
 8002446:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800244a:	2b20      	cmp	r3, #32
 800244c:	bfc1      	itttt	gt
 800244e:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002452:	409f      	lslgt	r7, r3
 8002454:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002458:	fa24 f303 	lsrgt.w	r3, r4, r3
 800245c:	bfd6      	itet	le
 800245e:	f1c3 0320 	rsble	r3, r3, #32
 8002462:	ea47 0003 	orrgt.w	r0, r7, r3
 8002466:	fa04 f003 	lslle.w	r0, r4, r3
 800246a:	f7fe f84b 	bl	8000504 <__aeabi_ui2d>
 800246e:	2201      	movs	r2, #1
 8002470:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002474:	3e01      	subs	r6, #1
 8002476:	9212      	str	r2, [sp, #72]	@ 0x48
 8002478:	e776      	b.n	8002368 <_dtoa_r+0x100>
 800247a:	2301      	movs	r3, #1
 800247c:	e7b7      	b.n	80023ee <_dtoa_r+0x186>
 800247e:	9010      	str	r0, [sp, #64]	@ 0x40
 8002480:	e7b6      	b.n	80023f0 <_dtoa_r+0x188>
 8002482:	9b00      	ldr	r3, [sp, #0]
 8002484:	1bdb      	subs	r3, r3, r7
 8002486:	9300      	str	r3, [sp, #0]
 8002488:	427b      	negs	r3, r7
 800248a:	9308      	str	r3, [sp, #32]
 800248c:	2300      	movs	r3, #0
 800248e:	930d      	str	r3, [sp, #52]	@ 0x34
 8002490:	e7c3      	b.n	800241a <_dtoa_r+0x1b2>
 8002492:	2301      	movs	r3, #1
 8002494:	9309      	str	r3, [sp, #36]	@ 0x24
 8002496:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002498:	eb07 0b03 	add.w	fp, r7, r3
 800249c:	f10b 0301 	add.w	r3, fp, #1
 80024a0:	2b01      	cmp	r3, #1
 80024a2:	9303      	str	r3, [sp, #12]
 80024a4:	bfb8      	it	lt
 80024a6:	2301      	movlt	r3, #1
 80024a8:	e006      	b.n	80024b8 <_dtoa_r+0x250>
 80024aa:	2301      	movs	r3, #1
 80024ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80024ae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80024b0:	2b00      	cmp	r3, #0
 80024b2:	dd28      	ble.n	8002506 <_dtoa_r+0x29e>
 80024b4:	469b      	mov	fp, r3
 80024b6:	9303      	str	r3, [sp, #12]
 80024b8:	f8d9 001c 	ldr.w	r0, [r9, #28]
 80024bc:	2100      	movs	r1, #0
 80024be:	2204      	movs	r2, #4
 80024c0:	f102 0514 	add.w	r5, r2, #20
 80024c4:	429d      	cmp	r5, r3
 80024c6:	d926      	bls.n	8002516 <_dtoa_r+0x2ae>
 80024c8:	6041      	str	r1, [r0, #4]
 80024ca:	4648      	mov	r0, r9
 80024cc:	f000 fd9c 	bl	8003008 <_Balloc>
 80024d0:	4682      	mov	sl, r0
 80024d2:	2800      	cmp	r0, #0
 80024d4:	d142      	bne.n	800255c <_dtoa_r+0x2f4>
 80024d6:	4b1e      	ldr	r3, [pc, #120]	@ (8002550 <_dtoa_r+0x2e8>)
 80024d8:	4602      	mov	r2, r0
 80024da:	f240 11af 	movw	r1, #431	@ 0x1af
 80024de:	e6da      	b.n	8002296 <_dtoa_r+0x2e>
 80024e0:	2300      	movs	r3, #0
 80024e2:	e7e3      	b.n	80024ac <_dtoa_r+0x244>
 80024e4:	2300      	movs	r3, #0
 80024e6:	e7d5      	b.n	8002494 <_dtoa_r+0x22c>
 80024e8:	2401      	movs	r4, #1
 80024ea:	2300      	movs	r3, #0
 80024ec:	9307      	str	r3, [sp, #28]
 80024ee:	9409      	str	r4, [sp, #36]	@ 0x24
 80024f0:	f04f 3bff 	mov.w	fp, #4294967295
 80024f4:	2200      	movs	r2, #0
 80024f6:	f8cd b00c 	str.w	fp, [sp, #12]
 80024fa:	2312      	movs	r3, #18
 80024fc:	920c      	str	r2, [sp, #48]	@ 0x30
 80024fe:	e7db      	b.n	80024b8 <_dtoa_r+0x250>
 8002500:	2301      	movs	r3, #1
 8002502:	9309      	str	r3, [sp, #36]	@ 0x24
 8002504:	e7f4      	b.n	80024f0 <_dtoa_r+0x288>
 8002506:	f04f 0b01 	mov.w	fp, #1
 800250a:	f8cd b00c 	str.w	fp, [sp, #12]
 800250e:	465b      	mov	r3, fp
 8002510:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8002514:	e7d0      	b.n	80024b8 <_dtoa_r+0x250>
 8002516:	3101      	adds	r1, #1
 8002518:	0052      	lsls	r2, r2, #1
 800251a:	e7d1      	b.n	80024c0 <_dtoa_r+0x258>
 800251c:	f3af 8000 	nop.w
 8002520:	636f4361 	.word	0x636f4361
 8002524:	3fd287a7 	.word	0x3fd287a7
 8002528:	8b60c8b3 	.word	0x8b60c8b3
 800252c:	3fc68a28 	.word	0x3fc68a28
 8002530:	509f79fb 	.word	0x509f79fb
 8002534:	3fd34413 	.word	0x3fd34413
 8002538:	08003e20 	.word	0x08003e20
 800253c:	08003e37 	.word	0x08003e37
 8002540:	7ff00000 	.word	0x7ff00000
 8002544:	08003df0 	.word	0x08003df0
 8002548:	3ff80000 	.word	0x3ff80000
 800254c:	08003f88 	.word	0x08003f88
 8002550:	08003e8f 	.word	0x08003e8f
 8002554:	08003e1c 	.word	0x08003e1c
 8002558:	08003def 	.word	0x08003def
 800255c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002560:	6018      	str	r0, [r3, #0]
 8002562:	9b03      	ldr	r3, [sp, #12]
 8002564:	2b0e      	cmp	r3, #14
 8002566:	f200 80a1 	bhi.w	80026ac <_dtoa_r+0x444>
 800256a:	2c00      	cmp	r4, #0
 800256c:	f000 809e 	beq.w	80026ac <_dtoa_r+0x444>
 8002570:	2f00      	cmp	r7, #0
 8002572:	dd33      	ble.n	80025dc <_dtoa_r+0x374>
 8002574:	4b9c      	ldr	r3, [pc, #624]	@ (80027e8 <_dtoa_r+0x580>)
 8002576:	f007 020f 	and.w	r2, r7, #15
 800257a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800257e:	ed93 7b00 	vldr	d7, [r3]
 8002582:	05f8      	lsls	r0, r7, #23
 8002584:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8002588:	ea4f 1427 	mov.w	r4, r7, asr #4
 800258c:	d516      	bpl.n	80025bc <_dtoa_r+0x354>
 800258e:	4b97      	ldr	r3, [pc, #604]	@ (80027ec <_dtoa_r+0x584>)
 8002590:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002594:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002598:	f7fe f958 	bl	800084c <__aeabi_ddiv>
 800259c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80025a0:	f004 040f 	and.w	r4, r4, #15
 80025a4:	2603      	movs	r6, #3
 80025a6:	4d91      	ldr	r5, [pc, #580]	@ (80027ec <_dtoa_r+0x584>)
 80025a8:	b954      	cbnz	r4, 80025c0 <_dtoa_r+0x358>
 80025aa:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80025ae:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80025b2:	f7fe f94b 	bl	800084c <__aeabi_ddiv>
 80025b6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80025ba:	e028      	b.n	800260e <_dtoa_r+0x3a6>
 80025bc:	2602      	movs	r6, #2
 80025be:	e7f2      	b.n	80025a6 <_dtoa_r+0x33e>
 80025c0:	07e1      	lsls	r1, r4, #31
 80025c2:	d508      	bpl.n	80025d6 <_dtoa_r+0x36e>
 80025c4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80025c8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80025cc:	f7fe f814 	bl	80005f8 <__aeabi_dmul>
 80025d0:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80025d4:	3601      	adds	r6, #1
 80025d6:	1064      	asrs	r4, r4, #1
 80025d8:	3508      	adds	r5, #8
 80025da:	e7e5      	b.n	80025a8 <_dtoa_r+0x340>
 80025dc:	f000 80af 	beq.w	800273e <_dtoa_r+0x4d6>
 80025e0:	427c      	negs	r4, r7
 80025e2:	4b81      	ldr	r3, [pc, #516]	@ (80027e8 <_dtoa_r+0x580>)
 80025e4:	4d81      	ldr	r5, [pc, #516]	@ (80027ec <_dtoa_r+0x584>)
 80025e6:	f004 020f 	and.w	r2, r4, #15
 80025ea:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80025ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025f2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80025f6:	f7fd ffff 	bl	80005f8 <__aeabi_dmul>
 80025fa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80025fe:	1124      	asrs	r4, r4, #4
 8002600:	2300      	movs	r3, #0
 8002602:	2602      	movs	r6, #2
 8002604:	2c00      	cmp	r4, #0
 8002606:	f040 808f 	bne.w	8002728 <_dtoa_r+0x4c0>
 800260a:	2b00      	cmp	r3, #0
 800260c:	d1d3      	bne.n	80025b6 <_dtoa_r+0x34e>
 800260e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8002610:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8002614:	2b00      	cmp	r3, #0
 8002616:	f000 8094 	beq.w	8002742 <_dtoa_r+0x4da>
 800261a:	4b75      	ldr	r3, [pc, #468]	@ (80027f0 <_dtoa_r+0x588>)
 800261c:	2200      	movs	r2, #0
 800261e:	4620      	mov	r0, r4
 8002620:	4629      	mov	r1, r5
 8002622:	f7fe fa5b 	bl	8000adc <__aeabi_dcmplt>
 8002626:	2800      	cmp	r0, #0
 8002628:	f000 808b 	beq.w	8002742 <_dtoa_r+0x4da>
 800262c:	9b03      	ldr	r3, [sp, #12]
 800262e:	2b00      	cmp	r3, #0
 8002630:	f000 8087 	beq.w	8002742 <_dtoa_r+0x4da>
 8002634:	f1bb 0f00 	cmp.w	fp, #0
 8002638:	dd34      	ble.n	80026a4 <_dtoa_r+0x43c>
 800263a:	4620      	mov	r0, r4
 800263c:	4b6d      	ldr	r3, [pc, #436]	@ (80027f4 <_dtoa_r+0x58c>)
 800263e:	2200      	movs	r2, #0
 8002640:	4629      	mov	r1, r5
 8002642:	f7fd ffd9 	bl	80005f8 <__aeabi_dmul>
 8002646:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800264a:	f107 38ff 	add.w	r8, r7, #4294967295
 800264e:	3601      	adds	r6, #1
 8002650:	465c      	mov	r4, fp
 8002652:	4630      	mov	r0, r6
 8002654:	f7fd ff66 	bl	8000524 <__aeabi_i2d>
 8002658:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800265c:	f7fd ffcc 	bl	80005f8 <__aeabi_dmul>
 8002660:	4b65      	ldr	r3, [pc, #404]	@ (80027f8 <_dtoa_r+0x590>)
 8002662:	2200      	movs	r2, #0
 8002664:	f7fd fe12 	bl	800028c <__adddf3>
 8002668:	4605      	mov	r5, r0
 800266a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800266e:	2c00      	cmp	r4, #0
 8002670:	d16a      	bne.n	8002748 <_dtoa_r+0x4e0>
 8002672:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002676:	4b61      	ldr	r3, [pc, #388]	@ (80027fc <_dtoa_r+0x594>)
 8002678:	2200      	movs	r2, #0
 800267a:	f7fd fe05 	bl	8000288 <__aeabi_dsub>
 800267e:	4602      	mov	r2, r0
 8002680:	460b      	mov	r3, r1
 8002682:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002686:	462a      	mov	r2, r5
 8002688:	4633      	mov	r3, r6
 800268a:	f7fe fa45 	bl	8000b18 <__aeabi_dcmpgt>
 800268e:	2800      	cmp	r0, #0
 8002690:	f040 8298 	bne.w	8002bc4 <_dtoa_r+0x95c>
 8002694:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002698:	462a      	mov	r2, r5
 800269a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800269e:	f7fe fa1d 	bl	8000adc <__aeabi_dcmplt>
 80026a2:	bb38      	cbnz	r0, 80026f4 <_dtoa_r+0x48c>
 80026a4:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 80026a8:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80026ac:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80026ae:	2b00      	cmp	r3, #0
 80026b0:	f2c0 8157 	blt.w	8002962 <_dtoa_r+0x6fa>
 80026b4:	2f0e      	cmp	r7, #14
 80026b6:	f300 8154 	bgt.w	8002962 <_dtoa_r+0x6fa>
 80026ba:	4b4b      	ldr	r3, [pc, #300]	@ (80027e8 <_dtoa_r+0x580>)
 80026bc:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80026c0:	ed93 7b00 	vldr	d7, [r3]
 80026c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80026c6:	2b00      	cmp	r3, #0
 80026c8:	ed8d 7b00 	vstr	d7, [sp]
 80026cc:	f280 80e5 	bge.w	800289a <_dtoa_r+0x632>
 80026d0:	9b03      	ldr	r3, [sp, #12]
 80026d2:	2b00      	cmp	r3, #0
 80026d4:	f300 80e1 	bgt.w	800289a <_dtoa_r+0x632>
 80026d8:	d10c      	bne.n	80026f4 <_dtoa_r+0x48c>
 80026da:	4b48      	ldr	r3, [pc, #288]	@ (80027fc <_dtoa_r+0x594>)
 80026dc:	2200      	movs	r2, #0
 80026de:	ec51 0b17 	vmov	r0, r1, d7
 80026e2:	f7fd ff89 	bl	80005f8 <__aeabi_dmul>
 80026e6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80026ea:	f7fe fa0b 	bl	8000b04 <__aeabi_dcmpge>
 80026ee:	2800      	cmp	r0, #0
 80026f0:	f000 8266 	beq.w	8002bc0 <_dtoa_r+0x958>
 80026f4:	2400      	movs	r4, #0
 80026f6:	4625      	mov	r5, r4
 80026f8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80026fa:	4656      	mov	r6, sl
 80026fc:	ea6f 0803 	mvn.w	r8, r3
 8002700:	2700      	movs	r7, #0
 8002702:	4621      	mov	r1, r4
 8002704:	4648      	mov	r0, r9
 8002706:	f000 fcbf 	bl	8003088 <_Bfree>
 800270a:	2d00      	cmp	r5, #0
 800270c:	f000 80bd 	beq.w	800288a <_dtoa_r+0x622>
 8002710:	b12f      	cbz	r7, 800271e <_dtoa_r+0x4b6>
 8002712:	42af      	cmp	r7, r5
 8002714:	d003      	beq.n	800271e <_dtoa_r+0x4b6>
 8002716:	4639      	mov	r1, r7
 8002718:	4648      	mov	r0, r9
 800271a:	f000 fcb5 	bl	8003088 <_Bfree>
 800271e:	4629      	mov	r1, r5
 8002720:	4648      	mov	r0, r9
 8002722:	f000 fcb1 	bl	8003088 <_Bfree>
 8002726:	e0b0      	b.n	800288a <_dtoa_r+0x622>
 8002728:	07e2      	lsls	r2, r4, #31
 800272a:	d505      	bpl.n	8002738 <_dtoa_r+0x4d0>
 800272c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002730:	f7fd ff62 	bl	80005f8 <__aeabi_dmul>
 8002734:	3601      	adds	r6, #1
 8002736:	2301      	movs	r3, #1
 8002738:	1064      	asrs	r4, r4, #1
 800273a:	3508      	adds	r5, #8
 800273c:	e762      	b.n	8002604 <_dtoa_r+0x39c>
 800273e:	2602      	movs	r6, #2
 8002740:	e765      	b.n	800260e <_dtoa_r+0x3a6>
 8002742:	9c03      	ldr	r4, [sp, #12]
 8002744:	46b8      	mov	r8, r7
 8002746:	e784      	b.n	8002652 <_dtoa_r+0x3ea>
 8002748:	4b27      	ldr	r3, [pc, #156]	@ (80027e8 <_dtoa_r+0x580>)
 800274a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800274c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002750:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002754:	4454      	add	r4, sl
 8002756:	2900      	cmp	r1, #0
 8002758:	d054      	beq.n	8002804 <_dtoa_r+0x59c>
 800275a:	4929      	ldr	r1, [pc, #164]	@ (8002800 <_dtoa_r+0x598>)
 800275c:	2000      	movs	r0, #0
 800275e:	f7fe f875 	bl	800084c <__aeabi_ddiv>
 8002762:	4633      	mov	r3, r6
 8002764:	462a      	mov	r2, r5
 8002766:	f7fd fd8f 	bl	8000288 <__aeabi_dsub>
 800276a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800276e:	4656      	mov	r6, sl
 8002770:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002774:	f7fe f9f0 	bl	8000b58 <__aeabi_d2iz>
 8002778:	4605      	mov	r5, r0
 800277a:	f7fd fed3 	bl	8000524 <__aeabi_i2d>
 800277e:	4602      	mov	r2, r0
 8002780:	460b      	mov	r3, r1
 8002782:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002786:	f7fd fd7f 	bl	8000288 <__aeabi_dsub>
 800278a:	3530      	adds	r5, #48	@ 0x30
 800278c:	4602      	mov	r2, r0
 800278e:	460b      	mov	r3, r1
 8002790:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002794:	f806 5b01 	strb.w	r5, [r6], #1
 8002798:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800279c:	f7fe f99e 	bl	8000adc <__aeabi_dcmplt>
 80027a0:	2800      	cmp	r0, #0
 80027a2:	d172      	bne.n	800288a <_dtoa_r+0x622>
 80027a4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80027a8:	4911      	ldr	r1, [pc, #68]	@ (80027f0 <_dtoa_r+0x588>)
 80027aa:	2000      	movs	r0, #0
 80027ac:	f7fd fd6c 	bl	8000288 <__aeabi_dsub>
 80027b0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80027b4:	f7fe f992 	bl	8000adc <__aeabi_dcmplt>
 80027b8:	2800      	cmp	r0, #0
 80027ba:	f040 80b4 	bne.w	8002926 <_dtoa_r+0x6be>
 80027be:	42a6      	cmp	r6, r4
 80027c0:	f43f af70 	beq.w	80026a4 <_dtoa_r+0x43c>
 80027c4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80027c8:	4b0a      	ldr	r3, [pc, #40]	@ (80027f4 <_dtoa_r+0x58c>)
 80027ca:	2200      	movs	r2, #0
 80027cc:	f7fd ff14 	bl	80005f8 <__aeabi_dmul>
 80027d0:	4b08      	ldr	r3, [pc, #32]	@ (80027f4 <_dtoa_r+0x58c>)
 80027d2:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80027d6:	2200      	movs	r2, #0
 80027d8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80027dc:	f7fd ff0c 	bl	80005f8 <__aeabi_dmul>
 80027e0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80027e4:	e7c4      	b.n	8002770 <_dtoa_r+0x508>
 80027e6:	bf00      	nop
 80027e8:	08003f88 	.word	0x08003f88
 80027ec:	08003f60 	.word	0x08003f60
 80027f0:	3ff00000 	.word	0x3ff00000
 80027f4:	40240000 	.word	0x40240000
 80027f8:	401c0000 	.word	0x401c0000
 80027fc:	40140000 	.word	0x40140000
 8002800:	3fe00000 	.word	0x3fe00000
 8002804:	4631      	mov	r1, r6
 8002806:	4628      	mov	r0, r5
 8002808:	f7fd fef6 	bl	80005f8 <__aeabi_dmul>
 800280c:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002810:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002812:	4656      	mov	r6, sl
 8002814:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002818:	f7fe f99e 	bl	8000b58 <__aeabi_d2iz>
 800281c:	4605      	mov	r5, r0
 800281e:	f7fd fe81 	bl	8000524 <__aeabi_i2d>
 8002822:	4602      	mov	r2, r0
 8002824:	460b      	mov	r3, r1
 8002826:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800282a:	f7fd fd2d 	bl	8000288 <__aeabi_dsub>
 800282e:	3530      	adds	r5, #48	@ 0x30
 8002830:	f806 5b01 	strb.w	r5, [r6], #1
 8002834:	4602      	mov	r2, r0
 8002836:	460b      	mov	r3, r1
 8002838:	42a6      	cmp	r6, r4
 800283a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800283e:	f04f 0200 	mov.w	r2, #0
 8002842:	d124      	bne.n	800288e <_dtoa_r+0x626>
 8002844:	4baf      	ldr	r3, [pc, #700]	@ (8002b04 <_dtoa_r+0x89c>)
 8002846:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 800284a:	f7fd fd1f 	bl	800028c <__adddf3>
 800284e:	4602      	mov	r2, r0
 8002850:	460b      	mov	r3, r1
 8002852:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002856:	f7fe f95f 	bl	8000b18 <__aeabi_dcmpgt>
 800285a:	2800      	cmp	r0, #0
 800285c:	d163      	bne.n	8002926 <_dtoa_r+0x6be>
 800285e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002862:	49a8      	ldr	r1, [pc, #672]	@ (8002b04 <_dtoa_r+0x89c>)
 8002864:	2000      	movs	r0, #0
 8002866:	f7fd fd0f 	bl	8000288 <__aeabi_dsub>
 800286a:	4602      	mov	r2, r0
 800286c:	460b      	mov	r3, r1
 800286e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002872:	f7fe f933 	bl	8000adc <__aeabi_dcmplt>
 8002876:	2800      	cmp	r0, #0
 8002878:	f43f af14 	beq.w	80026a4 <_dtoa_r+0x43c>
 800287c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800287e:	1e73      	subs	r3, r6, #1
 8002880:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002882:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002886:	2b30      	cmp	r3, #48	@ 0x30
 8002888:	d0f8      	beq.n	800287c <_dtoa_r+0x614>
 800288a:	4647      	mov	r7, r8
 800288c:	e03b      	b.n	8002906 <_dtoa_r+0x69e>
 800288e:	4b9e      	ldr	r3, [pc, #632]	@ (8002b08 <_dtoa_r+0x8a0>)
 8002890:	f7fd feb2 	bl	80005f8 <__aeabi_dmul>
 8002894:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002898:	e7bc      	b.n	8002814 <_dtoa_r+0x5ac>
 800289a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 800289e:	4656      	mov	r6, sl
 80028a0:	e9dd 2300 	ldrd	r2, r3, [sp]
 80028a4:	4620      	mov	r0, r4
 80028a6:	4629      	mov	r1, r5
 80028a8:	f7fd ffd0 	bl	800084c <__aeabi_ddiv>
 80028ac:	f7fe f954 	bl	8000b58 <__aeabi_d2iz>
 80028b0:	4680      	mov	r8, r0
 80028b2:	f7fd fe37 	bl	8000524 <__aeabi_i2d>
 80028b6:	e9dd 2300 	ldrd	r2, r3, [sp]
 80028ba:	f7fd fe9d 	bl	80005f8 <__aeabi_dmul>
 80028be:	4602      	mov	r2, r0
 80028c0:	460b      	mov	r3, r1
 80028c2:	4620      	mov	r0, r4
 80028c4:	4629      	mov	r1, r5
 80028c6:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 80028ca:	f7fd fcdd 	bl	8000288 <__aeabi_dsub>
 80028ce:	f806 4b01 	strb.w	r4, [r6], #1
 80028d2:	9d03      	ldr	r5, [sp, #12]
 80028d4:	eba6 040a 	sub.w	r4, r6, sl
 80028d8:	42a5      	cmp	r5, r4
 80028da:	4602      	mov	r2, r0
 80028dc:	460b      	mov	r3, r1
 80028de:	d133      	bne.n	8002948 <_dtoa_r+0x6e0>
 80028e0:	f7fd fcd4 	bl	800028c <__adddf3>
 80028e4:	e9dd 2300 	ldrd	r2, r3, [sp]
 80028e8:	4604      	mov	r4, r0
 80028ea:	460d      	mov	r5, r1
 80028ec:	f7fe f914 	bl	8000b18 <__aeabi_dcmpgt>
 80028f0:	b9c0      	cbnz	r0, 8002924 <_dtoa_r+0x6bc>
 80028f2:	e9dd 2300 	ldrd	r2, r3, [sp]
 80028f6:	4620      	mov	r0, r4
 80028f8:	4629      	mov	r1, r5
 80028fa:	f7fe f8e5 	bl	8000ac8 <__aeabi_dcmpeq>
 80028fe:	b110      	cbz	r0, 8002906 <_dtoa_r+0x69e>
 8002900:	f018 0f01 	tst.w	r8, #1
 8002904:	d10e      	bne.n	8002924 <_dtoa_r+0x6bc>
 8002906:	9902      	ldr	r1, [sp, #8]
 8002908:	4648      	mov	r0, r9
 800290a:	f000 fbbd 	bl	8003088 <_Bfree>
 800290e:	2300      	movs	r3, #0
 8002910:	7033      	strb	r3, [r6, #0]
 8002912:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8002914:	3701      	adds	r7, #1
 8002916:	601f      	str	r7, [r3, #0]
 8002918:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800291a:	2b00      	cmp	r3, #0
 800291c:	f000 824b 	beq.w	8002db6 <_dtoa_r+0xb4e>
 8002920:	601e      	str	r6, [r3, #0]
 8002922:	e248      	b.n	8002db6 <_dtoa_r+0xb4e>
 8002924:	46b8      	mov	r8, r7
 8002926:	4633      	mov	r3, r6
 8002928:	461e      	mov	r6, r3
 800292a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800292e:	2a39      	cmp	r2, #57	@ 0x39
 8002930:	d106      	bne.n	8002940 <_dtoa_r+0x6d8>
 8002932:	459a      	cmp	sl, r3
 8002934:	d1f8      	bne.n	8002928 <_dtoa_r+0x6c0>
 8002936:	2230      	movs	r2, #48	@ 0x30
 8002938:	f108 0801 	add.w	r8, r8, #1
 800293c:	f88a 2000 	strb.w	r2, [sl]
 8002940:	781a      	ldrb	r2, [r3, #0]
 8002942:	3201      	adds	r2, #1
 8002944:	701a      	strb	r2, [r3, #0]
 8002946:	e7a0      	b.n	800288a <_dtoa_r+0x622>
 8002948:	4b6f      	ldr	r3, [pc, #444]	@ (8002b08 <_dtoa_r+0x8a0>)
 800294a:	2200      	movs	r2, #0
 800294c:	f7fd fe54 	bl	80005f8 <__aeabi_dmul>
 8002950:	2200      	movs	r2, #0
 8002952:	2300      	movs	r3, #0
 8002954:	4604      	mov	r4, r0
 8002956:	460d      	mov	r5, r1
 8002958:	f7fe f8b6 	bl	8000ac8 <__aeabi_dcmpeq>
 800295c:	2800      	cmp	r0, #0
 800295e:	d09f      	beq.n	80028a0 <_dtoa_r+0x638>
 8002960:	e7d1      	b.n	8002906 <_dtoa_r+0x69e>
 8002962:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002964:	2a00      	cmp	r2, #0
 8002966:	f000 80ea 	beq.w	8002b3e <_dtoa_r+0x8d6>
 800296a:	9a07      	ldr	r2, [sp, #28]
 800296c:	2a01      	cmp	r2, #1
 800296e:	f300 80cd 	bgt.w	8002b0c <_dtoa_r+0x8a4>
 8002972:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002974:	2a00      	cmp	r2, #0
 8002976:	f000 80c1 	beq.w	8002afc <_dtoa_r+0x894>
 800297a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800297e:	9c08      	ldr	r4, [sp, #32]
 8002980:	9e00      	ldr	r6, [sp, #0]
 8002982:	9a00      	ldr	r2, [sp, #0]
 8002984:	441a      	add	r2, r3
 8002986:	9200      	str	r2, [sp, #0]
 8002988:	9a06      	ldr	r2, [sp, #24]
 800298a:	2101      	movs	r1, #1
 800298c:	441a      	add	r2, r3
 800298e:	4648      	mov	r0, r9
 8002990:	9206      	str	r2, [sp, #24]
 8002992:	f000 fc2d 	bl	80031f0 <__i2b>
 8002996:	4605      	mov	r5, r0
 8002998:	b166      	cbz	r6, 80029b4 <_dtoa_r+0x74c>
 800299a:	9b06      	ldr	r3, [sp, #24]
 800299c:	2b00      	cmp	r3, #0
 800299e:	dd09      	ble.n	80029b4 <_dtoa_r+0x74c>
 80029a0:	42b3      	cmp	r3, r6
 80029a2:	9a00      	ldr	r2, [sp, #0]
 80029a4:	bfa8      	it	ge
 80029a6:	4633      	movge	r3, r6
 80029a8:	1ad2      	subs	r2, r2, r3
 80029aa:	9200      	str	r2, [sp, #0]
 80029ac:	9a06      	ldr	r2, [sp, #24]
 80029ae:	1af6      	subs	r6, r6, r3
 80029b0:	1ad3      	subs	r3, r2, r3
 80029b2:	9306      	str	r3, [sp, #24]
 80029b4:	9b08      	ldr	r3, [sp, #32]
 80029b6:	b30b      	cbz	r3, 80029fc <_dtoa_r+0x794>
 80029b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80029ba:	2b00      	cmp	r3, #0
 80029bc:	f000 80c6 	beq.w	8002b4c <_dtoa_r+0x8e4>
 80029c0:	2c00      	cmp	r4, #0
 80029c2:	f000 80c0 	beq.w	8002b46 <_dtoa_r+0x8de>
 80029c6:	4629      	mov	r1, r5
 80029c8:	4622      	mov	r2, r4
 80029ca:	4648      	mov	r0, r9
 80029cc:	f000 fcc8 	bl	8003360 <__pow5mult>
 80029d0:	9a02      	ldr	r2, [sp, #8]
 80029d2:	4601      	mov	r1, r0
 80029d4:	4605      	mov	r5, r0
 80029d6:	4648      	mov	r0, r9
 80029d8:	f000 fc20 	bl	800321c <__multiply>
 80029dc:	9902      	ldr	r1, [sp, #8]
 80029de:	4680      	mov	r8, r0
 80029e0:	4648      	mov	r0, r9
 80029e2:	f000 fb51 	bl	8003088 <_Bfree>
 80029e6:	9b08      	ldr	r3, [sp, #32]
 80029e8:	1b1b      	subs	r3, r3, r4
 80029ea:	9308      	str	r3, [sp, #32]
 80029ec:	f000 80b1 	beq.w	8002b52 <_dtoa_r+0x8ea>
 80029f0:	9a08      	ldr	r2, [sp, #32]
 80029f2:	4641      	mov	r1, r8
 80029f4:	4648      	mov	r0, r9
 80029f6:	f000 fcb3 	bl	8003360 <__pow5mult>
 80029fa:	9002      	str	r0, [sp, #8]
 80029fc:	2101      	movs	r1, #1
 80029fe:	4648      	mov	r0, r9
 8002a00:	f000 fbf6 	bl	80031f0 <__i2b>
 8002a04:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002a06:	4604      	mov	r4, r0
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	f000 81d8 	beq.w	8002dbe <_dtoa_r+0xb56>
 8002a0e:	461a      	mov	r2, r3
 8002a10:	4601      	mov	r1, r0
 8002a12:	4648      	mov	r0, r9
 8002a14:	f000 fca4 	bl	8003360 <__pow5mult>
 8002a18:	9b07      	ldr	r3, [sp, #28]
 8002a1a:	2b01      	cmp	r3, #1
 8002a1c:	4604      	mov	r4, r0
 8002a1e:	f300 809f 	bgt.w	8002b60 <_dtoa_r+0x8f8>
 8002a22:	9b04      	ldr	r3, [sp, #16]
 8002a24:	2b00      	cmp	r3, #0
 8002a26:	f040 8097 	bne.w	8002b58 <_dtoa_r+0x8f0>
 8002a2a:	9b05      	ldr	r3, [sp, #20]
 8002a2c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002a30:	2b00      	cmp	r3, #0
 8002a32:	f040 8093 	bne.w	8002b5c <_dtoa_r+0x8f4>
 8002a36:	9b05      	ldr	r3, [sp, #20]
 8002a38:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002a3c:	0d1b      	lsrs	r3, r3, #20
 8002a3e:	051b      	lsls	r3, r3, #20
 8002a40:	b133      	cbz	r3, 8002a50 <_dtoa_r+0x7e8>
 8002a42:	9b00      	ldr	r3, [sp, #0]
 8002a44:	3301      	adds	r3, #1
 8002a46:	9300      	str	r3, [sp, #0]
 8002a48:	9b06      	ldr	r3, [sp, #24]
 8002a4a:	3301      	adds	r3, #1
 8002a4c:	9306      	str	r3, [sp, #24]
 8002a4e:	2301      	movs	r3, #1
 8002a50:	9308      	str	r3, [sp, #32]
 8002a52:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002a54:	2b00      	cmp	r3, #0
 8002a56:	f000 81b8 	beq.w	8002dca <_dtoa_r+0xb62>
 8002a5a:	6923      	ldr	r3, [r4, #16]
 8002a5c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002a60:	6918      	ldr	r0, [r3, #16]
 8002a62:	f000 fb79 	bl	8003158 <__hi0bits>
 8002a66:	f1c0 0020 	rsb	r0, r0, #32
 8002a6a:	9b06      	ldr	r3, [sp, #24]
 8002a6c:	4418      	add	r0, r3
 8002a6e:	f010 001f 	ands.w	r0, r0, #31
 8002a72:	f000 8082 	beq.w	8002b7a <_dtoa_r+0x912>
 8002a76:	f1c0 0320 	rsb	r3, r0, #32
 8002a7a:	2b04      	cmp	r3, #4
 8002a7c:	dd73      	ble.n	8002b66 <_dtoa_r+0x8fe>
 8002a7e:	9b00      	ldr	r3, [sp, #0]
 8002a80:	f1c0 001c 	rsb	r0, r0, #28
 8002a84:	4403      	add	r3, r0
 8002a86:	9300      	str	r3, [sp, #0]
 8002a88:	9b06      	ldr	r3, [sp, #24]
 8002a8a:	4403      	add	r3, r0
 8002a8c:	4406      	add	r6, r0
 8002a8e:	9306      	str	r3, [sp, #24]
 8002a90:	9b00      	ldr	r3, [sp, #0]
 8002a92:	2b00      	cmp	r3, #0
 8002a94:	dd05      	ble.n	8002aa2 <_dtoa_r+0x83a>
 8002a96:	9902      	ldr	r1, [sp, #8]
 8002a98:	461a      	mov	r2, r3
 8002a9a:	4648      	mov	r0, r9
 8002a9c:	f000 fcba 	bl	8003414 <__lshift>
 8002aa0:	9002      	str	r0, [sp, #8]
 8002aa2:	9b06      	ldr	r3, [sp, #24]
 8002aa4:	2b00      	cmp	r3, #0
 8002aa6:	dd05      	ble.n	8002ab4 <_dtoa_r+0x84c>
 8002aa8:	4621      	mov	r1, r4
 8002aaa:	461a      	mov	r2, r3
 8002aac:	4648      	mov	r0, r9
 8002aae:	f000 fcb1 	bl	8003414 <__lshift>
 8002ab2:	4604      	mov	r4, r0
 8002ab4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d061      	beq.n	8002b7e <_dtoa_r+0x916>
 8002aba:	9802      	ldr	r0, [sp, #8]
 8002abc:	4621      	mov	r1, r4
 8002abe:	f000 fd15 	bl	80034ec <__mcmp>
 8002ac2:	2800      	cmp	r0, #0
 8002ac4:	da5b      	bge.n	8002b7e <_dtoa_r+0x916>
 8002ac6:	2300      	movs	r3, #0
 8002ac8:	9902      	ldr	r1, [sp, #8]
 8002aca:	220a      	movs	r2, #10
 8002acc:	4648      	mov	r0, r9
 8002ace:	f000 fafd 	bl	80030cc <__multadd>
 8002ad2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ad4:	9002      	str	r0, [sp, #8]
 8002ad6:	f107 38ff 	add.w	r8, r7, #4294967295
 8002ada:	2b00      	cmp	r3, #0
 8002adc:	f000 8177 	beq.w	8002dce <_dtoa_r+0xb66>
 8002ae0:	4629      	mov	r1, r5
 8002ae2:	2300      	movs	r3, #0
 8002ae4:	220a      	movs	r2, #10
 8002ae6:	4648      	mov	r0, r9
 8002ae8:	f000 faf0 	bl	80030cc <__multadd>
 8002aec:	f1bb 0f00 	cmp.w	fp, #0
 8002af0:	4605      	mov	r5, r0
 8002af2:	dc6f      	bgt.n	8002bd4 <_dtoa_r+0x96c>
 8002af4:	9b07      	ldr	r3, [sp, #28]
 8002af6:	2b02      	cmp	r3, #2
 8002af8:	dc49      	bgt.n	8002b8e <_dtoa_r+0x926>
 8002afa:	e06b      	b.n	8002bd4 <_dtoa_r+0x96c>
 8002afc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002afe:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002b02:	e73c      	b.n	800297e <_dtoa_r+0x716>
 8002b04:	3fe00000 	.word	0x3fe00000
 8002b08:	40240000 	.word	0x40240000
 8002b0c:	9b03      	ldr	r3, [sp, #12]
 8002b0e:	1e5c      	subs	r4, r3, #1
 8002b10:	9b08      	ldr	r3, [sp, #32]
 8002b12:	42a3      	cmp	r3, r4
 8002b14:	db09      	blt.n	8002b2a <_dtoa_r+0x8c2>
 8002b16:	1b1c      	subs	r4, r3, r4
 8002b18:	9b03      	ldr	r3, [sp, #12]
 8002b1a:	2b00      	cmp	r3, #0
 8002b1c:	f6bf af30 	bge.w	8002980 <_dtoa_r+0x718>
 8002b20:	9b00      	ldr	r3, [sp, #0]
 8002b22:	9a03      	ldr	r2, [sp, #12]
 8002b24:	1a9e      	subs	r6, r3, r2
 8002b26:	2300      	movs	r3, #0
 8002b28:	e72b      	b.n	8002982 <_dtoa_r+0x71a>
 8002b2a:	9b08      	ldr	r3, [sp, #32]
 8002b2c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8002b2e:	9408      	str	r4, [sp, #32]
 8002b30:	1ae3      	subs	r3, r4, r3
 8002b32:	441a      	add	r2, r3
 8002b34:	9e00      	ldr	r6, [sp, #0]
 8002b36:	9b03      	ldr	r3, [sp, #12]
 8002b38:	920d      	str	r2, [sp, #52]	@ 0x34
 8002b3a:	2400      	movs	r4, #0
 8002b3c:	e721      	b.n	8002982 <_dtoa_r+0x71a>
 8002b3e:	9c08      	ldr	r4, [sp, #32]
 8002b40:	9e00      	ldr	r6, [sp, #0]
 8002b42:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8002b44:	e728      	b.n	8002998 <_dtoa_r+0x730>
 8002b46:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8002b4a:	e751      	b.n	80029f0 <_dtoa_r+0x788>
 8002b4c:	9a08      	ldr	r2, [sp, #32]
 8002b4e:	9902      	ldr	r1, [sp, #8]
 8002b50:	e750      	b.n	80029f4 <_dtoa_r+0x78c>
 8002b52:	f8cd 8008 	str.w	r8, [sp, #8]
 8002b56:	e751      	b.n	80029fc <_dtoa_r+0x794>
 8002b58:	2300      	movs	r3, #0
 8002b5a:	e779      	b.n	8002a50 <_dtoa_r+0x7e8>
 8002b5c:	9b04      	ldr	r3, [sp, #16]
 8002b5e:	e777      	b.n	8002a50 <_dtoa_r+0x7e8>
 8002b60:	2300      	movs	r3, #0
 8002b62:	9308      	str	r3, [sp, #32]
 8002b64:	e779      	b.n	8002a5a <_dtoa_r+0x7f2>
 8002b66:	d093      	beq.n	8002a90 <_dtoa_r+0x828>
 8002b68:	9a00      	ldr	r2, [sp, #0]
 8002b6a:	331c      	adds	r3, #28
 8002b6c:	441a      	add	r2, r3
 8002b6e:	9200      	str	r2, [sp, #0]
 8002b70:	9a06      	ldr	r2, [sp, #24]
 8002b72:	441a      	add	r2, r3
 8002b74:	441e      	add	r6, r3
 8002b76:	9206      	str	r2, [sp, #24]
 8002b78:	e78a      	b.n	8002a90 <_dtoa_r+0x828>
 8002b7a:	4603      	mov	r3, r0
 8002b7c:	e7f4      	b.n	8002b68 <_dtoa_r+0x900>
 8002b7e:	9b03      	ldr	r3, [sp, #12]
 8002b80:	2b00      	cmp	r3, #0
 8002b82:	46b8      	mov	r8, r7
 8002b84:	dc20      	bgt.n	8002bc8 <_dtoa_r+0x960>
 8002b86:	469b      	mov	fp, r3
 8002b88:	9b07      	ldr	r3, [sp, #28]
 8002b8a:	2b02      	cmp	r3, #2
 8002b8c:	dd1e      	ble.n	8002bcc <_dtoa_r+0x964>
 8002b8e:	f1bb 0f00 	cmp.w	fp, #0
 8002b92:	f47f adb1 	bne.w	80026f8 <_dtoa_r+0x490>
 8002b96:	4621      	mov	r1, r4
 8002b98:	465b      	mov	r3, fp
 8002b9a:	2205      	movs	r2, #5
 8002b9c:	4648      	mov	r0, r9
 8002b9e:	f000 fa95 	bl	80030cc <__multadd>
 8002ba2:	4601      	mov	r1, r0
 8002ba4:	4604      	mov	r4, r0
 8002ba6:	9802      	ldr	r0, [sp, #8]
 8002ba8:	f000 fca0 	bl	80034ec <__mcmp>
 8002bac:	2800      	cmp	r0, #0
 8002bae:	f77f ada3 	ble.w	80026f8 <_dtoa_r+0x490>
 8002bb2:	4656      	mov	r6, sl
 8002bb4:	2331      	movs	r3, #49	@ 0x31
 8002bb6:	f806 3b01 	strb.w	r3, [r6], #1
 8002bba:	f108 0801 	add.w	r8, r8, #1
 8002bbe:	e59f      	b.n	8002700 <_dtoa_r+0x498>
 8002bc0:	9c03      	ldr	r4, [sp, #12]
 8002bc2:	46b8      	mov	r8, r7
 8002bc4:	4625      	mov	r5, r4
 8002bc6:	e7f4      	b.n	8002bb2 <_dtoa_r+0x94a>
 8002bc8:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8002bcc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	f000 8101 	beq.w	8002dd6 <_dtoa_r+0xb6e>
 8002bd4:	2e00      	cmp	r6, #0
 8002bd6:	dd05      	ble.n	8002be4 <_dtoa_r+0x97c>
 8002bd8:	4629      	mov	r1, r5
 8002bda:	4632      	mov	r2, r6
 8002bdc:	4648      	mov	r0, r9
 8002bde:	f000 fc19 	bl	8003414 <__lshift>
 8002be2:	4605      	mov	r5, r0
 8002be4:	9b08      	ldr	r3, [sp, #32]
 8002be6:	2b00      	cmp	r3, #0
 8002be8:	d05c      	beq.n	8002ca4 <_dtoa_r+0xa3c>
 8002bea:	6869      	ldr	r1, [r5, #4]
 8002bec:	4648      	mov	r0, r9
 8002bee:	f000 fa0b 	bl	8003008 <_Balloc>
 8002bf2:	4606      	mov	r6, r0
 8002bf4:	b928      	cbnz	r0, 8002c02 <_dtoa_r+0x99a>
 8002bf6:	4b82      	ldr	r3, [pc, #520]	@ (8002e00 <_dtoa_r+0xb98>)
 8002bf8:	4602      	mov	r2, r0
 8002bfa:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002bfe:	f7ff bb4a 	b.w	8002296 <_dtoa_r+0x2e>
 8002c02:	692a      	ldr	r2, [r5, #16]
 8002c04:	3202      	adds	r2, #2
 8002c06:	0092      	lsls	r2, r2, #2
 8002c08:	f105 010c 	add.w	r1, r5, #12
 8002c0c:	300c      	adds	r0, #12
 8002c0e:	f000 fff7 	bl	8003c00 <memcpy>
 8002c12:	2201      	movs	r2, #1
 8002c14:	4631      	mov	r1, r6
 8002c16:	4648      	mov	r0, r9
 8002c18:	f000 fbfc 	bl	8003414 <__lshift>
 8002c1c:	f10a 0301 	add.w	r3, sl, #1
 8002c20:	9300      	str	r3, [sp, #0]
 8002c22:	eb0a 030b 	add.w	r3, sl, fp
 8002c26:	9308      	str	r3, [sp, #32]
 8002c28:	9b04      	ldr	r3, [sp, #16]
 8002c2a:	f003 0301 	and.w	r3, r3, #1
 8002c2e:	462f      	mov	r7, r5
 8002c30:	9306      	str	r3, [sp, #24]
 8002c32:	4605      	mov	r5, r0
 8002c34:	9b00      	ldr	r3, [sp, #0]
 8002c36:	9802      	ldr	r0, [sp, #8]
 8002c38:	4621      	mov	r1, r4
 8002c3a:	f103 3bff 	add.w	fp, r3, #4294967295
 8002c3e:	f7ff fa88 	bl	8002152 <quorem>
 8002c42:	4603      	mov	r3, r0
 8002c44:	3330      	adds	r3, #48	@ 0x30
 8002c46:	9003      	str	r0, [sp, #12]
 8002c48:	4639      	mov	r1, r7
 8002c4a:	9802      	ldr	r0, [sp, #8]
 8002c4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8002c4e:	f000 fc4d 	bl	80034ec <__mcmp>
 8002c52:	462a      	mov	r2, r5
 8002c54:	9004      	str	r0, [sp, #16]
 8002c56:	4621      	mov	r1, r4
 8002c58:	4648      	mov	r0, r9
 8002c5a:	f000 fc63 	bl	8003524 <__mdiff>
 8002c5e:	68c2      	ldr	r2, [r0, #12]
 8002c60:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002c62:	4606      	mov	r6, r0
 8002c64:	bb02      	cbnz	r2, 8002ca8 <_dtoa_r+0xa40>
 8002c66:	4601      	mov	r1, r0
 8002c68:	9802      	ldr	r0, [sp, #8]
 8002c6a:	f000 fc3f 	bl	80034ec <__mcmp>
 8002c6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002c70:	4602      	mov	r2, r0
 8002c72:	4631      	mov	r1, r6
 8002c74:	4648      	mov	r0, r9
 8002c76:	920c      	str	r2, [sp, #48]	@ 0x30
 8002c78:	9309      	str	r3, [sp, #36]	@ 0x24
 8002c7a:	f000 fa05 	bl	8003088 <_Bfree>
 8002c7e:	9b07      	ldr	r3, [sp, #28]
 8002c80:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8002c82:	9e00      	ldr	r6, [sp, #0]
 8002c84:	ea42 0103 	orr.w	r1, r2, r3
 8002c88:	9b06      	ldr	r3, [sp, #24]
 8002c8a:	4319      	orrs	r1, r3
 8002c8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002c8e:	d10d      	bne.n	8002cac <_dtoa_r+0xa44>
 8002c90:	2b39      	cmp	r3, #57	@ 0x39
 8002c92:	d027      	beq.n	8002ce4 <_dtoa_r+0xa7c>
 8002c94:	9a04      	ldr	r2, [sp, #16]
 8002c96:	2a00      	cmp	r2, #0
 8002c98:	dd01      	ble.n	8002c9e <_dtoa_r+0xa36>
 8002c9a:	9b03      	ldr	r3, [sp, #12]
 8002c9c:	3331      	adds	r3, #49	@ 0x31
 8002c9e:	f88b 3000 	strb.w	r3, [fp]
 8002ca2:	e52e      	b.n	8002702 <_dtoa_r+0x49a>
 8002ca4:	4628      	mov	r0, r5
 8002ca6:	e7b9      	b.n	8002c1c <_dtoa_r+0x9b4>
 8002ca8:	2201      	movs	r2, #1
 8002caa:	e7e2      	b.n	8002c72 <_dtoa_r+0xa0a>
 8002cac:	9904      	ldr	r1, [sp, #16]
 8002cae:	2900      	cmp	r1, #0
 8002cb0:	db04      	blt.n	8002cbc <_dtoa_r+0xa54>
 8002cb2:	9807      	ldr	r0, [sp, #28]
 8002cb4:	4301      	orrs	r1, r0
 8002cb6:	9806      	ldr	r0, [sp, #24]
 8002cb8:	4301      	orrs	r1, r0
 8002cba:	d120      	bne.n	8002cfe <_dtoa_r+0xa96>
 8002cbc:	2a00      	cmp	r2, #0
 8002cbe:	ddee      	ble.n	8002c9e <_dtoa_r+0xa36>
 8002cc0:	9902      	ldr	r1, [sp, #8]
 8002cc2:	9300      	str	r3, [sp, #0]
 8002cc4:	2201      	movs	r2, #1
 8002cc6:	4648      	mov	r0, r9
 8002cc8:	f000 fba4 	bl	8003414 <__lshift>
 8002ccc:	4621      	mov	r1, r4
 8002cce:	9002      	str	r0, [sp, #8]
 8002cd0:	f000 fc0c 	bl	80034ec <__mcmp>
 8002cd4:	2800      	cmp	r0, #0
 8002cd6:	9b00      	ldr	r3, [sp, #0]
 8002cd8:	dc02      	bgt.n	8002ce0 <_dtoa_r+0xa78>
 8002cda:	d1e0      	bne.n	8002c9e <_dtoa_r+0xa36>
 8002cdc:	07da      	lsls	r2, r3, #31
 8002cde:	d5de      	bpl.n	8002c9e <_dtoa_r+0xa36>
 8002ce0:	2b39      	cmp	r3, #57	@ 0x39
 8002ce2:	d1da      	bne.n	8002c9a <_dtoa_r+0xa32>
 8002ce4:	2339      	movs	r3, #57	@ 0x39
 8002ce6:	f88b 3000 	strb.w	r3, [fp]
 8002cea:	4633      	mov	r3, r6
 8002cec:	461e      	mov	r6, r3
 8002cee:	3b01      	subs	r3, #1
 8002cf0:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8002cf4:	2a39      	cmp	r2, #57	@ 0x39
 8002cf6:	d04e      	beq.n	8002d96 <_dtoa_r+0xb2e>
 8002cf8:	3201      	adds	r2, #1
 8002cfa:	701a      	strb	r2, [r3, #0]
 8002cfc:	e501      	b.n	8002702 <_dtoa_r+0x49a>
 8002cfe:	2a00      	cmp	r2, #0
 8002d00:	dd03      	ble.n	8002d0a <_dtoa_r+0xaa2>
 8002d02:	2b39      	cmp	r3, #57	@ 0x39
 8002d04:	d0ee      	beq.n	8002ce4 <_dtoa_r+0xa7c>
 8002d06:	3301      	adds	r3, #1
 8002d08:	e7c9      	b.n	8002c9e <_dtoa_r+0xa36>
 8002d0a:	9a00      	ldr	r2, [sp, #0]
 8002d0c:	9908      	ldr	r1, [sp, #32]
 8002d0e:	f802 3c01 	strb.w	r3, [r2, #-1]
 8002d12:	428a      	cmp	r2, r1
 8002d14:	d028      	beq.n	8002d68 <_dtoa_r+0xb00>
 8002d16:	9902      	ldr	r1, [sp, #8]
 8002d18:	2300      	movs	r3, #0
 8002d1a:	220a      	movs	r2, #10
 8002d1c:	4648      	mov	r0, r9
 8002d1e:	f000 f9d5 	bl	80030cc <__multadd>
 8002d22:	42af      	cmp	r7, r5
 8002d24:	9002      	str	r0, [sp, #8]
 8002d26:	f04f 0300 	mov.w	r3, #0
 8002d2a:	f04f 020a 	mov.w	r2, #10
 8002d2e:	4639      	mov	r1, r7
 8002d30:	4648      	mov	r0, r9
 8002d32:	d107      	bne.n	8002d44 <_dtoa_r+0xadc>
 8002d34:	f000 f9ca 	bl	80030cc <__multadd>
 8002d38:	4607      	mov	r7, r0
 8002d3a:	4605      	mov	r5, r0
 8002d3c:	9b00      	ldr	r3, [sp, #0]
 8002d3e:	3301      	adds	r3, #1
 8002d40:	9300      	str	r3, [sp, #0]
 8002d42:	e777      	b.n	8002c34 <_dtoa_r+0x9cc>
 8002d44:	f000 f9c2 	bl	80030cc <__multadd>
 8002d48:	4629      	mov	r1, r5
 8002d4a:	4607      	mov	r7, r0
 8002d4c:	2300      	movs	r3, #0
 8002d4e:	220a      	movs	r2, #10
 8002d50:	4648      	mov	r0, r9
 8002d52:	f000 f9bb 	bl	80030cc <__multadd>
 8002d56:	4605      	mov	r5, r0
 8002d58:	e7f0      	b.n	8002d3c <_dtoa_r+0xad4>
 8002d5a:	f1bb 0f00 	cmp.w	fp, #0
 8002d5e:	bfcc      	ite	gt
 8002d60:	465e      	movgt	r6, fp
 8002d62:	2601      	movle	r6, #1
 8002d64:	4456      	add	r6, sl
 8002d66:	2700      	movs	r7, #0
 8002d68:	9902      	ldr	r1, [sp, #8]
 8002d6a:	9300      	str	r3, [sp, #0]
 8002d6c:	2201      	movs	r2, #1
 8002d6e:	4648      	mov	r0, r9
 8002d70:	f000 fb50 	bl	8003414 <__lshift>
 8002d74:	4621      	mov	r1, r4
 8002d76:	9002      	str	r0, [sp, #8]
 8002d78:	f000 fbb8 	bl	80034ec <__mcmp>
 8002d7c:	2800      	cmp	r0, #0
 8002d7e:	dcb4      	bgt.n	8002cea <_dtoa_r+0xa82>
 8002d80:	d102      	bne.n	8002d88 <_dtoa_r+0xb20>
 8002d82:	9b00      	ldr	r3, [sp, #0]
 8002d84:	07db      	lsls	r3, r3, #31
 8002d86:	d4b0      	bmi.n	8002cea <_dtoa_r+0xa82>
 8002d88:	4633      	mov	r3, r6
 8002d8a:	461e      	mov	r6, r3
 8002d8c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002d90:	2a30      	cmp	r2, #48	@ 0x30
 8002d92:	d0fa      	beq.n	8002d8a <_dtoa_r+0xb22>
 8002d94:	e4b5      	b.n	8002702 <_dtoa_r+0x49a>
 8002d96:	459a      	cmp	sl, r3
 8002d98:	d1a8      	bne.n	8002cec <_dtoa_r+0xa84>
 8002d9a:	2331      	movs	r3, #49	@ 0x31
 8002d9c:	f108 0801 	add.w	r8, r8, #1
 8002da0:	f88a 3000 	strb.w	r3, [sl]
 8002da4:	e4ad      	b.n	8002702 <_dtoa_r+0x49a>
 8002da6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002da8:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8002e04 <_dtoa_r+0xb9c>
 8002dac:	b11b      	cbz	r3, 8002db6 <_dtoa_r+0xb4e>
 8002dae:	f10a 0308 	add.w	r3, sl, #8
 8002db2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8002db4:	6013      	str	r3, [r2, #0]
 8002db6:	4650      	mov	r0, sl
 8002db8:	b017      	add	sp, #92	@ 0x5c
 8002dba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002dbe:	9b07      	ldr	r3, [sp, #28]
 8002dc0:	2b01      	cmp	r3, #1
 8002dc2:	f77f ae2e 	ble.w	8002a22 <_dtoa_r+0x7ba>
 8002dc6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002dc8:	9308      	str	r3, [sp, #32]
 8002dca:	2001      	movs	r0, #1
 8002dcc:	e64d      	b.n	8002a6a <_dtoa_r+0x802>
 8002dce:	f1bb 0f00 	cmp.w	fp, #0
 8002dd2:	f77f aed9 	ble.w	8002b88 <_dtoa_r+0x920>
 8002dd6:	4656      	mov	r6, sl
 8002dd8:	9802      	ldr	r0, [sp, #8]
 8002dda:	4621      	mov	r1, r4
 8002ddc:	f7ff f9b9 	bl	8002152 <quorem>
 8002de0:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8002de4:	f806 3b01 	strb.w	r3, [r6], #1
 8002de8:	eba6 020a 	sub.w	r2, r6, sl
 8002dec:	4593      	cmp	fp, r2
 8002dee:	ddb4      	ble.n	8002d5a <_dtoa_r+0xaf2>
 8002df0:	9902      	ldr	r1, [sp, #8]
 8002df2:	2300      	movs	r3, #0
 8002df4:	220a      	movs	r2, #10
 8002df6:	4648      	mov	r0, r9
 8002df8:	f000 f968 	bl	80030cc <__multadd>
 8002dfc:	9002      	str	r0, [sp, #8]
 8002dfe:	e7eb      	b.n	8002dd8 <_dtoa_r+0xb70>
 8002e00:	08003e8f 	.word	0x08003e8f
 8002e04:	08003e13 	.word	0x08003e13

08002e08 <_free_r>:
 8002e08:	b538      	push	{r3, r4, r5, lr}
 8002e0a:	4605      	mov	r5, r0
 8002e0c:	2900      	cmp	r1, #0
 8002e0e:	d041      	beq.n	8002e94 <_free_r+0x8c>
 8002e10:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002e14:	1f0c      	subs	r4, r1, #4
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	bfb8      	it	lt
 8002e1a:	18e4      	addlt	r4, r4, r3
 8002e1c:	f000 f8e8 	bl	8002ff0 <__malloc_lock>
 8002e20:	4a1d      	ldr	r2, [pc, #116]	@ (8002e98 <_free_r+0x90>)
 8002e22:	6813      	ldr	r3, [r2, #0]
 8002e24:	b933      	cbnz	r3, 8002e34 <_free_r+0x2c>
 8002e26:	6063      	str	r3, [r4, #4]
 8002e28:	6014      	str	r4, [r2, #0]
 8002e2a:	4628      	mov	r0, r5
 8002e2c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002e30:	f000 b8e4 	b.w	8002ffc <__malloc_unlock>
 8002e34:	42a3      	cmp	r3, r4
 8002e36:	d908      	bls.n	8002e4a <_free_r+0x42>
 8002e38:	6820      	ldr	r0, [r4, #0]
 8002e3a:	1821      	adds	r1, r4, r0
 8002e3c:	428b      	cmp	r3, r1
 8002e3e:	bf01      	itttt	eq
 8002e40:	6819      	ldreq	r1, [r3, #0]
 8002e42:	685b      	ldreq	r3, [r3, #4]
 8002e44:	1809      	addeq	r1, r1, r0
 8002e46:	6021      	streq	r1, [r4, #0]
 8002e48:	e7ed      	b.n	8002e26 <_free_r+0x1e>
 8002e4a:	461a      	mov	r2, r3
 8002e4c:	685b      	ldr	r3, [r3, #4]
 8002e4e:	b10b      	cbz	r3, 8002e54 <_free_r+0x4c>
 8002e50:	42a3      	cmp	r3, r4
 8002e52:	d9fa      	bls.n	8002e4a <_free_r+0x42>
 8002e54:	6811      	ldr	r1, [r2, #0]
 8002e56:	1850      	adds	r0, r2, r1
 8002e58:	42a0      	cmp	r0, r4
 8002e5a:	d10b      	bne.n	8002e74 <_free_r+0x6c>
 8002e5c:	6820      	ldr	r0, [r4, #0]
 8002e5e:	4401      	add	r1, r0
 8002e60:	1850      	adds	r0, r2, r1
 8002e62:	4283      	cmp	r3, r0
 8002e64:	6011      	str	r1, [r2, #0]
 8002e66:	d1e0      	bne.n	8002e2a <_free_r+0x22>
 8002e68:	6818      	ldr	r0, [r3, #0]
 8002e6a:	685b      	ldr	r3, [r3, #4]
 8002e6c:	6053      	str	r3, [r2, #4]
 8002e6e:	4408      	add	r0, r1
 8002e70:	6010      	str	r0, [r2, #0]
 8002e72:	e7da      	b.n	8002e2a <_free_r+0x22>
 8002e74:	d902      	bls.n	8002e7c <_free_r+0x74>
 8002e76:	230c      	movs	r3, #12
 8002e78:	602b      	str	r3, [r5, #0]
 8002e7a:	e7d6      	b.n	8002e2a <_free_r+0x22>
 8002e7c:	6820      	ldr	r0, [r4, #0]
 8002e7e:	1821      	adds	r1, r4, r0
 8002e80:	428b      	cmp	r3, r1
 8002e82:	bf04      	itt	eq
 8002e84:	6819      	ldreq	r1, [r3, #0]
 8002e86:	685b      	ldreq	r3, [r3, #4]
 8002e88:	6063      	str	r3, [r4, #4]
 8002e8a:	bf04      	itt	eq
 8002e8c:	1809      	addeq	r1, r1, r0
 8002e8e:	6021      	streq	r1, [r4, #0]
 8002e90:	6054      	str	r4, [r2, #4]
 8002e92:	e7ca      	b.n	8002e2a <_free_r+0x22>
 8002e94:	bd38      	pop	{r3, r4, r5, pc}
 8002e96:	bf00      	nop
 8002e98:	20000338 	.word	0x20000338

08002e9c <malloc>:
 8002e9c:	4b02      	ldr	r3, [pc, #8]	@ (8002ea8 <malloc+0xc>)
 8002e9e:	4601      	mov	r1, r0
 8002ea0:	6818      	ldr	r0, [r3, #0]
 8002ea2:	f000 b825 	b.w	8002ef0 <_malloc_r>
 8002ea6:	bf00      	nop
 8002ea8:	20000010 	.word	0x20000010

08002eac <sbrk_aligned>:
 8002eac:	b570      	push	{r4, r5, r6, lr}
 8002eae:	4e0f      	ldr	r6, [pc, #60]	@ (8002eec <sbrk_aligned+0x40>)
 8002eb0:	460c      	mov	r4, r1
 8002eb2:	6831      	ldr	r1, [r6, #0]
 8002eb4:	4605      	mov	r5, r0
 8002eb6:	b911      	cbnz	r1, 8002ebe <sbrk_aligned+0x12>
 8002eb8:	f000 fe92 	bl	8003be0 <_sbrk_r>
 8002ebc:	6030      	str	r0, [r6, #0]
 8002ebe:	4621      	mov	r1, r4
 8002ec0:	4628      	mov	r0, r5
 8002ec2:	f000 fe8d 	bl	8003be0 <_sbrk_r>
 8002ec6:	1c43      	adds	r3, r0, #1
 8002ec8:	d103      	bne.n	8002ed2 <sbrk_aligned+0x26>
 8002eca:	f04f 34ff 	mov.w	r4, #4294967295
 8002ece:	4620      	mov	r0, r4
 8002ed0:	bd70      	pop	{r4, r5, r6, pc}
 8002ed2:	1cc4      	adds	r4, r0, #3
 8002ed4:	f024 0403 	bic.w	r4, r4, #3
 8002ed8:	42a0      	cmp	r0, r4
 8002eda:	d0f8      	beq.n	8002ece <sbrk_aligned+0x22>
 8002edc:	1a21      	subs	r1, r4, r0
 8002ede:	4628      	mov	r0, r5
 8002ee0:	f000 fe7e 	bl	8003be0 <_sbrk_r>
 8002ee4:	3001      	adds	r0, #1
 8002ee6:	d1f2      	bne.n	8002ece <sbrk_aligned+0x22>
 8002ee8:	e7ef      	b.n	8002eca <sbrk_aligned+0x1e>
 8002eea:	bf00      	nop
 8002eec:	20000334 	.word	0x20000334

08002ef0 <_malloc_r>:
 8002ef0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002ef4:	1ccd      	adds	r5, r1, #3
 8002ef6:	f025 0503 	bic.w	r5, r5, #3
 8002efa:	3508      	adds	r5, #8
 8002efc:	2d0c      	cmp	r5, #12
 8002efe:	bf38      	it	cc
 8002f00:	250c      	movcc	r5, #12
 8002f02:	2d00      	cmp	r5, #0
 8002f04:	4606      	mov	r6, r0
 8002f06:	db01      	blt.n	8002f0c <_malloc_r+0x1c>
 8002f08:	42a9      	cmp	r1, r5
 8002f0a:	d904      	bls.n	8002f16 <_malloc_r+0x26>
 8002f0c:	230c      	movs	r3, #12
 8002f0e:	6033      	str	r3, [r6, #0]
 8002f10:	2000      	movs	r0, #0
 8002f12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002f16:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002fec <_malloc_r+0xfc>
 8002f1a:	f000 f869 	bl	8002ff0 <__malloc_lock>
 8002f1e:	f8d8 3000 	ldr.w	r3, [r8]
 8002f22:	461c      	mov	r4, r3
 8002f24:	bb44      	cbnz	r4, 8002f78 <_malloc_r+0x88>
 8002f26:	4629      	mov	r1, r5
 8002f28:	4630      	mov	r0, r6
 8002f2a:	f7ff ffbf 	bl	8002eac <sbrk_aligned>
 8002f2e:	1c43      	adds	r3, r0, #1
 8002f30:	4604      	mov	r4, r0
 8002f32:	d158      	bne.n	8002fe6 <_malloc_r+0xf6>
 8002f34:	f8d8 4000 	ldr.w	r4, [r8]
 8002f38:	4627      	mov	r7, r4
 8002f3a:	2f00      	cmp	r7, #0
 8002f3c:	d143      	bne.n	8002fc6 <_malloc_r+0xd6>
 8002f3e:	2c00      	cmp	r4, #0
 8002f40:	d04b      	beq.n	8002fda <_malloc_r+0xea>
 8002f42:	6823      	ldr	r3, [r4, #0]
 8002f44:	4639      	mov	r1, r7
 8002f46:	4630      	mov	r0, r6
 8002f48:	eb04 0903 	add.w	r9, r4, r3
 8002f4c:	f000 fe48 	bl	8003be0 <_sbrk_r>
 8002f50:	4581      	cmp	r9, r0
 8002f52:	d142      	bne.n	8002fda <_malloc_r+0xea>
 8002f54:	6821      	ldr	r1, [r4, #0]
 8002f56:	1a6d      	subs	r5, r5, r1
 8002f58:	4629      	mov	r1, r5
 8002f5a:	4630      	mov	r0, r6
 8002f5c:	f7ff ffa6 	bl	8002eac <sbrk_aligned>
 8002f60:	3001      	adds	r0, #1
 8002f62:	d03a      	beq.n	8002fda <_malloc_r+0xea>
 8002f64:	6823      	ldr	r3, [r4, #0]
 8002f66:	442b      	add	r3, r5
 8002f68:	6023      	str	r3, [r4, #0]
 8002f6a:	f8d8 3000 	ldr.w	r3, [r8]
 8002f6e:	685a      	ldr	r2, [r3, #4]
 8002f70:	bb62      	cbnz	r2, 8002fcc <_malloc_r+0xdc>
 8002f72:	f8c8 7000 	str.w	r7, [r8]
 8002f76:	e00f      	b.n	8002f98 <_malloc_r+0xa8>
 8002f78:	6822      	ldr	r2, [r4, #0]
 8002f7a:	1b52      	subs	r2, r2, r5
 8002f7c:	d420      	bmi.n	8002fc0 <_malloc_r+0xd0>
 8002f7e:	2a0b      	cmp	r2, #11
 8002f80:	d917      	bls.n	8002fb2 <_malloc_r+0xc2>
 8002f82:	1961      	adds	r1, r4, r5
 8002f84:	42a3      	cmp	r3, r4
 8002f86:	6025      	str	r5, [r4, #0]
 8002f88:	bf18      	it	ne
 8002f8a:	6059      	strne	r1, [r3, #4]
 8002f8c:	6863      	ldr	r3, [r4, #4]
 8002f8e:	bf08      	it	eq
 8002f90:	f8c8 1000 	streq.w	r1, [r8]
 8002f94:	5162      	str	r2, [r4, r5]
 8002f96:	604b      	str	r3, [r1, #4]
 8002f98:	4630      	mov	r0, r6
 8002f9a:	f000 f82f 	bl	8002ffc <__malloc_unlock>
 8002f9e:	f104 000b 	add.w	r0, r4, #11
 8002fa2:	1d23      	adds	r3, r4, #4
 8002fa4:	f020 0007 	bic.w	r0, r0, #7
 8002fa8:	1ac2      	subs	r2, r0, r3
 8002faa:	bf1c      	itt	ne
 8002fac:	1a1b      	subne	r3, r3, r0
 8002fae:	50a3      	strne	r3, [r4, r2]
 8002fb0:	e7af      	b.n	8002f12 <_malloc_r+0x22>
 8002fb2:	6862      	ldr	r2, [r4, #4]
 8002fb4:	42a3      	cmp	r3, r4
 8002fb6:	bf0c      	ite	eq
 8002fb8:	f8c8 2000 	streq.w	r2, [r8]
 8002fbc:	605a      	strne	r2, [r3, #4]
 8002fbe:	e7eb      	b.n	8002f98 <_malloc_r+0xa8>
 8002fc0:	4623      	mov	r3, r4
 8002fc2:	6864      	ldr	r4, [r4, #4]
 8002fc4:	e7ae      	b.n	8002f24 <_malloc_r+0x34>
 8002fc6:	463c      	mov	r4, r7
 8002fc8:	687f      	ldr	r7, [r7, #4]
 8002fca:	e7b6      	b.n	8002f3a <_malloc_r+0x4a>
 8002fcc:	461a      	mov	r2, r3
 8002fce:	685b      	ldr	r3, [r3, #4]
 8002fd0:	42a3      	cmp	r3, r4
 8002fd2:	d1fb      	bne.n	8002fcc <_malloc_r+0xdc>
 8002fd4:	2300      	movs	r3, #0
 8002fd6:	6053      	str	r3, [r2, #4]
 8002fd8:	e7de      	b.n	8002f98 <_malloc_r+0xa8>
 8002fda:	230c      	movs	r3, #12
 8002fdc:	6033      	str	r3, [r6, #0]
 8002fde:	4630      	mov	r0, r6
 8002fe0:	f000 f80c 	bl	8002ffc <__malloc_unlock>
 8002fe4:	e794      	b.n	8002f10 <_malloc_r+0x20>
 8002fe6:	6005      	str	r5, [r0, #0]
 8002fe8:	e7d6      	b.n	8002f98 <_malloc_r+0xa8>
 8002fea:	bf00      	nop
 8002fec:	20000338 	.word	0x20000338

08002ff0 <__malloc_lock>:
 8002ff0:	4801      	ldr	r0, [pc, #4]	@ (8002ff8 <__malloc_lock+0x8>)
 8002ff2:	f7ff b8ac 	b.w	800214e <__retarget_lock_acquire_recursive>
 8002ff6:	bf00      	nop
 8002ff8:	20000330 	.word	0x20000330

08002ffc <__malloc_unlock>:
 8002ffc:	4801      	ldr	r0, [pc, #4]	@ (8003004 <__malloc_unlock+0x8>)
 8002ffe:	f7ff b8a7 	b.w	8002150 <__retarget_lock_release_recursive>
 8003002:	bf00      	nop
 8003004:	20000330 	.word	0x20000330

08003008 <_Balloc>:
 8003008:	b570      	push	{r4, r5, r6, lr}
 800300a:	69c6      	ldr	r6, [r0, #28]
 800300c:	4604      	mov	r4, r0
 800300e:	460d      	mov	r5, r1
 8003010:	b976      	cbnz	r6, 8003030 <_Balloc+0x28>
 8003012:	2010      	movs	r0, #16
 8003014:	f7ff ff42 	bl	8002e9c <malloc>
 8003018:	4602      	mov	r2, r0
 800301a:	61e0      	str	r0, [r4, #28]
 800301c:	b920      	cbnz	r0, 8003028 <_Balloc+0x20>
 800301e:	4b18      	ldr	r3, [pc, #96]	@ (8003080 <_Balloc+0x78>)
 8003020:	4818      	ldr	r0, [pc, #96]	@ (8003084 <_Balloc+0x7c>)
 8003022:	216b      	movs	r1, #107	@ 0x6b
 8003024:	f000 fdfa 	bl	8003c1c <__assert_func>
 8003028:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800302c:	6006      	str	r6, [r0, #0]
 800302e:	60c6      	str	r6, [r0, #12]
 8003030:	69e6      	ldr	r6, [r4, #28]
 8003032:	68f3      	ldr	r3, [r6, #12]
 8003034:	b183      	cbz	r3, 8003058 <_Balloc+0x50>
 8003036:	69e3      	ldr	r3, [r4, #28]
 8003038:	68db      	ldr	r3, [r3, #12]
 800303a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800303e:	b9b8      	cbnz	r0, 8003070 <_Balloc+0x68>
 8003040:	2101      	movs	r1, #1
 8003042:	fa01 f605 	lsl.w	r6, r1, r5
 8003046:	1d72      	adds	r2, r6, #5
 8003048:	0092      	lsls	r2, r2, #2
 800304a:	4620      	mov	r0, r4
 800304c:	f000 fe04 	bl	8003c58 <_calloc_r>
 8003050:	b160      	cbz	r0, 800306c <_Balloc+0x64>
 8003052:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003056:	e00e      	b.n	8003076 <_Balloc+0x6e>
 8003058:	2221      	movs	r2, #33	@ 0x21
 800305a:	2104      	movs	r1, #4
 800305c:	4620      	mov	r0, r4
 800305e:	f000 fdfb 	bl	8003c58 <_calloc_r>
 8003062:	69e3      	ldr	r3, [r4, #28]
 8003064:	60f0      	str	r0, [r6, #12]
 8003066:	68db      	ldr	r3, [r3, #12]
 8003068:	2b00      	cmp	r3, #0
 800306a:	d1e4      	bne.n	8003036 <_Balloc+0x2e>
 800306c:	2000      	movs	r0, #0
 800306e:	bd70      	pop	{r4, r5, r6, pc}
 8003070:	6802      	ldr	r2, [r0, #0]
 8003072:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003076:	2300      	movs	r3, #0
 8003078:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800307c:	e7f7      	b.n	800306e <_Balloc+0x66>
 800307e:	bf00      	nop
 8003080:	08003e20 	.word	0x08003e20
 8003084:	08003ea0 	.word	0x08003ea0

08003088 <_Bfree>:
 8003088:	b570      	push	{r4, r5, r6, lr}
 800308a:	69c6      	ldr	r6, [r0, #28]
 800308c:	4605      	mov	r5, r0
 800308e:	460c      	mov	r4, r1
 8003090:	b976      	cbnz	r6, 80030b0 <_Bfree+0x28>
 8003092:	2010      	movs	r0, #16
 8003094:	f7ff ff02 	bl	8002e9c <malloc>
 8003098:	4602      	mov	r2, r0
 800309a:	61e8      	str	r0, [r5, #28]
 800309c:	b920      	cbnz	r0, 80030a8 <_Bfree+0x20>
 800309e:	4b09      	ldr	r3, [pc, #36]	@ (80030c4 <_Bfree+0x3c>)
 80030a0:	4809      	ldr	r0, [pc, #36]	@ (80030c8 <_Bfree+0x40>)
 80030a2:	218f      	movs	r1, #143	@ 0x8f
 80030a4:	f000 fdba 	bl	8003c1c <__assert_func>
 80030a8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80030ac:	6006      	str	r6, [r0, #0]
 80030ae:	60c6      	str	r6, [r0, #12]
 80030b0:	b13c      	cbz	r4, 80030c2 <_Bfree+0x3a>
 80030b2:	69eb      	ldr	r3, [r5, #28]
 80030b4:	6862      	ldr	r2, [r4, #4]
 80030b6:	68db      	ldr	r3, [r3, #12]
 80030b8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80030bc:	6021      	str	r1, [r4, #0]
 80030be:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80030c2:	bd70      	pop	{r4, r5, r6, pc}
 80030c4:	08003e20 	.word	0x08003e20
 80030c8:	08003ea0 	.word	0x08003ea0

080030cc <__multadd>:
 80030cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80030d0:	690d      	ldr	r5, [r1, #16]
 80030d2:	4607      	mov	r7, r0
 80030d4:	460c      	mov	r4, r1
 80030d6:	461e      	mov	r6, r3
 80030d8:	f101 0c14 	add.w	ip, r1, #20
 80030dc:	2000      	movs	r0, #0
 80030de:	f8dc 3000 	ldr.w	r3, [ip]
 80030e2:	b299      	uxth	r1, r3
 80030e4:	fb02 6101 	mla	r1, r2, r1, r6
 80030e8:	0c1e      	lsrs	r6, r3, #16
 80030ea:	0c0b      	lsrs	r3, r1, #16
 80030ec:	fb02 3306 	mla	r3, r2, r6, r3
 80030f0:	b289      	uxth	r1, r1
 80030f2:	3001      	adds	r0, #1
 80030f4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80030f8:	4285      	cmp	r5, r0
 80030fa:	f84c 1b04 	str.w	r1, [ip], #4
 80030fe:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003102:	dcec      	bgt.n	80030de <__multadd+0x12>
 8003104:	b30e      	cbz	r6, 800314a <__multadd+0x7e>
 8003106:	68a3      	ldr	r3, [r4, #8]
 8003108:	42ab      	cmp	r3, r5
 800310a:	dc19      	bgt.n	8003140 <__multadd+0x74>
 800310c:	6861      	ldr	r1, [r4, #4]
 800310e:	4638      	mov	r0, r7
 8003110:	3101      	adds	r1, #1
 8003112:	f7ff ff79 	bl	8003008 <_Balloc>
 8003116:	4680      	mov	r8, r0
 8003118:	b928      	cbnz	r0, 8003126 <__multadd+0x5a>
 800311a:	4602      	mov	r2, r0
 800311c:	4b0c      	ldr	r3, [pc, #48]	@ (8003150 <__multadd+0x84>)
 800311e:	480d      	ldr	r0, [pc, #52]	@ (8003154 <__multadd+0x88>)
 8003120:	21ba      	movs	r1, #186	@ 0xba
 8003122:	f000 fd7b 	bl	8003c1c <__assert_func>
 8003126:	6922      	ldr	r2, [r4, #16]
 8003128:	3202      	adds	r2, #2
 800312a:	f104 010c 	add.w	r1, r4, #12
 800312e:	0092      	lsls	r2, r2, #2
 8003130:	300c      	adds	r0, #12
 8003132:	f000 fd65 	bl	8003c00 <memcpy>
 8003136:	4621      	mov	r1, r4
 8003138:	4638      	mov	r0, r7
 800313a:	f7ff ffa5 	bl	8003088 <_Bfree>
 800313e:	4644      	mov	r4, r8
 8003140:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003144:	3501      	adds	r5, #1
 8003146:	615e      	str	r6, [r3, #20]
 8003148:	6125      	str	r5, [r4, #16]
 800314a:	4620      	mov	r0, r4
 800314c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003150:	08003e8f 	.word	0x08003e8f
 8003154:	08003ea0 	.word	0x08003ea0

08003158 <__hi0bits>:
 8003158:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800315c:	4603      	mov	r3, r0
 800315e:	bf36      	itet	cc
 8003160:	0403      	lslcc	r3, r0, #16
 8003162:	2000      	movcs	r0, #0
 8003164:	2010      	movcc	r0, #16
 8003166:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800316a:	bf3c      	itt	cc
 800316c:	021b      	lslcc	r3, r3, #8
 800316e:	3008      	addcc	r0, #8
 8003170:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003174:	bf3c      	itt	cc
 8003176:	011b      	lslcc	r3, r3, #4
 8003178:	3004      	addcc	r0, #4
 800317a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800317e:	bf3c      	itt	cc
 8003180:	009b      	lslcc	r3, r3, #2
 8003182:	3002      	addcc	r0, #2
 8003184:	2b00      	cmp	r3, #0
 8003186:	db05      	blt.n	8003194 <__hi0bits+0x3c>
 8003188:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800318c:	f100 0001 	add.w	r0, r0, #1
 8003190:	bf08      	it	eq
 8003192:	2020      	moveq	r0, #32
 8003194:	4770      	bx	lr

08003196 <__lo0bits>:
 8003196:	6803      	ldr	r3, [r0, #0]
 8003198:	4602      	mov	r2, r0
 800319a:	f013 0007 	ands.w	r0, r3, #7
 800319e:	d00b      	beq.n	80031b8 <__lo0bits+0x22>
 80031a0:	07d9      	lsls	r1, r3, #31
 80031a2:	d421      	bmi.n	80031e8 <__lo0bits+0x52>
 80031a4:	0798      	lsls	r0, r3, #30
 80031a6:	bf49      	itett	mi
 80031a8:	085b      	lsrmi	r3, r3, #1
 80031aa:	089b      	lsrpl	r3, r3, #2
 80031ac:	2001      	movmi	r0, #1
 80031ae:	6013      	strmi	r3, [r2, #0]
 80031b0:	bf5c      	itt	pl
 80031b2:	6013      	strpl	r3, [r2, #0]
 80031b4:	2002      	movpl	r0, #2
 80031b6:	4770      	bx	lr
 80031b8:	b299      	uxth	r1, r3
 80031ba:	b909      	cbnz	r1, 80031c0 <__lo0bits+0x2a>
 80031bc:	0c1b      	lsrs	r3, r3, #16
 80031be:	2010      	movs	r0, #16
 80031c0:	b2d9      	uxtb	r1, r3
 80031c2:	b909      	cbnz	r1, 80031c8 <__lo0bits+0x32>
 80031c4:	3008      	adds	r0, #8
 80031c6:	0a1b      	lsrs	r3, r3, #8
 80031c8:	0719      	lsls	r1, r3, #28
 80031ca:	bf04      	itt	eq
 80031cc:	091b      	lsreq	r3, r3, #4
 80031ce:	3004      	addeq	r0, #4
 80031d0:	0799      	lsls	r1, r3, #30
 80031d2:	bf04      	itt	eq
 80031d4:	089b      	lsreq	r3, r3, #2
 80031d6:	3002      	addeq	r0, #2
 80031d8:	07d9      	lsls	r1, r3, #31
 80031da:	d403      	bmi.n	80031e4 <__lo0bits+0x4e>
 80031dc:	085b      	lsrs	r3, r3, #1
 80031de:	f100 0001 	add.w	r0, r0, #1
 80031e2:	d003      	beq.n	80031ec <__lo0bits+0x56>
 80031e4:	6013      	str	r3, [r2, #0]
 80031e6:	4770      	bx	lr
 80031e8:	2000      	movs	r0, #0
 80031ea:	4770      	bx	lr
 80031ec:	2020      	movs	r0, #32
 80031ee:	4770      	bx	lr

080031f0 <__i2b>:
 80031f0:	b510      	push	{r4, lr}
 80031f2:	460c      	mov	r4, r1
 80031f4:	2101      	movs	r1, #1
 80031f6:	f7ff ff07 	bl	8003008 <_Balloc>
 80031fa:	4602      	mov	r2, r0
 80031fc:	b928      	cbnz	r0, 800320a <__i2b+0x1a>
 80031fe:	4b05      	ldr	r3, [pc, #20]	@ (8003214 <__i2b+0x24>)
 8003200:	4805      	ldr	r0, [pc, #20]	@ (8003218 <__i2b+0x28>)
 8003202:	f240 1145 	movw	r1, #325	@ 0x145
 8003206:	f000 fd09 	bl	8003c1c <__assert_func>
 800320a:	2301      	movs	r3, #1
 800320c:	6144      	str	r4, [r0, #20]
 800320e:	6103      	str	r3, [r0, #16]
 8003210:	bd10      	pop	{r4, pc}
 8003212:	bf00      	nop
 8003214:	08003e8f 	.word	0x08003e8f
 8003218:	08003ea0 	.word	0x08003ea0

0800321c <__multiply>:
 800321c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003220:	4617      	mov	r7, r2
 8003222:	690a      	ldr	r2, [r1, #16]
 8003224:	693b      	ldr	r3, [r7, #16]
 8003226:	429a      	cmp	r2, r3
 8003228:	bfa8      	it	ge
 800322a:	463b      	movge	r3, r7
 800322c:	4689      	mov	r9, r1
 800322e:	bfa4      	itt	ge
 8003230:	460f      	movge	r7, r1
 8003232:	4699      	movge	r9, r3
 8003234:	693d      	ldr	r5, [r7, #16]
 8003236:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800323a:	68bb      	ldr	r3, [r7, #8]
 800323c:	6879      	ldr	r1, [r7, #4]
 800323e:	eb05 060a 	add.w	r6, r5, sl
 8003242:	42b3      	cmp	r3, r6
 8003244:	b085      	sub	sp, #20
 8003246:	bfb8      	it	lt
 8003248:	3101      	addlt	r1, #1
 800324a:	f7ff fedd 	bl	8003008 <_Balloc>
 800324e:	b930      	cbnz	r0, 800325e <__multiply+0x42>
 8003250:	4602      	mov	r2, r0
 8003252:	4b41      	ldr	r3, [pc, #260]	@ (8003358 <__multiply+0x13c>)
 8003254:	4841      	ldr	r0, [pc, #260]	@ (800335c <__multiply+0x140>)
 8003256:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800325a:	f000 fcdf 	bl	8003c1c <__assert_func>
 800325e:	f100 0414 	add.w	r4, r0, #20
 8003262:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8003266:	4623      	mov	r3, r4
 8003268:	2200      	movs	r2, #0
 800326a:	4573      	cmp	r3, lr
 800326c:	d320      	bcc.n	80032b0 <__multiply+0x94>
 800326e:	f107 0814 	add.w	r8, r7, #20
 8003272:	f109 0114 	add.w	r1, r9, #20
 8003276:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 800327a:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 800327e:	9302      	str	r3, [sp, #8]
 8003280:	1beb      	subs	r3, r5, r7
 8003282:	3b15      	subs	r3, #21
 8003284:	f023 0303 	bic.w	r3, r3, #3
 8003288:	3304      	adds	r3, #4
 800328a:	3715      	adds	r7, #21
 800328c:	42bd      	cmp	r5, r7
 800328e:	bf38      	it	cc
 8003290:	2304      	movcc	r3, #4
 8003292:	9301      	str	r3, [sp, #4]
 8003294:	9b02      	ldr	r3, [sp, #8]
 8003296:	9103      	str	r1, [sp, #12]
 8003298:	428b      	cmp	r3, r1
 800329a:	d80c      	bhi.n	80032b6 <__multiply+0x9a>
 800329c:	2e00      	cmp	r6, #0
 800329e:	dd03      	ble.n	80032a8 <__multiply+0x8c>
 80032a0:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 80032a4:	2b00      	cmp	r3, #0
 80032a6:	d055      	beq.n	8003354 <__multiply+0x138>
 80032a8:	6106      	str	r6, [r0, #16]
 80032aa:	b005      	add	sp, #20
 80032ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032b0:	f843 2b04 	str.w	r2, [r3], #4
 80032b4:	e7d9      	b.n	800326a <__multiply+0x4e>
 80032b6:	f8b1 a000 	ldrh.w	sl, [r1]
 80032ba:	f1ba 0f00 	cmp.w	sl, #0
 80032be:	d01f      	beq.n	8003300 <__multiply+0xe4>
 80032c0:	46c4      	mov	ip, r8
 80032c2:	46a1      	mov	r9, r4
 80032c4:	2700      	movs	r7, #0
 80032c6:	f85c 2b04 	ldr.w	r2, [ip], #4
 80032ca:	f8d9 3000 	ldr.w	r3, [r9]
 80032ce:	fa1f fb82 	uxth.w	fp, r2
 80032d2:	b29b      	uxth	r3, r3
 80032d4:	fb0a 330b 	mla	r3, sl, fp, r3
 80032d8:	443b      	add	r3, r7
 80032da:	f8d9 7000 	ldr.w	r7, [r9]
 80032de:	0c12      	lsrs	r2, r2, #16
 80032e0:	0c3f      	lsrs	r7, r7, #16
 80032e2:	fb0a 7202 	mla	r2, sl, r2, r7
 80032e6:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 80032ea:	b29b      	uxth	r3, r3
 80032ec:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80032f0:	4565      	cmp	r5, ip
 80032f2:	f849 3b04 	str.w	r3, [r9], #4
 80032f6:	ea4f 4712 	mov.w	r7, r2, lsr #16
 80032fa:	d8e4      	bhi.n	80032c6 <__multiply+0xaa>
 80032fc:	9b01      	ldr	r3, [sp, #4]
 80032fe:	50e7      	str	r7, [r4, r3]
 8003300:	9b03      	ldr	r3, [sp, #12]
 8003302:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003306:	3104      	adds	r1, #4
 8003308:	f1b9 0f00 	cmp.w	r9, #0
 800330c:	d020      	beq.n	8003350 <__multiply+0x134>
 800330e:	6823      	ldr	r3, [r4, #0]
 8003310:	4647      	mov	r7, r8
 8003312:	46a4      	mov	ip, r4
 8003314:	f04f 0a00 	mov.w	sl, #0
 8003318:	f8b7 b000 	ldrh.w	fp, [r7]
 800331c:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 8003320:	fb09 220b 	mla	r2, r9, fp, r2
 8003324:	4452      	add	r2, sl
 8003326:	b29b      	uxth	r3, r3
 8003328:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800332c:	f84c 3b04 	str.w	r3, [ip], #4
 8003330:	f857 3b04 	ldr.w	r3, [r7], #4
 8003334:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003338:	f8bc 3000 	ldrh.w	r3, [ip]
 800333c:	fb09 330a 	mla	r3, r9, sl, r3
 8003340:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8003344:	42bd      	cmp	r5, r7
 8003346:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800334a:	d8e5      	bhi.n	8003318 <__multiply+0xfc>
 800334c:	9a01      	ldr	r2, [sp, #4]
 800334e:	50a3      	str	r3, [r4, r2]
 8003350:	3404      	adds	r4, #4
 8003352:	e79f      	b.n	8003294 <__multiply+0x78>
 8003354:	3e01      	subs	r6, #1
 8003356:	e7a1      	b.n	800329c <__multiply+0x80>
 8003358:	08003e8f 	.word	0x08003e8f
 800335c:	08003ea0 	.word	0x08003ea0

08003360 <__pow5mult>:
 8003360:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003364:	4615      	mov	r5, r2
 8003366:	f012 0203 	ands.w	r2, r2, #3
 800336a:	4607      	mov	r7, r0
 800336c:	460e      	mov	r6, r1
 800336e:	d007      	beq.n	8003380 <__pow5mult+0x20>
 8003370:	4c25      	ldr	r4, [pc, #148]	@ (8003408 <__pow5mult+0xa8>)
 8003372:	3a01      	subs	r2, #1
 8003374:	2300      	movs	r3, #0
 8003376:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800337a:	f7ff fea7 	bl	80030cc <__multadd>
 800337e:	4606      	mov	r6, r0
 8003380:	10ad      	asrs	r5, r5, #2
 8003382:	d03d      	beq.n	8003400 <__pow5mult+0xa0>
 8003384:	69fc      	ldr	r4, [r7, #28]
 8003386:	b97c      	cbnz	r4, 80033a8 <__pow5mult+0x48>
 8003388:	2010      	movs	r0, #16
 800338a:	f7ff fd87 	bl	8002e9c <malloc>
 800338e:	4602      	mov	r2, r0
 8003390:	61f8      	str	r0, [r7, #28]
 8003392:	b928      	cbnz	r0, 80033a0 <__pow5mult+0x40>
 8003394:	4b1d      	ldr	r3, [pc, #116]	@ (800340c <__pow5mult+0xac>)
 8003396:	481e      	ldr	r0, [pc, #120]	@ (8003410 <__pow5mult+0xb0>)
 8003398:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800339c:	f000 fc3e 	bl	8003c1c <__assert_func>
 80033a0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80033a4:	6004      	str	r4, [r0, #0]
 80033a6:	60c4      	str	r4, [r0, #12]
 80033a8:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80033ac:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80033b0:	b94c      	cbnz	r4, 80033c6 <__pow5mult+0x66>
 80033b2:	f240 2171 	movw	r1, #625	@ 0x271
 80033b6:	4638      	mov	r0, r7
 80033b8:	f7ff ff1a 	bl	80031f0 <__i2b>
 80033bc:	2300      	movs	r3, #0
 80033be:	f8c8 0008 	str.w	r0, [r8, #8]
 80033c2:	4604      	mov	r4, r0
 80033c4:	6003      	str	r3, [r0, #0]
 80033c6:	f04f 0900 	mov.w	r9, #0
 80033ca:	07eb      	lsls	r3, r5, #31
 80033cc:	d50a      	bpl.n	80033e4 <__pow5mult+0x84>
 80033ce:	4631      	mov	r1, r6
 80033d0:	4622      	mov	r2, r4
 80033d2:	4638      	mov	r0, r7
 80033d4:	f7ff ff22 	bl	800321c <__multiply>
 80033d8:	4631      	mov	r1, r6
 80033da:	4680      	mov	r8, r0
 80033dc:	4638      	mov	r0, r7
 80033de:	f7ff fe53 	bl	8003088 <_Bfree>
 80033e2:	4646      	mov	r6, r8
 80033e4:	106d      	asrs	r5, r5, #1
 80033e6:	d00b      	beq.n	8003400 <__pow5mult+0xa0>
 80033e8:	6820      	ldr	r0, [r4, #0]
 80033ea:	b938      	cbnz	r0, 80033fc <__pow5mult+0x9c>
 80033ec:	4622      	mov	r2, r4
 80033ee:	4621      	mov	r1, r4
 80033f0:	4638      	mov	r0, r7
 80033f2:	f7ff ff13 	bl	800321c <__multiply>
 80033f6:	6020      	str	r0, [r4, #0]
 80033f8:	f8c0 9000 	str.w	r9, [r0]
 80033fc:	4604      	mov	r4, r0
 80033fe:	e7e4      	b.n	80033ca <__pow5mult+0x6a>
 8003400:	4630      	mov	r0, r6
 8003402:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003406:	bf00      	nop
 8003408:	08003f50 	.word	0x08003f50
 800340c:	08003e20 	.word	0x08003e20
 8003410:	08003ea0 	.word	0x08003ea0

08003414 <__lshift>:
 8003414:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003418:	460c      	mov	r4, r1
 800341a:	6849      	ldr	r1, [r1, #4]
 800341c:	6923      	ldr	r3, [r4, #16]
 800341e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003422:	68a3      	ldr	r3, [r4, #8]
 8003424:	4607      	mov	r7, r0
 8003426:	4691      	mov	r9, r2
 8003428:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800342c:	f108 0601 	add.w	r6, r8, #1
 8003430:	42b3      	cmp	r3, r6
 8003432:	db0b      	blt.n	800344c <__lshift+0x38>
 8003434:	4638      	mov	r0, r7
 8003436:	f7ff fde7 	bl	8003008 <_Balloc>
 800343a:	4605      	mov	r5, r0
 800343c:	b948      	cbnz	r0, 8003452 <__lshift+0x3e>
 800343e:	4602      	mov	r2, r0
 8003440:	4b28      	ldr	r3, [pc, #160]	@ (80034e4 <__lshift+0xd0>)
 8003442:	4829      	ldr	r0, [pc, #164]	@ (80034e8 <__lshift+0xd4>)
 8003444:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003448:	f000 fbe8 	bl	8003c1c <__assert_func>
 800344c:	3101      	adds	r1, #1
 800344e:	005b      	lsls	r3, r3, #1
 8003450:	e7ee      	b.n	8003430 <__lshift+0x1c>
 8003452:	2300      	movs	r3, #0
 8003454:	f100 0114 	add.w	r1, r0, #20
 8003458:	f100 0210 	add.w	r2, r0, #16
 800345c:	4618      	mov	r0, r3
 800345e:	4553      	cmp	r3, sl
 8003460:	db33      	blt.n	80034ca <__lshift+0xb6>
 8003462:	6920      	ldr	r0, [r4, #16]
 8003464:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003468:	f104 0314 	add.w	r3, r4, #20
 800346c:	f019 091f 	ands.w	r9, r9, #31
 8003470:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003474:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003478:	d02b      	beq.n	80034d2 <__lshift+0xbe>
 800347a:	f1c9 0e20 	rsb	lr, r9, #32
 800347e:	468a      	mov	sl, r1
 8003480:	2200      	movs	r2, #0
 8003482:	6818      	ldr	r0, [r3, #0]
 8003484:	fa00 f009 	lsl.w	r0, r0, r9
 8003488:	4310      	orrs	r0, r2
 800348a:	f84a 0b04 	str.w	r0, [sl], #4
 800348e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003492:	459c      	cmp	ip, r3
 8003494:	fa22 f20e 	lsr.w	r2, r2, lr
 8003498:	d8f3      	bhi.n	8003482 <__lshift+0x6e>
 800349a:	ebac 0304 	sub.w	r3, ip, r4
 800349e:	3b15      	subs	r3, #21
 80034a0:	f023 0303 	bic.w	r3, r3, #3
 80034a4:	3304      	adds	r3, #4
 80034a6:	f104 0015 	add.w	r0, r4, #21
 80034aa:	4560      	cmp	r0, ip
 80034ac:	bf88      	it	hi
 80034ae:	2304      	movhi	r3, #4
 80034b0:	50ca      	str	r2, [r1, r3]
 80034b2:	b10a      	cbz	r2, 80034b8 <__lshift+0xa4>
 80034b4:	f108 0602 	add.w	r6, r8, #2
 80034b8:	3e01      	subs	r6, #1
 80034ba:	4638      	mov	r0, r7
 80034bc:	612e      	str	r6, [r5, #16]
 80034be:	4621      	mov	r1, r4
 80034c0:	f7ff fde2 	bl	8003088 <_Bfree>
 80034c4:	4628      	mov	r0, r5
 80034c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80034ca:	f842 0f04 	str.w	r0, [r2, #4]!
 80034ce:	3301      	adds	r3, #1
 80034d0:	e7c5      	b.n	800345e <__lshift+0x4a>
 80034d2:	3904      	subs	r1, #4
 80034d4:	f853 2b04 	ldr.w	r2, [r3], #4
 80034d8:	f841 2f04 	str.w	r2, [r1, #4]!
 80034dc:	459c      	cmp	ip, r3
 80034de:	d8f9      	bhi.n	80034d4 <__lshift+0xc0>
 80034e0:	e7ea      	b.n	80034b8 <__lshift+0xa4>
 80034e2:	bf00      	nop
 80034e4:	08003e8f 	.word	0x08003e8f
 80034e8:	08003ea0 	.word	0x08003ea0

080034ec <__mcmp>:
 80034ec:	690a      	ldr	r2, [r1, #16]
 80034ee:	4603      	mov	r3, r0
 80034f0:	6900      	ldr	r0, [r0, #16]
 80034f2:	1a80      	subs	r0, r0, r2
 80034f4:	b530      	push	{r4, r5, lr}
 80034f6:	d10e      	bne.n	8003516 <__mcmp+0x2a>
 80034f8:	3314      	adds	r3, #20
 80034fa:	3114      	adds	r1, #20
 80034fc:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003500:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003504:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003508:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800350c:	4295      	cmp	r5, r2
 800350e:	d003      	beq.n	8003518 <__mcmp+0x2c>
 8003510:	d205      	bcs.n	800351e <__mcmp+0x32>
 8003512:	f04f 30ff 	mov.w	r0, #4294967295
 8003516:	bd30      	pop	{r4, r5, pc}
 8003518:	42a3      	cmp	r3, r4
 800351a:	d3f3      	bcc.n	8003504 <__mcmp+0x18>
 800351c:	e7fb      	b.n	8003516 <__mcmp+0x2a>
 800351e:	2001      	movs	r0, #1
 8003520:	e7f9      	b.n	8003516 <__mcmp+0x2a>
	...

08003524 <__mdiff>:
 8003524:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003528:	4689      	mov	r9, r1
 800352a:	4606      	mov	r6, r0
 800352c:	4611      	mov	r1, r2
 800352e:	4648      	mov	r0, r9
 8003530:	4614      	mov	r4, r2
 8003532:	f7ff ffdb 	bl	80034ec <__mcmp>
 8003536:	1e05      	subs	r5, r0, #0
 8003538:	d112      	bne.n	8003560 <__mdiff+0x3c>
 800353a:	4629      	mov	r1, r5
 800353c:	4630      	mov	r0, r6
 800353e:	f7ff fd63 	bl	8003008 <_Balloc>
 8003542:	4602      	mov	r2, r0
 8003544:	b928      	cbnz	r0, 8003552 <__mdiff+0x2e>
 8003546:	4b3f      	ldr	r3, [pc, #252]	@ (8003644 <__mdiff+0x120>)
 8003548:	f240 2137 	movw	r1, #567	@ 0x237
 800354c:	483e      	ldr	r0, [pc, #248]	@ (8003648 <__mdiff+0x124>)
 800354e:	f000 fb65 	bl	8003c1c <__assert_func>
 8003552:	2301      	movs	r3, #1
 8003554:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003558:	4610      	mov	r0, r2
 800355a:	b003      	add	sp, #12
 800355c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003560:	bfbc      	itt	lt
 8003562:	464b      	movlt	r3, r9
 8003564:	46a1      	movlt	r9, r4
 8003566:	4630      	mov	r0, r6
 8003568:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800356c:	bfba      	itte	lt
 800356e:	461c      	movlt	r4, r3
 8003570:	2501      	movlt	r5, #1
 8003572:	2500      	movge	r5, #0
 8003574:	f7ff fd48 	bl	8003008 <_Balloc>
 8003578:	4602      	mov	r2, r0
 800357a:	b918      	cbnz	r0, 8003584 <__mdiff+0x60>
 800357c:	4b31      	ldr	r3, [pc, #196]	@ (8003644 <__mdiff+0x120>)
 800357e:	f240 2145 	movw	r1, #581	@ 0x245
 8003582:	e7e3      	b.n	800354c <__mdiff+0x28>
 8003584:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003588:	6926      	ldr	r6, [r4, #16]
 800358a:	60c5      	str	r5, [r0, #12]
 800358c:	f109 0310 	add.w	r3, r9, #16
 8003590:	f109 0514 	add.w	r5, r9, #20
 8003594:	f104 0e14 	add.w	lr, r4, #20
 8003598:	f100 0b14 	add.w	fp, r0, #20
 800359c:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80035a0:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80035a4:	9301      	str	r3, [sp, #4]
 80035a6:	46d9      	mov	r9, fp
 80035a8:	f04f 0c00 	mov.w	ip, #0
 80035ac:	9b01      	ldr	r3, [sp, #4]
 80035ae:	f85e 0b04 	ldr.w	r0, [lr], #4
 80035b2:	f853 af04 	ldr.w	sl, [r3, #4]!
 80035b6:	9301      	str	r3, [sp, #4]
 80035b8:	fa1f f38a 	uxth.w	r3, sl
 80035bc:	4619      	mov	r1, r3
 80035be:	b283      	uxth	r3, r0
 80035c0:	1acb      	subs	r3, r1, r3
 80035c2:	0c00      	lsrs	r0, r0, #16
 80035c4:	4463      	add	r3, ip
 80035c6:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80035ca:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80035ce:	b29b      	uxth	r3, r3
 80035d0:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80035d4:	4576      	cmp	r6, lr
 80035d6:	f849 3b04 	str.w	r3, [r9], #4
 80035da:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80035de:	d8e5      	bhi.n	80035ac <__mdiff+0x88>
 80035e0:	1b33      	subs	r3, r6, r4
 80035e2:	3b15      	subs	r3, #21
 80035e4:	f023 0303 	bic.w	r3, r3, #3
 80035e8:	3415      	adds	r4, #21
 80035ea:	3304      	adds	r3, #4
 80035ec:	42a6      	cmp	r6, r4
 80035ee:	bf38      	it	cc
 80035f0:	2304      	movcc	r3, #4
 80035f2:	441d      	add	r5, r3
 80035f4:	445b      	add	r3, fp
 80035f6:	461e      	mov	r6, r3
 80035f8:	462c      	mov	r4, r5
 80035fa:	4544      	cmp	r4, r8
 80035fc:	d30e      	bcc.n	800361c <__mdiff+0xf8>
 80035fe:	f108 0103 	add.w	r1, r8, #3
 8003602:	1b49      	subs	r1, r1, r5
 8003604:	f021 0103 	bic.w	r1, r1, #3
 8003608:	3d03      	subs	r5, #3
 800360a:	45a8      	cmp	r8, r5
 800360c:	bf38      	it	cc
 800360e:	2100      	movcc	r1, #0
 8003610:	440b      	add	r3, r1
 8003612:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003616:	b191      	cbz	r1, 800363e <__mdiff+0x11a>
 8003618:	6117      	str	r7, [r2, #16]
 800361a:	e79d      	b.n	8003558 <__mdiff+0x34>
 800361c:	f854 1b04 	ldr.w	r1, [r4], #4
 8003620:	46e6      	mov	lr, ip
 8003622:	0c08      	lsrs	r0, r1, #16
 8003624:	fa1c fc81 	uxtah	ip, ip, r1
 8003628:	4471      	add	r1, lr
 800362a:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800362e:	b289      	uxth	r1, r1
 8003630:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003634:	f846 1b04 	str.w	r1, [r6], #4
 8003638:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800363c:	e7dd      	b.n	80035fa <__mdiff+0xd6>
 800363e:	3f01      	subs	r7, #1
 8003640:	e7e7      	b.n	8003612 <__mdiff+0xee>
 8003642:	bf00      	nop
 8003644:	08003e8f 	.word	0x08003e8f
 8003648:	08003ea0 	.word	0x08003ea0

0800364c <__d2b>:
 800364c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003650:	460f      	mov	r7, r1
 8003652:	2101      	movs	r1, #1
 8003654:	ec59 8b10 	vmov	r8, r9, d0
 8003658:	4616      	mov	r6, r2
 800365a:	f7ff fcd5 	bl	8003008 <_Balloc>
 800365e:	4604      	mov	r4, r0
 8003660:	b930      	cbnz	r0, 8003670 <__d2b+0x24>
 8003662:	4602      	mov	r2, r0
 8003664:	4b23      	ldr	r3, [pc, #140]	@ (80036f4 <__d2b+0xa8>)
 8003666:	4824      	ldr	r0, [pc, #144]	@ (80036f8 <__d2b+0xac>)
 8003668:	f240 310f 	movw	r1, #783	@ 0x30f
 800366c:	f000 fad6 	bl	8003c1c <__assert_func>
 8003670:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003674:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003678:	b10d      	cbz	r5, 800367e <__d2b+0x32>
 800367a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800367e:	9301      	str	r3, [sp, #4]
 8003680:	f1b8 0300 	subs.w	r3, r8, #0
 8003684:	d023      	beq.n	80036ce <__d2b+0x82>
 8003686:	4668      	mov	r0, sp
 8003688:	9300      	str	r3, [sp, #0]
 800368a:	f7ff fd84 	bl	8003196 <__lo0bits>
 800368e:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003692:	b1d0      	cbz	r0, 80036ca <__d2b+0x7e>
 8003694:	f1c0 0320 	rsb	r3, r0, #32
 8003698:	fa02 f303 	lsl.w	r3, r2, r3
 800369c:	430b      	orrs	r3, r1
 800369e:	40c2      	lsrs	r2, r0
 80036a0:	6163      	str	r3, [r4, #20]
 80036a2:	9201      	str	r2, [sp, #4]
 80036a4:	9b01      	ldr	r3, [sp, #4]
 80036a6:	61a3      	str	r3, [r4, #24]
 80036a8:	2b00      	cmp	r3, #0
 80036aa:	bf0c      	ite	eq
 80036ac:	2201      	moveq	r2, #1
 80036ae:	2202      	movne	r2, #2
 80036b0:	6122      	str	r2, [r4, #16]
 80036b2:	b1a5      	cbz	r5, 80036de <__d2b+0x92>
 80036b4:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80036b8:	4405      	add	r5, r0
 80036ba:	603d      	str	r5, [r7, #0]
 80036bc:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80036c0:	6030      	str	r0, [r6, #0]
 80036c2:	4620      	mov	r0, r4
 80036c4:	b003      	add	sp, #12
 80036c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80036ca:	6161      	str	r1, [r4, #20]
 80036cc:	e7ea      	b.n	80036a4 <__d2b+0x58>
 80036ce:	a801      	add	r0, sp, #4
 80036d0:	f7ff fd61 	bl	8003196 <__lo0bits>
 80036d4:	9b01      	ldr	r3, [sp, #4]
 80036d6:	6163      	str	r3, [r4, #20]
 80036d8:	3020      	adds	r0, #32
 80036da:	2201      	movs	r2, #1
 80036dc:	e7e8      	b.n	80036b0 <__d2b+0x64>
 80036de:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80036e2:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80036e6:	6038      	str	r0, [r7, #0]
 80036e8:	6918      	ldr	r0, [r3, #16]
 80036ea:	f7ff fd35 	bl	8003158 <__hi0bits>
 80036ee:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80036f2:	e7e5      	b.n	80036c0 <__d2b+0x74>
 80036f4:	08003e8f 	.word	0x08003e8f
 80036f8:	08003ea0 	.word	0x08003ea0

080036fc <__sfputc_r>:
 80036fc:	6893      	ldr	r3, [r2, #8]
 80036fe:	3b01      	subs	r3, #1
 8003700:	2b00      	cmp	r3, #0
 8003702:	b410      	push	{r4}
 8003704:	6093      	str	r3, [r2, #8]
 8003706:	da08      	bge.n	800371a <__sfputc_r+0x1e>
 8003708:	6994      	ldr	r4, [r2, #24]
 800370a:	42a3      	cmp	r3, r4
 800370c:	db01      	blt.n	8003712 <__sfputc_r+0x16>
 800370e:	290a      	cmp	r1, #10
 8003710:	d103      	bne.n	800371a <__sfputc_r+0x1e>
 8003712:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003716:	f7fe bc08 	b.w	8001f2a <__swbuf_r>
 800371a:	6813      	ldr	r3, [r2, #0]
 800371c:	1c58      	adds	r0, r3, #1
 800371e:	6010      	str	r0, [r2, #0]
 8003720:	7019      	strb	r1, [r3, #0]
 8003722:	4608      	mov	r0, r1
 8003724:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003728:	4770      	bx	lr

0800372a <__sfputs_r>:
 800372a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800372c:	4606      	mov	r6, r0
 800372e:	460f      	mov	r7, r1
 8003730:	4614      	mov	r4, r2
 8003732:	18d5      	adds	r5, r2, r3
 8003734:	42ac      	cmp	r4, r5
 8003736:	d101      	bne.n	800373c <__sfputs_r+0x12>
 8003738:	2000      	movs	r0, #0
 800373a:	e007      	b.n	800374c <__sfputs_r+0x22>
 800373c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003740:	463a      	mov	r2, r7
 8003742:	4630      	mov	r0, r6
 8003744:	f7ff ffda 	bl	80036fc <__sfputc_r>
 8003748:	1c43      	adds	r3, r0, #1
 800374a:	d1f3      	bne.n	8003734 <__sfputs_r+0xa>
 800374c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003750 <_vfiprintf_r>:
 8003750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003754:	460d      	mov	r5, r1
 8003756:	b09d      	sub	sp, #116	@ 0x74
 8003758:	4614      	mov	r4, r2
 800375a:	4698      	mov	r8, r3
 800375c:	4606      	mov	r6, r0
 800375e:	b118      	cbz	r0, 8003768 <_vfiprintf_r+0x18>
 8003760:	6a03      	ldr	r3, [r0, #32]
 8003762:	b90b      	cbnz	r3, 8003768 <_vfiprintf_r+0x18>
 8003764:	f7fe faf8 	bl	8001d58 <__sinit>
 8003768:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800376a:	07d9      	lsls	r1, r3, #31
 800376c:	d405      	bmi.n	800377a <_vfiprintf_r+0x2a>
 800376e:	89ab      	ldrh	r3, [r5, #12]
 8003770:	059a      	lsls	r2, r3, #22
 8003772:	d402      	bmi.n	800377a <_vfiprintf_r+0x2a>
 8003774:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003776:	f7fe fcea 	bl	800214e <__retarget_lock_acquire_recursive>
 800377a:	89ab      	ldrh	r3, [r5, #12]
 800377c:	071b      	lsls	r3, r3, #28
 800377e:	d501      	bpl.n	8003784 <_vfiprintf_r+0x34>
 8003780:	692b      	ldr	r3, [r5, #16]
 8003782:	b99b      	cbnz	r3, 80037ac <_vfiprintf_r+0x5c>
 8003784:	4629      	mov	r1, r5
 8003786:	4630      	mov	r0, r6
 8003788:	f7fe fc0e 	bl	8001fa8 <__swsetup_r>
 800378c:	b170      	cbz	r0, 80037ac <_vfiprintf_r+0x5c>
 800378e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003790:	07dc      	lsls	r4, r3, #31
 8003792:	d504      	bpl.n	800379e <_vfiprintf_r+0x4e>
 8003794:	f04f 30ff 	mov.w	r0, #4294967295
 8003798:	b01d      	add	sp, #116	@ 0x74
 800379a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800379e:	89ab      	ldrh	r3, [r5, #12]
 80037a0:	0598      	lsls	r0, r3, #22
 80037a2:	d4f7      	bmi.n	8003794 <_vfiprintf_r+0x44>
 80037a4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80037a6:	f7fe fcd3 	bl	8002150 <__retarget_lock_release_recursive>
 80037aa:	e7f3      	b.n	8003794 <_vfiprintf_r+0x44>
 80037ac:	2300      	movs	r3, #0
 80037ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80037b0:	2320      	movs	r3, #32
 80037b2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80037b6:	f8cd 800c 	str.w	r8, [sp, #12]
 80037ba:	2330      	movs	r3, #48	@ 0x30
 80037bc:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800396c <_vfiprintf_r+0x21c>
 80037c0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80037c4:	f04f 0901 	mov.w	r9, #1
 80037c8:	4623      	mov	r3, r4
 80037ca:	469a      	mov	sl, r3
 80037cc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80037d0:	b10a      	cbz	r2, 80037d6 <_vfiprintf_r+0x86>
 80037d2:	2a25      	cmp	r2, #37	@ 0x25
 80037d4:	d1f9      	bne.n	80037ca <_vfiprintf_r+0x7a>
 80037d6:	ebba 0b04 	subs.w	fp, sl, r4
 80037da:	d00b      	beq.n	80037f4 <_vfiprintf_r+0xa4>
 80037dc:	465b      	mov	r3, fp
 80037de:	4622      	mov	r2, r4
 80037e0:	4629      	mov	r1, r5
 80037e2:	4630      	mov	r0, r6
 80037e4:	f7ff ffa1 	bl	800372a <__sfputs_r>
 80037e8:	3001      	adds	r0, #1
 80037ea:	f000 80a7 	beq.w	800393c <_vfiprintf_r+0x1ec>
 80037ee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80037f0:	445a      	add	r2, fp
 80037f2:	9209      	str	r2, [sp, #36]	@ 0x24
 80037f4:	f89a 3000 	ldrb.w	r3, [sl]
 80037f8:	2b00      	cmp	r3, #0
 80037fa:	f000 809f 	beq.w	800393c <_vfiprintf_r+0x1ec>
 80037fe:	2300      	movs	r3, #0
 8003800:	f04f 32ff 	mov.w	r2, #4294967295
 8003804:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003808:	f10a 0a01 	add.w	sl, sl, #1
 800380c:	9304      	str	r3, [sp, #16]
 800380e:	9307      	str	r3, [sp, #28]
 8003810:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003814:	931a      	str	r3, [sp, #104]	@ 0x68
 8003816:	4654      	mov	r4, sl
 8003818:	2205      	movs	r2, #5
 800381a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800381e:	4853      	ldr	r0, [pc, #332]	@ (800396c <_vfiprintf_r+0x21c>)
 8003820:	f7fc fcd6 	bl	80001d0 <memchr>
 8003824:	9a04      	ldr	r2, [sp, #16]
 8003826:	b9d8      	cbnz	r0, 8003860 <_vfiprintf_r+0x110>
 8003828:	06d1      	lsls	r1, r2, #27
 800382a:	bf44      	itt	mi
 800382c:	2320      	movmi	r3, #32
 800382e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003832:	0713      	lsls	r3, r2, #28
 8003834:	bf44      	itt	mi
 8003836:	232b      	movmi	r3, #43	@ 0x2b
 8003838:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800383c:	f89a 3000 	ldrb.w	r3, [sl]
 8003840:	2b2a      	cmp	r3, #42	@ 0x2a
 8003842:	d015      	beq.n	8003870 <_vfiprintf_r+0x120>
 8003844:	9a07      	ldr	r2, [sp, #28]
 8003846:	4654      	mov	r4, sl
 8003848:	2000      	movs	r0, #0
 800384a:	f04f 0c0a 	mov.w	ip, #10
 800384e:	4621      	mov	r1, r4
 8003850:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003854:	3b30      	subs	r3, #48	@ 0x30
 8003856:	2b09      	cmp	r3, #9
 8003858:	d94b      	bls.n	80038f2 <_vfiprintf_r+0x1a2>
 800385a:	b1b0      	cbz	r0, 800388a <_vfiprintf_r+0x13a>
 800385c:	9207      	str	r2, [sp, #28]
 800385e:	e014      	b.n	800388a <_vfiprintf_r+0x13a>
 8003860:	eba0 0308 	sub.w	r3, r0, r8
 8003864:	fa09 f303 	lsl.w	r3, r9, r3
 8003868:	4313      	orrs	r3, r2
 800386a:	9304      	str	r3, [sp, #16]
 800386c:	46a2      	mov	sl, r4
 800386e:	e7d2      	b.n	8003816 <_vfiprintf_r+0xc6>
 8003870:	9b03      	ldr	r3, [sp, #12]
 8003872:	1d19      	adds	r1, r3, #4
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	9103      	str	r1, [sp, #12]
 8003878:	2b00      	cmp	r3, #0
 800387a:	bfbb      	ittet	lt
 800387c:	425b      	neglt	r3, r3
 800387e:	f042 0202 	orrlt.w	r2, r2, #2
 8003882:	9307      	strge	r3, [sp, #28]
 8003884:	9307      	strlt	r3, [sp, #28]
 8003886:	bfb8      	it	lt
 8003888:	9204      	strlt	r2, [sp, #16]
 800388a:	7823      	ldrb	r3, [r4, #0]
 800388c:	2b2e      	cmp	r3, #46	@ 0x2e
 800388e:	d10a      	bne.n	80038a6 <_vfiprintf_r+0x156>
 8003890:	7863      	ldrb	r3, [r4, #1]
 8003892:	2b2a      	cmp	r3, #42	@ 0x2a
 8003894:	d132      	bne.n	80038fc <_vfiprintf_r+0x1ac>
 8003896:	9b03      	ldr	r3, [sp, #12]
 8003898:	1d1a      	adds	r2, r3, #4
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	9203      	str	r2, [sp, #12]
 800389e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80038a2:	3402      	adds	r4, #2
 80038a4:	9305      	str	r3, [sp, #20]
 80038a6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800397c <_vfiprintf_r+0x22c>
 80038aa:	7821      	ldrb	r1, [r4, #0]
 80038ac:	2203      	movs	r2, #3
 80038ae:	4650      	mov	r0, sl
 80038b0:	f7fc fc8e 	bl	80001d0 <memchr>
 80038b4:	b138      	cbz	r0, 80038c6 <_vfiprintf_r+0x176>
 80038b6:	9b04      	ldr	r3, [sp, #16]
 80038b8:	eba0 000a 	sub.w	r0, r0, sl
 80038bc:	2240      	movs	r2, #64	@ 0x40
 80038be:	4082      	lsls	r2, r0
 80038c0:	4313      	orrs	r3, r2
 80038c2:	3401      	adds	r4, #1
 80038c4:	9304      	str	r3, [sp, #16]
 80038c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80038ca:	4829      	ldr	r0, [pc, #164]	@ (8003970 <_vfiprintf_r+0x220>)
 80038cc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80038d0:	2206      	movs	r2, #6
 80038d2:	f7fc fc7d 	bl	80001d0 <memchr>
 80038d6:	2800      	cmp	r0, #0
 80038d8:	d03f      	beq.n	800395a <_vfiprintf_r+0x20a>
 80038da:	4b26      	ldr	r3, [pc, #152]	@ (8003974 <_vfiprintf_r+0x224>)
 80038dc:	bb1b      	cbnz	r3, 8003926 <_vfiprintf_r+0x1d6>
 80038de:	9b03      	ldr	r3, [sp, #12]
 80038e0:	3307      	adds	r3, #7
 80038e2:	f023 0307 	bic.w	r3, r3, #7
 80038e6:	3308      	adds	r3, #8
 80038e8:	9303      	str	r3, [sp, #12]
 80038ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80038ec:	443b      	add	r3, r7
 80038ee:	9309      	str	r3, [sp, #36]	@ 0x24
 80038f0:	e76a      	b.n	80037c8 <_vfiprintf_r+0x78>
 80038f2:	fb0c 3202 	mla	r2, ip, r2, r3
 80038f6:	460c      	mov	r4, r1
 80038f8:	2001      	movs	r0, #1
 80038fa:	e7a8      	b.n	800384e <_vfiprintf_r+0xfe>
 80038fc:	2300      	movs	r3, #0
 80038fe:	3401      	adds	r4, #1
 8003900:	9305      	str	r3, [sp, #20]
 8003902:	4619      	mov	r1, r3
 8003904:	f04f 0c0a 	mov.w	ip, #10
 8003908:	4620      	mov	r0, r4
 800390a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800390e:	3a30      	subs	r2, #48	@ 0x30
 8003910:	2a09      	cmp	r2, #9
 8003912:	d903      	bls.n	800391c <_vfiprintf_r+0x1cc>
 8003914:	2b00      	cmp	r3, #0
 8003916:	d0c6      	beq.n	80038a6 <_vfiprintf_r+0x156>
 8003918:	9105      	str	r1, [sp, #20]
 800391a:	e7c4      	b.n	80038a6 <_vfiprintf_r+0x156>
 800391c:	fb0c 2101 	mla	r1, ip, r1, r2
 8003920:	4604      	mov	r4, r0
 8003922:	2301      	movs	r3, #1
 8003924:	e7f0      	b.n	8003908 <_vfiprintf_r+0x1b8>
 8003926:	ab03      	add	r3, sp, #12
 8003928:	9300      	str	r3, [sp, #0]
 800392a:	462a      	mov	r2, r5
 800392c:	4b12      	ldr	r3, [pc, #72]	@ (8003978 <_vfiprintf_r+0x228>)
 800392e:	a904      	add	r1, sp, #16
 8003930:	4630      	mov	r0, r6
 8003932:	f7fd fdcf 	bl	80014d4 <_printf_float>
 8003936:	4607      	mov	r7, r0
 8003938:	1c78      	adds	r0, r7, #1
 800393a:	d1d6      	bne.n	80038ea <_vfiprintf_r+0x19a>
 800393c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800393e:	07d9      	lsls	r1, r3, #31
 8003940:	d405      	bmi.n	800394e <_vfiprintf_r+0x1fe>
 8003942:	89ab      	ldrh	r3, [r5, #12]
 8003944:	059a      	lsls	r2, r3, #22
 8003946:	d402      	bmi.n	800394e <_vfiprintf_r+0x1fe>
 8003948:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800394a:	f7fe fc01 	bl	8002150 <__retarget_lock_release_recursive>
 800394e:	89ab      	ldrh	r3, [r5, #12]
 8003950:	065b      	lsls	r3, r3, #25
 8003952:	f53f af1f 	bmi.w	8003794 <_vfiprintf_r+0x44>
 8003956:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003958:	e71e      	b.n	8003798 <_vfiprintf_r+0x48>
 800395a:	ab03      	add	r3, sp, #12
 800395c:	9300      	str	r3, [sp, #0]
 800395e:	462a      	mov	r2, r5
 8003960:	4b05      	ldr	r3, [pc, #20]	@ (8003978 <_vfiprintf_r+0x228>)
 8003962:	a904      	add	r1, sp, #16
 8003964:	4630      	mov	r0, r6
 8003966:	f7fe f84d 	bl	8001a04 <_printf_i>
 800396a:	e7e4      	b.n	8003936 <_vfiprintf_r+0x1e6>
 800396c:	08003ef9 	.word	0x08003ef9
 8003970:	08003f03 	.word	0x08003f03
 8003974:	080014d5 	.word	0x080014d5
 8003978:	0800372b 	.word	0x0800372b
 800397c:	08003eff 	.word	0x08003eff

08003980 <__sflush_r>:
 8003980:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003984:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003988:	0716      	lsls	r6, r2, #28
 800398a:	4605      	mov	r5, r0
 800398c:	460c      	mov	r4, r1
 800398e:	d454      	bmi.n	8003a3a <__sflush_r+0xba>
 8003990:	684b      	ldr	r3, [r1, #4]
 8003992:	2b00      	cmp	r3, #0
 8003994:	dc02      	bgt.n	800399c <__sflush_r+0x1c>
 8003996:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003998:	2b00      	cmp	r3, #0
 800399a:	dd48      	ble.n	8003a2e <__sflush_r+0xae>
 800399c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800399e:	2e00      	cmp	r6, #0
 80039a0:	d045      	beq.n	8003a2e <__sflush_r+0xae>
 80039a2:	2300      	movs	r3, #0
 80039a4:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80039a8:	682f      	ldr	r7, [r5, #0]
 80039aa:	6a21      	ldr	r1, [r4, #32]
 80039ac:	602b      	str	r3, [r5, #0]
 80039ae:	d030      	beq.n	8003a12 <__sflush_r+0x92>
 80039b0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80039b2:	89a3      	ldrh	r3, [r4, #12]
 80039b4:	0759      	lsls	r1, r3, #29
 80039b6:	d505      	bpl.n	80039c4 <__sflush_r+0x44>
 80039b8:	6863      	ldr	r3, [r4, #4]
 80039ba:	1ad2      	subs	r2, r2, r3
 80039bc:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80039be:	b10b      	cbz	r3, 80039c4 <__sflush_r+0x44>
 80039c0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80039c2:	1ad2      	subs	r2, r2, r3
 80039c4:	2300      	movs	r3, #0
 80039c6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80039c8:	6a21      	ldr	r1, [r4, #32]
 80039ca:	4628      	mov	r0, r5
 80039cc:	47b0      	blx	r6
 80039ce:	1c43      	adds	r3, r0, #1
 80039d0:	89a3      	ldrh	r3, [r4, #12]
 80039d2:	d106      	bne.n	80039e2 <__sflush_r+0x62>
 80039d4:	6829      	ldr	r1, [r5, #0]
 80039d6:	291d      	cmp	r1, #29
 80039d8:	d82b      	bhi.n	8003a32 <__sflush_r+0xb2>
 80039da:	4a2a      	ldr	r2, [pc, #168]	@ (8003a84 <__sflush_r+0x104>)
 80039dc:	40ca      	lsrs	r2, r1
 80039de:	07d6      	lsls	r6, r2, #31
 80039e0:	d527      	bpl.n	8003a32 <__sflush_r+0xb2>
 80039e2:	2200      	movs	r2, #0
 80039e4:	6062      	str	r2, [r4, #4]
 80039e6:	04d9      	lsls	r1, r3, #19
 80039e8:	6922      	ldr	r2, [r4, #16]
 80039ea:	6022      	str	r2, [r4, #0]
 80039ec:	d504      	bpl.n	80039f8 <__sflush_r+0x78>
 80039ee:	1c42      	adds	r2, r0, #1
 80039f0:	d101      	bne.n	80039f6 <__sflush_r+0x76>
 80039f2:	682b      	ldr	r3, [r5, #0]
 80039f4:	b903      	cbnz	r3, 80039f8 <__sflush_r+0x78>
 80039f6:	6560      	str	r0, [r4, #84]	@ 0x54
 80039f8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80039fa:	602f      	str	r7, [r5, #0]
 80039fc:	b1b9      	cbz	r1, 8003a2e <__sflush_r+0xae>
 80039fe:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003a02:	4299      	cmp	r1, r3
 8003a04:	d002      	beq.n	8003a0c <__sflush_r+0x8c>
 8003a06:	4628      	mov	r0, r5
 8003a08:	f7ff f9fe 	bl	8002e08 <_free_r>
 8003a0c:	2300      	movs	r3, #0
 8003a0e:	6363      	str	r3, [r4, #52]	@ 0x34
 8003a10:	e00d      	b.n	8003a2e <__sflush_r+0xae>
 8003a12:	2301      	movs	r3, #1
 8003a14:	4628      	mov	r0, r5
 8003a16:	47b0      	blx	r6
 8003a18:	4602      	mov	r2, r0
 8003a1a:	1c50      	adds	r0, r2, #1
 8003a1c:	d1c9      	bne.n	80039b2 <__sflush_r+0x32>
 8003a1e:	682b      	ldr	r3, [r5, #0]
 8003a20:	2b00      	cmp	r3, #0
 8003a22:	d0c6      	beq.n	80039b2 <__sflush_r+0x32>
 8003a24:	2b1d      	cmp	r3, #29
 8003a26:	d001      	beq.n	8003a2c <__sflush_r+0xac>
 8003a28:	2b16      	cmp	r3, #22
 8003a2a:	d11e      	bne.n	8003a6a <__sflush_r+0xea>
 8003a2c:	602f      	str	r7, [r5, #0]
 8003a2e:	2000      	movs	r0, #0
 8003a30:	e022      	b.n	8003a78 <__sflush_r+0xf8>
 8003a32:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003a36:	b21b      	sxth	r3, r3
 8003a38:	e01b      	b.n	8003a72 <__sflush_r+0xf2>
 8003a3a:	690f      	ldr	r7, [r1, #16]
 8003a3c:	2f00      	cmp	r7, #0
 8003a3e:	d0f6      	beq.n	8003a2e <__sflush_r+0xae>
 8003a40:	0793      	lsls	r3, r2, #30
 8003a42:	680e      	ldr	r6, [r1, #0]
 8003a44:	bf08      	it	eq
 8003a46:	694b      	ldreq	r3, [r1, #20]
 8003a48:	600f      	str	r7, [r1, #0]
 8003a4a:	bf18      	it	ne
 8003a4c:	2300      	movne	r3, #0
 8003a4e:	eba6 0807 	sub.w	r8, r6, r7
 8003a52:	608b      	str	r3, [r1, #8]
 8003a54:	f1b8 0f00 	cmp.w	r8, #0
 8003a58:	dde9      	ble.n	8003a2e <__sflush_r+0xae>
 8003a5a:	6a21      	ldr	r1, [r4, #32]
 8003a5c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8003a5e:	4643      	mov	r3, r8
 8003a60:	463a      	mov	r2, r7
 8003a62:	4628      	mov	r0, r5
 8003a64:	47b0      	blx	r6
 8003a66:	2800      	cmp	r0, #0
 8003a68:	dc08      	bgt.n	8003a7c <__sflush_r+0xfc>
 8003a6a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003a6e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003a72:	81a3      	strh	r3, [r4, #12]
 8003a74:	f04f 30ff 	mov.w	r0, #4294967295
 8003a78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003a7c:	4407      	add	r7, r0
 8003a7e:	eba8 0800 	sub.w	r8, r8, r0
 8003a82:	e7e7      	b.n	8003a54 <__sflush_r+0xd4>
 8003a84:	20400001 	.word	0x20400001

08003a88 <_fflush_r>:
 8003a88:	b538      	push	{r3, r4, r5, lr}
 8003a8a:	690b      	ldr	r3, [r1, #16]
 8003a8c:	4605      	mov	r5, r0
 8003a8e:	460c      	mov	r4, r1
 8003a90:	b913      	cbnz	r3, 8003a98 <_fflush_r+0x10>
 8003a92:	2500      	movs	r5, #0
 8003a94:	4628      	mov	r0, r5
 8003a96:	bd38      	pop	{r3, r4, r5, pc}
 8003a98:	b118      	cbz	r0, 8003aa2 <_fflush_r+0x1a>
 8003a9a:	6a03      	ldr	r3, [r0, #32]
 8003a9c:	b90b      	cbnz	r3, 8003aa2 <_fflush_r+0x1a>
 8003a9e:	f7fe f95b 	bl	8001d58 <__sinit>
 8003aa2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003aa6:	2b00      	cmp	r3, #0
 8003aa8:	d0f3      	beq.n	8003a92 <_fflush_r+0xa>
 8003aaa:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003aac:	07d0      	lsls	r0, r2, #31
 8003aae:	d404      	bmi.n	8003aba <_fflush_r+0x32>
 8003ab0:	0599      	lsls	r1, r3, #22
 8003ab2:	d402      	bmi.n	8003aba <_fflush_r+0x32>
 8003ab4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003ab6:	f7fe fb4a 	bl	800214e <__retarget_lock_acquire_recursive>
 8003aba:	4628      	mov	r0, r5
 8003abc:	4621      	mov	r1, r4
 8003abe:	f7ff ff5f 	bl	8003980 <__sflush_r>
 8003ac2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003ac4:	07da      	lsls	r2, r3, #31
 8003ac6:	4605      	mov	r5, r0
 8003ac8:	d4e4      	bmi.n	8003a94 <_fflush_r+0xc>
 8003aca:	89a3      	ldrh	r3, [r4, #12]
 8003acc:	059b      	lsls	r3, r3, #22
 8003ace:	d4e1      	bmi.n	8003a94 <_fflush_r+0xc>
 8003ad0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003ad2:	f7fe fb3d 	bl	8002150 <__retarget_lock_release_recursive>
 8003ad6:	e7dd      	b.n	8003a94 <_fflush_r+0xc>

08003ad8 <__swhatbuf_r>:
 8003ad8:	b570      	push	{r4, r5, r6, lr}
 8003ada:	460c      	mov	r4, r1
 8003adc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003ae0:	2900      	cmp	r1, #0
 8003ae2:	b096      	sub	sp, #88	@ 0x58
 8003ae4:	4615      	mov	r5, r2
 8003ae6:	461e      	mov	r6, r3
 8003ae8:	da0d      	bge.n	8003b06 <__swhatbuf_r+0x2e>
 8003aea:	89a3      	ldrh	r3, [r4, #12]
 8003aec:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8003af0:	f04f 0100 	mov.w	r1, #0
 8003af4:	bf14      	ite	ne
 8003af6:	2340      	movne	r3, #64	@ 0x40
 8003af8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8003afc:	2000      	movs	r0, #0
 8003afe:	6031      	str	r1, [r6, #0]
 8003b00:	602b      	str	r3, [r5, #0]
 8003b02:	b016      	add	sp, #88	@ 0x58
 8003b04:	bd70      	pop	{r4, r5, r6, pc}
 8003b06:	466a      	mov	r2, sp
 8003b08:	f000 f848 	bl	8003b9c <_fstat_r>
 8003b0c:	2800      	cmp	r0, #0
 8003b0e:	dbec      	blt.n	8003aea <__swhatbuf_r+0x12>
 8003b10:	9901      	ldr	r1, [sp, #4]
 8003b12:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8003b16:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8003b1a:	4259      	negs	r1, r3
 8003b1c:	4159      	adcs	r1, r3
 8003b1e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003b22:	e7eb      	b.n	8003afc <__swhatbuf_r+0x24>

08003b24 <__smakebuf_r>:
 8003b24:	898b      	ldrh	r3, [r1, #12]
 8003b26:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003b28:	079d      	lsls	r5, r3, #30
 8003b2a:	4606      	mov	r6, r0
 8003b2c:	460c      	mov	r4, r1
 8003b2e:	d507      	bpl.n	8003b40 <__smakebuf_r+0x1c>
 8003b30:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8003b34:	6023      	str	r3, [r4, #0]
 8003b36:	6123      	str	r3, [r4, #16]
 8003b38:	2301      	movs	r3, #1
 8003b3a:	6163      	str	r3, [r4, #20]
 8003b3c:	b003      	add	sp, #12
 8003b3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003b40:	ab01      	add	r3, sp, #4
 8003b42:	466a      	mov	r2, sp
 8003b44:	f7ff ffc8 	bl	8003ad8 <__swhatbuf_r>
 8003b48:	9f00      	ldr	r7, [sp, #0]
 8003b4a:	4605      	mov	r5, r0
 8003b4c:	4639      	mov	r1, r7
 8003b4e:	4630      	mov	r0, r6
 8003b50:	f7ff f9ce 	bl	8002ef0 <_malloc_r>
 8003b54:	b948      	cbnz	r0, 8003b6a <__smakebuf_r+0x46>
 8003b56:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003b5a:	059a      	lsls	r2, r3, #22
 8003b5c:	d4ee      	bmi.n	8003b3c <__smakebuf_r+0x18>
 8003b5e:	f023 0303 	bic.w	r3, r3, #3
 8003b62:	f043 0302 	orr.w	r3, r3, #2
 8003b66:	81a3      	strh	r3, [r4, #12]
 8003b68:	e7e2      	b.n	8003b30 <__smakebuf_r+0xc>
 8003b6a:	89a3      	ldrh	r3, [r4, #12]
 8003b6c:	6020      	str	r0, [r4, #0]
 8003b6e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003b72:	81a3      	strh	r3, [r4, #12]
 8003b74:	9b01      	ldr	r3, [sp, #4]
 8003b76:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8003b7a:	b15b      	cbz	r3, 8003b94 <__smakebuf_r+0x70>
 8003b7c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003b80:	4630      	mov	r0, r6
 8003b82:	f000 f81d 	bl	8003bc0 <_isatty_r>
 8003b86:	b128      	cbz	r0, 8003b94 <__smakebuf_r+0x70>
 8003b88:	89a3      	ldrh	r3, [r4, #12]
 8003b8a:	f023 0303 	bic.w	r3, r3, #3
 8003b8e:	f043 0301 	orr.w	r3, r3, #1
 8003b92:	81a3      	strh	r3, [r4, #12]
 8003b94:	89a3      	ldrh	r3, [r4, #12]
 8003b96:	431d      	orrs	r5, r3
 8003b98:	81a5      	strh	r5, [r4, #12]
 8003b9a:	e7cf      	b.n	8003b3c <__smakebuf_r+0x18>

08003b9c <_fstat_r>:
 8003b9c:	b538      	push	{r3, r4, r5, lr}
 8003b9e:	4d07      	ldr	r5, [pc, #28]	@ (8003bbc <_fstat_r+0x20>)
 8003ba0:	2300      	movs	r3, #0
 8003ba2:	4604      	mov	r4, r0
 8003ba4:	4608      	mov	r0, r1
 8003ba6:	4611      	mov	r1, r2
 8003ba8:	602b      	str	r3, [r5, #0]
 8003baa:	f7fd fb44 	bl	8001236 <_fstat>
 8003bae:	1c43      	adds	r3, r0, #1
 8003bb0:	d102      	bne.n	8003bb8 <_fstat_r+0x1c>
 8003bb2:	682b      	ldr	r3, [r5, #0]
 8003bb4:	b103      	cbz	r3, 8003bb8 <_fstat_r+0x1c>
 8003bb6:	6023      	str	r3, [r4, #0]
 8003bb8:	bd38      	pop	{r3, r4, r5, pc}
 8003bba:	bf00      	nop
 8003bbc:	2000032c 	.word	0x2000032c

08003bc0 <_isatty_r>:
 8003bc0:	b538      	push	{r3, r4, r5, lr}
 8003bc2:	4d06      	ldr	r5, [pc, #24]	@ (8003bdc <_isatty_r+0x1c>)
 8003bc4:	2300      	movs	r3, #0
 8003bc6:	4604      	mov	r4, r0
 8003bc8:	4608      	mov	r0, r1
 8003bca:	602b      	str	r3, [r5, #0]
 8003bcc:	f7fd fb43 	bl	8001256 <_isatty>
 8003bd0:	1c43      	adds	r3, r0, #1
 8003bd2:	d102      	bne.n	8003bda <_isatty_r+0x1a>
 8003bd4:	682b      	ldr	r3, [r5, #0]
 8003bd6:	b103      	cbz	r3, 8003bda <_isatty_r+0x1a>
 8003bd8:	6023      	str	r3, [r4, #0]
 8003bda:	bd38      	pop	{r3, r4, r5, pc}
 8003bdc:	2000032c 	.word	0x2000032c

08003be0 <_sbrk_r>:
 8003be0:	b538      	push	{r3, r4, r5, lr}
 8003be2:	4d06      	ldr	r5, [pc, #24]	@ (8003bfc <_sbrk_r+0x1c>)
 8003be4:	2300      	movs	r3, #0
 8003be6:	4604      	mov	r4, r0
 8003be8:	4608      	mov	r0, r1
 8003bea:	602b      	str	r3, [r5, #0]
 8003bec:	f7fd fb4c 	bl	8001288 <_sbrk>
 8003bf0:	1c43      	adds	r3, r0, #1
 8003bf2:	d102      	bne.n	8003bfa <_sbrk_r+0x1a>
 8003bf4:	682b      	ldr	r3, [r5, #0]
 8003bf6:	b103      	cbz	r3, 8003bfa <_sbrk_r+0x1a>
 8003bf8:	6023      	str	r3, [r4, #0]
 8003bfa:	bd38      	pop	{r3, r4, r5, pc}
 8003bfc:	2000032c 	.word	0x2000032c

08003c00 <memcpy>:
 8003c00:	440a      	add	r2, r1
 8003c02:	4291      	cmp	r1, r2
 8003c04:	f100 33ff 	add.w	r3, r0, #4294967295
 8003c08:	d100      	bne.n	8003c0c <memcpy+0xc>
 8003c0a:	4770      	bx	lr
 8003c0c:	b510      	push	{r4, lr}
 8003c0e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003c12:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003c16:	4291      	cmp	r1, r2
 8003c18:	d1f9      	bne.n	8003c0e <memcpy+0xe>
 8003c1a:	bd10      	pop	{r4, pc}

08003c1c <__assert_func>:
 8003c1c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003c1e:	4614      	mov	r4, r2
 8003c20:	461a      	mov	r2, r3
 8003c22:	4b09      	ldr	r3, [pc, #36]	@ (8003c48 <__assert_func+0x2c>)
 8003c24:	681b      	ldr	r3, [r3, #0]
 8003c26:	4605      	mov	r5, r0
 8003c28:	68d8      	ldr	r0, [r3, #12]
 8003c2a:	b14c      	cbz	r4, 8003c40 <__assert_func+0x24>
 8003c2c:	4b07      	ldr	r3, [pc, #28]	@ (8003c4c <__assert_func+0x30>)
 8003c2e:	9100      	str	r1, [sp, #0]
 8003c30:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003c34:	4906      	ldr	r1, [pc, #24]	@ (8003c50 <__assert_func+0x34>)
 8003c36:	462b      	mov	r3, r5
 8003c38:	f000 f842 	bl	8003cc0 <fiprintf>
 8003c3c:	f000 f852 	bl	8003ce4 <abort>
 8003c40:	4b04      	ldr	r3, [pc, #16]	@ (8003c54 <__assert_func+0x38>)
 8003c42:	461c      	mov	r4, r3
 8003c44:	e7f3      	b.n	8003c2e <__assert_func+0x12>
 8003c46:	bf00      	nop
 8003c48:	20000010 	.word	0x20000010
 8003c4c:	08003f14 	.word	0x08003f14
 8003c50:	08003f21 	.word	0x08003f21
 8003c54:	08003f4f 	.word	0x08003f4f

08003c58 <_calloc_r>:
 8003c58:	b570      	push	{r4, r5, r6, lr}
 8003c5a:	fba1 5402 	umull	r5, r4, r1, r2
 8003c5e:	b934      	cbnz	r4, 8003c6e <_calloc_r+0x16>
 8003c60:	4629      	mov	r1, r5
 8003c62:	f7ff f945 	bl	8002ef0 <_malloc_r>
 8003c66:	4606      	mov	r6, r0
 8003c68:	b928      	cbnz	r0, 8003c76 <_calloc_r+0x1e>
 8003c6a:	4630      	mov	r0, r6
 8003c6c:	bd70      	pop	{r4, r5, r6, pc}
 8003c6e:	220c      	movs	r2, #12
 8003c70:	6002      	str	r2, [r0, #0]
 8003c72:	2600      	movs	r6, #0
 8003c74:	e7f9      	b.n	8003c6a <_calloc_r+0x12>
 8003c76:	462a      	mov	r2, r5
 8003c78:	4621      	mov	r1, r4
 8003c7a:	f7fe f9eb 	bl	8002054 <memset>
 8003c7e:	e7f4      	b.n	8003c6a <_calloc_r+0x12>

08003c80 <__ascii_mbtowc>:
 8003c80:	b082      	sub	sp, #8
 8003c82:	b901      	cbnz	r1, 8003c86 <__ascii_mbtowc+0x6>
 8003c84:	a901      	add	r1, sp, #4
 8003c86:	b142      	cbz	r2, 8003c9a <__ascii_mbtowc+0x1a>
 8003c88:	b14b      	cbz	r3, 8003c9e <__ascii_mbtowc+0x1e>
 8003c8a:	7813      	ldrb	r3, [r2, #0]
 8003c8c:	600b      	str	r3, [r1, #0]
 8003c8e:	7812      	ldrb	r2, [r2, #0]
 8003c90:	1e10      	subs	r0, r2, #0
 8003c92:	bf18      	it	ne
 8003c94:	2001      	movne	r0, #1
 8003c96:	b002      	add	sp, #8
 8003c98:	4770      	bx	lr
 8003c9a:	4610      	mov	r0, r2
 8003c9c:	e7fb      	b.n	8003c96 <__ascii_mbtowc+0x16>
 8003c9e:	f06f 0001 	mvn.w	r0, #1
 8003ca2:	e7f8      	b.n	8003c96 <__ascii_mbtowc+0x16>

08003ca4 <__ascii_wctomb>:
 8003ca4:	4603      	mov	r3, r0
 8003ca6:	4608      	mov	r0, r1
 8003ca8:	b141      	cbz	r1, 8003cbc <__ascii_wctomb+0x18>
 8003caa:	2aff      	cmp	r2, #255	@ 0xff
 8003cac:	d904      	bls.n	8003cb8 <__ascii_wctomb+0x14>
 8003cae:	228a      	movs	r2, #138	@ 0x8a
 8003cb0:	601a      	str	r2, [r3, #0]
 8003cb2:	f04f 30ff 	mov.w	r0, #4294967295
 8003cb6:	4770      	bx	lr
 8003cb8:	700a      	strb	r2, [r1, #0]
 8003cba:	2001      	movs	r0, #1
 8003cbc:	4770      	bx	lr
	...

08003cc0 <fiprintf>:
 8003cc0:	b40e      	push	{r1, r2, r3}
 8003cc2:	b503      	push	{r0, r1, lr}
 8003cc4:	4601      	mov	r1, r0
 8003cc6:	ab03      	add	r3, sp, #12
 8003cc8:	4805      	ldr	r0, [pc, #20]	@ (8003ce0 <fiprintf+0x20>)
 8003cca:	f853 2b04 	ldr.w	r2, [r3], #4
 8003cce:	6800      	ldr	r0, [r0, #0]
 8003cd0:	9301      	str	r3, [sp, #4]
 8003cd2:	f7ff fd3d 	bl	8003750 <_vfiprintf_r>
 8003cd6:	b002      	add	sp, #8
 8003cd8:	f85d eb04 	ldr.w	lr, [sp], #4
 8003cdc:	b003      	add	sp, #12
 8003cde:	4770      	bx	lr
 8003ce0:	20000010 	.word	0x20000010

08003ce4 <abort>:
 8003ce4:	b508      	push	{r3, lr}
 8003ce6:	2006      	movs	r0, #6
 8003ce8:	f000 f82c 	bl	8003d44 <raise>
 8003cec:	2001      	movs	r0, #1
 8003cee:	f7fd fa52 	bl	8001196 <_exit>

08003cf2 <_raise_r>:
 8003cf2:	291f      	cmp	r1, #31
 8003cf4:	b538      	push	{r3, r4, r5, lr}
 8003cf6:	4605      	mov	r5, r0
 8003cf8:	460c      	mov	r4, r1
 8003cfa:	d904      	bls.n	8003d06 <_raise_r+0x14>
 8003cfc:	2316      	movs	r3, #22
 8003cfe:	6003      	str	r3, [r0, #0]
 8003d00:	f04f 30ff 	mov.w	r0, #4294967295
 8003d04:	bd38      	pop	{r3, r4, r5, pc}
 8003d06:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8003d08:	b112      	cbz	r2, 8003d10 <_raise_r+0x1e>
 8003d0a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003d0e:	b94b      	cbnz	r3, 8003d24 <_raise_r+0x32>
 8003d10:	4628      	mov	r0, r5
 8003d12:	f000 f831 	bl	8003d78 <_getpid_r>
 8003d16:	4622      	mov	r2, r4
 8003d18:	4601      	mov	r1, r0
 8003d1a:	4628      	mov	r0, r5
 8003d1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003d20:	f000 b818 	b.w	8003d54 <_kill_r>
 8003d24:	2b01      	cmp	r3, #1
 8003d26:	d00a      	beq.n	8003d3e <_raise_r+0x4c>
 8003d28:	1c59      	adds	r1, r3, #1
 8003d2a:	d103      	bne.n	8003d34 <_raise_r+0x42>
 8003d2c:	2316      	movs	r3, #22
 8003d2e:	6003      	str	r3, [r0, #0]
 8003d30:	2001      	movs	r0, #1
 8003d32:	e7e7      	b.n	8003d04 <_raise_r+0x12>
 8003d34:	2100      	movs	r1, #0
 8003d36:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8003d3a:	4620      	mov	r0, r4
 8003d3c:	4798      	blx	r3
 8003d3e:	2000      	movs	r0, #0
 8003d40:	e7e0      	b.n	8003d04 <_raise_r+0x12>
	...

08003d44 <raise>:
 8003d44:	4b02      	ldr	r3, [pc, #8]	@ (8003d50 <raise+0xc>)
 8003d46:	4601      	mov	r1, r0
 8003d48:	6818      	ldr	r0, [r3, #0]
 8003d4a:	f7ff bfd2 	b.w	8003cf2 <_raise_r>
 8003d4e:	bf00      	nop
 8003d50:	20000010 	.word	0x20000010

08003d54 <_kill_r>:
 8003d54:	b538      	push	{r3, r4, r5, lr}
 8003d56:	4d07      	ldr	r5, [pc, #28]	@ (8003d74 <_kill_r+0x20>)
 8003d58:	2300      	movs	r3, #0
 8003d5a:	4604      	mov	r4, r0
 8003d5c:	4608      	mov	r0, r1
 8003d5e:	4611      	mov	r1, r2
 8003d60:	602b      	str	r3, [r5, #0]
 8003d62:	f7fd fa08 	bl	8001176 <_kill>
 8003d66:	1c43      	adds	r3, r0, #1
 8003d68:	d102      	bne.n	8003d70 <_kill_r+0x1c>
 8003d6a:	682b      	ldr	r3, [r5, #0]
 8003d6c:	b103      	cbz	r3, 8003d70 <_kill_r+0x1c>
 8003d6e:	6023      	str	r3, [r4, #0]
 8003d70:	bd38      	pop	{r3, r4, r5, pc}
 8003d72:	bf00      	nop
 8003d74:	2000032c 	.word	0x2000032c

08003d78 <_getpid_r>:
 8003d78:	f7fd b9f5 	b.w	8001166 <_getpid>

08003d7c <_init>:
 8003d7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d7e:	bf00      	nop
 8003d80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003d82:	bc08      	pop	{r3}
 8003d84:	469e      	mov	lr, r3
 8003d86:	4770      	bx	lr

08003d88 <_fini>:
 8003d88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d8a:	bf00      	nop
 8003d8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003d8e:	bc08      	pop	{r3}
 8003d90:	469e      	mov	lr, r3
 8003d92:	4770      	bx	lr
